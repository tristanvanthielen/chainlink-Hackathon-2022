{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "subscriptionId",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "link",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "keyHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "have",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "want",
          "type": "address"
        }
      ],
      "name": "OnlyCoordinatorCanFulfill",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "randomNumber",
          "type": "uint256"
        }
      ],
      "name": "ReturnedRandomness",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CROSSBOW_COMMON",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CROSSBOW_LEGENDARY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CROSSBOW_RARE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CROSSBOW_UNCOMMON",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DAGGER_COMMON",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DAGGER_LEGENDARY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DAGGER_RARE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DAGGER_UNCOMMON",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SWORD_COMMON",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SWORD_LEGENDARY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SWORD_RARE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SWORD_UNCOMMON",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UPGRADE_FACTOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UPGRADE_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_randomNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "nonDeterministicUpgradeItem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "randomWords",
          "type": "uint256[]"
        }
      ],
      "name": "rawFulfillRandomWords",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startingCommonCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/dries/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/ERC1155.sol",
    "1": "/home/dries/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/IERC1155.sol",
    "10": "/home/dries/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
    "11": "contracts/Anvil.sol",
    "3": "/home/dries/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
    "5": "/home/dries/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "6": "/home/dries/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
    "7": "/home/dries/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol",
    "8": "/home/dries/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/VRFConsumerBaseV2.sol",
    "9": "/home/dries/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/interfaces/LinkTokenInterface.sol"
  },
  "ast": {
    "absolutePath": "contracts/Anvil.sol",
    "exportedSymbols": {
      "Address": [
        2670
      ],
      "Anvil": [
        293
      ],
      "Context": [
        2692
      ],
      "ERC1155": [
        1953
      ],
      "ERC165": [
        2716
      ],
      "IERC1155": [
        2317
      ],
      "IERC1155MetadataURI": [
        2373
      ],
      "IERC1155Receiver": [
        2358
      ],
      "IERC165": [
        2728
      ],
      "LinkTokenInterface": [
        2106
      ],
      "VRFConsumerBaseV2": [
        2011
      ],
      "VRFCoordinatorV2Interface": [
        2195
      ]
    },
    "id": 294,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "151:23:11"
      },
      {
        "absolutePath": "/home/dries/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC1155/ERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 294,
        "sourceUnit": 1954,
        "src": "176:59:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dries/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 294,
        "sourceUnit": 2196,
        "src": "236:80:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dries/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/VRFConsumerBaseV2.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 294,
        "sourceUnit": 2012,
        "src": "317:61:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dries/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 294,
        "sourceUnit": 2107,
        "src": "379:73:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "ERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1953,
              "src": "531:7:11"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "531:7:11"
          },
          {
            "baseName": {
              "id": 8,
              "name": "VRFConsumerBaseV2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2011,
              "src": "540:17:11"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "540:17:11"
          }
        ],
        "canonicalName": "Anvil",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 293,
        "linearizedBaseContracts": [
          293,
          2011,
          1953,
          2373,
          2317,
          2716,
          2728,
          2692
        ],
        "name": "Anvil",
        "nameLocation": "522:5:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Anvil.UpgradeRequest",
            "id": 14,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "player",
                "nameLocation": "649:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "641:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "641:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "itemId",
                "nameLocation": "727:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "719:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "719:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UpgradeRequest",
            "nameLocation": "572:14:11",
            "nodeType": "StructDefinition",
            "scope": 293,
            "src": "565:175:11",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "upgradeRequests",
            "nameLocation": "781:15:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "746:50:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UpgradeRequest_$14_storage_$",
              "typeString": "mapping(uint256 => struct Anvil.UpgradeRequest)"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 15,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "754:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "746:34:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UpgradeRequest_$14_storage_$",
                "typeString": "mapping(uint256 => struct Anvil.UpgradeRequest)"
              },
              "valueType": {
                "id": 17,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 16,
                  "name": "UpgradeRequest",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14,
                  "src": "765:14:11"
                },
                "referencedDeclaration": 14,
                "src": "765:14:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UpgradeRequest_$14_storage_ptr",
                  "typeString": "struct Anvil.UpgradeRequest"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "45d759a9",
            "id": 22,
            "mutability": "constant",
            "name": "CROSSBOW_COMMON",
            "nameLocation": "893:15:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "869:43:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "869:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 21,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "911:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "75d29f31",
            "id": 25,
            "mutability": "constant",
            "name": "CROSSBOW_UNCOMMON",
            "nameLocation": "942:17:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "918:45:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "918:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 24,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "962:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "c13435ca",
            "id": 28,
            "mutability": "constant",
            "name": "CROSSBOW_RARE",
            "nameLocation": "993:13:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "969:41:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "969:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1009:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "684261c4",
            "id": 31,
            "mutability": "constant",
            "name": "CROSSBOW_LEGENDARY",
            "nameLocation": "1040:18:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "1016:46:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1016:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1061:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "afb705b5",
            "id": 34,
            "mutability": "constant",
            "name": "SWORD_COMMON",
            "nameLocation": "1093:12:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "1069:41:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1069:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 33,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1108:2:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2e82439f",
            "id": 37,
            "mutability": "constant",
            "name": "SWORD_UNCOMMON",
            "nameLocation": "1140:14:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "1116:43:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1116:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3131",
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1157:2:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_11_by_1",
                "typeString": "int_const 11"
              },
              "value": "11"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "9bbc7c72",
            "id": 40,
            "mutability": "constant",
            "name": "SWORD_RARE",
            "nameLocation": "1189:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "1165:39:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1165:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3132",
              "id": 39,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1202:2:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_12_by_1",
                "typeString": "int_const 12"
              },
              "value": "12"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "da63c07f",
            "id": 43,
            "mutability": "constant",
            "name": "SWORD_LEGENDARY",
            "nameLocation": "1234:15:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "1210:44:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 41,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1210:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3133",
              "id": 42,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1252:2:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_13_by_1",
                "typeString": "int_const 13"
              },
              "value": "13"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "ba865cce",
            "id": 46,
            "mutability": "constant",
            "name": "DAGGER_COMMON",
            "nameLocation": "1285:13:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "1261:42:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1261:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1301:2:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20_by_1",
                "typeString": "int_const 20"
              },
              "value": "20"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "bc50a0c1",
            "id": 49,
            "mutability": "constant",
            "name": "DAGGER_UNCOMMON",
            "nameLocation": "1333:15:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "1309:44:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 47,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1309:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3231",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1351:2:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21_by_1",
                "typeString": "int_const 21"
              },
              "value": "21"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "a785a86d",
            "id": 52,
            "mutability": "constant",
            "name": "DAGGER_RARE",
            "nameLocation": "1383:11:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "1359:40:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1359:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3232",
              "id": 51,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1397:2:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_22_by_1",
                "typeString": "int_const 22"
              },
              "value": "22"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "853b15af",
            "id": 55,
            "mutability": "constant",
            "name": "DAGGER_LEGENDARY",
            "nameLocation": "1429:16:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "1405:45:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 53,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1405:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3233",
              "id": 54,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1448:2:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_23_by_1",
                "typeString": "int_const 23"
              },
              "value": "23"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "a01f44fb",
            "id": 60,
            "mutability": "constant",
            "name": "startingCommonCount",
            "nameLocation": "1550:19:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "1526:52:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 56,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1526:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              },
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 57,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1572:2:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3237",
                "id": 58,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1576:2:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_27_by_1",
                  "typeString": "int_const 27"
                },
                "value": "27"
              },
              "src": "1572:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "a4f1adff",
            "id": 63,
            "mutability": "constant",
            "name": "UPGRADE_PERCENTAGE",
            "nameLocation": "1656:18:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "1632:47:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1632:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 62,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1677:2:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "b07708d3",
            "id": 66,
            "mutability": "constant",
            "name": "UPGRADE_FACTOR",
            "nameLocation": "1985:14:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "1961:43:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 64,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1961:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 65,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2002:2:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 68,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "2027:5:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "2012:20:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 67,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2012:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 71,
            "mutability": "immutable",
            "name": "COORDINATOR",
            "nameLocation": "2146:11:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "2110:47:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$2195",
              "typeString": "contract VRFCoordinatorV2Interface"
            },
            "typeName": {
              "id": 70,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 69,
                "name": "VRFCoordinatorV2Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2195,
                "src": "2110:25:11"
              },
              "referencedDeclaration": 2195,
              "src": "2110:25:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$2195",
                "typeString": "contract VRFCoordinatorV2Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 74,
            "mutability": "immutable",
            "name": "LINKTOKEN",
            "nameLocation": "2192:9:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "2163:38:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$2106",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "id": 73,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 72,
                "name": "LinkTokenInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2106,
                "src": "2163:18:11"
              },
              "referencedDeclaration": 2106,
              "src": "2163:18:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$2106",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 76,
            "mutability": "mutable",
            "name": "s_subscriptionId",
            "nameLocation": "2214:16:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "2207:23:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 75,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "2207:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 78,
            "mutability": "immutable",
            "name": "s_keyHash",
            "nameLocation": "2460:9:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "2442:27:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 77,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2442:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 81,
            "mutability": "immutable",
            "name": "s_callbackGasLimit",
            "nameLocation": "2492:18:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "2475:44:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 79,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "2475:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "313030303030",
              "id": 80,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2513:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000_by_1",
                "typeString": "int_const 100000"
              },
              "value": "100000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 84,
            "mutability": "mutable",
            "name": "requestConfirmations",
            "nameLocation": "2531:20:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "2524:31:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 82,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "2524:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 83,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2554:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 87,
            "mutability": "immutable",
            "name": "s_numWords",
            "nameLocation": "2578:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "2561:31:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 85,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "2561:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 86,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2591:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "61652450",
            "id": 89,
            "mutability": "mutable",
            "name": "_randomNumber",
            "nameLocation": "2613:13:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "2598:28:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 88,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2598:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 92,
            "mutability": "immutable",
            "name": "s_requestConfirmations",
            "nameLocation": "2649:22:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "2632:43:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 90,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "2632:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 91,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2674:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 94,
            "mutability": "mutable",
            "name": "s_owner",
            "nameLocation": "2689:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 293,
            "src": "2681:15:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 93,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2681:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "62e0f3b955d02692c7bc11e60c384d9eaec33908c4a2d399d566fa6b4942178f",
            "id": 98,
            "name": "ReturnedRandomness",
            "nameLocation": "2709:18:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "randomNumber",
                  "nameLocation": "2736:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "2728:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2728:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2727:22:11"
            },
            "src": "2703:47:11"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "2977:496:11",
              "statements": [
                {
                  "expression": {
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 115,
                      "name": "COORDINATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "2988:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$2195",
                        "typeString": "contract VRFCoordinatorV2Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 117,
                          "name": "vrfCoordinator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "3028:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 116,
                        "name": "VRFCoordinatorV2Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2195,
                        "src": "3002:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_VRFCoordinatorV2Interface_$2195_$",
                          "typeString": "type(contract VRFCoordinatorV2Interface)"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3002:41:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$2195",
                        "typeString": "contract VRFCoordinatorV2Interface"
                      }
                    },
                    "src": "2988:55:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$2195",
                      "typeString": "contract VRFCoordinatorV2Interface"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "2988:55:11"
                },
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 121,
                      "name": "LINKTOKEN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "3053:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$2106",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 123,
                          "name": "link",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "3084:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 122,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2106,
                        "src": "3065:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$2106_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3065:24:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$2106",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "3053:36:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$2106",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "3053:36:11"
                },
                {
                  "expression": {
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 127,
                      "name": "s_keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "3099:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 128,
                      "name": "keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "3111:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3099:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "3099:19:11"
                },
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 131,
                      "name": "s_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "3128:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 132,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3138:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3138:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3128:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "3128:20:11"
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 136,
                      "name": "s_subscriptionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "3158:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 137,
                      "name": "subscriptionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "3177:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3158:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "3158:33:11"
                },
                {
                  "expression": {
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 140,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "3216:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 141,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3224:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3224:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3216:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "3216:18:11"
                },
                {
                  "documentation": "ERC1155 INIT *",
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 146,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3280:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3280:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 148,
                        "name": "CROSSBOW_COMMON",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "3292:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 149,
                        "name": "startingCommonCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "3309:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3330:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 145,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1488,
                      "src": "3274:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3274:59:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "3274:59:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 154,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3349:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3349:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 156,
                        "name": "SWORD_COMMON",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "3361:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 157,
                        "name": "startingCommonCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "3375:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3396:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 153,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1488,
                      "src": "3343:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3343:56:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "3343:56:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 162,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3415:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3415:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 164,
                        "name": "DAGGER_COMMON",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "3427:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 165,
                        "name": "startingCommonCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "3442:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3463:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 161,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1488,
                      "src": "3409:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3409:57:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3409:57:11"
                }
              ]
            },
            "id": 170,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e",
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2893:41:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1",
                      "typeString": "literal_string \"https://game.example/api/item/{id}.json\""
                    },
                    "value": "https://game.example/api/item/{id}.json"
                  }
                ],
                "id": 110,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 108,
                  "name": "ERC1155",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1953,
                  "src": "2885:7:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "2885:50:11"
              },
              {
                "arguments": [
                  {
                    "id": 112,
                    "name": "vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102,
                    "src": "2962:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 113,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 111,
                  "name": "VRFConsumerBaseV2",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2011,
                  "src": "2944:17:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "2944:33:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "subscriptionId",
                  "nameLocation": "2785:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2778:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2778:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "vrfCoordinator",
                  "nameLocation": "2817:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2809:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2809:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "link",
                  "nameLocation": "2849:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2841:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2841:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "keyHash",
                  "nameLocation": "2871:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "2863:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2863:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2768:116:11"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2977:0:11"
            },
            "scope": 293,
            "src": "2757:716:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 224,
              "nodeType": "Block",
              "src": "3977:961:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 181,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "4007:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 182,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2682,
                              "src": "4015:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4015:12:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4007:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 186,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 173,
                              "src": "4048:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 187,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2682,
                                "src": "4054:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4054:12:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 185,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1104,
                            "src": "4031:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4031:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4007:60:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416e76696c3a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4080:41:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1a11fd18e17ec3dfc485d4d1c9297acb73059a5b2a2f4bd8ea4c6d7deb654f4",
                          "typeString": "literal_string \"Anvil: caller is not owner nor approved\""
                        },
                        "value": "Anvil: caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1a11fd18e17ec3dfc485d4d1c9297acb73059a5b2a2f4bd8ea4c6d7deb654f4",
                          "typeString": "literal_string \"Anvil: caller is not owner nor approved\""
                        }
                      ],
                      "id": 180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3987:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3987:144:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "3987:144:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 195,
                            "name": "itemId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 175,
                            "src": "4441:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4450:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "4441:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4455:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "4441:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416e76696c3a2043616e6e6f742075706772616465206c6567656e64617279206974656d",
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4459:38:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06ae063a0cbb86208685dc8adc46d4c5e3c364c80e4dc6c2cfc651737fa0763e",
                          "typeString": "literal_string \"Anvil: Cannot upgrade legendary item\""
                        },
                        "value": "Anvil: Cannot upgrade legendary item"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06ae063a0cbb86208685dc8adc46d4c5e3c364c80e4dc6c2cfc651737fa0763e",
                          "typeString": "literal_string \"Anvil: Cannot upgrade legendary item\""
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4433:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4433:65:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "4433:65:11"
                },
                {
                  "expression": {
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 203,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "4582:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 206,
                          "name": "s_keyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "4638:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 207,
                          "name": "s_subscriptionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "4661:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 208,
                          "name": "s_requestConfirmations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "4691:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "id": 209,
                          "name": "s_callbackGasLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "4727:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 210,
                          "name": "s_numWords",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "4759:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "expression": {
                          "id": 204,
                          "name": "COORDINATOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "4594:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$2195",
                            "typeString": "contract VRFCoordinatorV2Interface"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestRandomWords",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2135,
                        "src": "4594:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$",
                          "typeString": "function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"
                        }
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4594:185:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4582:197:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "4582:197:11"
                },
                {
                  "expression": {
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 214,
                        "name": "upgradeRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "4829:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UpgradeRequest_$14_storage_$",
                          "typeString": "mapping(uint256 => struct Anvil.UpgradeRequest storage ref)"
                        }
                      },
                      "id": 216,
                      "indexExpression": {
                        "id": 215,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "4845:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4829:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UpgradeRequest_$14_storage",
                        "typeString": "struct Anvil.UpgradeRequest storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 218,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4886:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4886:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 220,
                          "name": "itemId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 175,
                          "src": "4910:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 217,
                        "name": "UpgradeRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "4858:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_UpgradeRequest_$14_storage_ptr_$",
                          "typeString": "type(struct Anvil.UpgradeRequest storage pointer)"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4858:72:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UpgradeRequest_$14_memory_ptr",
                        "typeString": "struct Anvil.UpgradeRequest memory"
                      }
                    },
                    "src": "4829:101:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UpgradeRequest_$14_storage",
                      "typeString": "struct Anvil.UpgradeRequest storage ref"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "4829:101:11"
                }
              ]
            },
            "documentation": {
              "id": 171,
              "nodeType": "StructuredDocumentation",
              "src": "3480:388:11",
              "text": " @dev Destroys `UPGRADE_FACTOR` tokens of token type `id` from `from` and has `UPGRADE_PERCENTAGE` chance of minting token `id+1`\n Emits a {???????? -- check if we need} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`.\n TODO implement approval"
            },
            "functionSelector": "d9a93bdf",
            "id": 225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nonDeterministicUpgradeItem",
            "nameLocation": "3882:27:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3918:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "3910:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3910:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "itemId",
                  "nameLocation": "3931:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "3923:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3923:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3909:29:11"
            },
            "returnParameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "3965:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "3957:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3957:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3956:19:11"
            },
            "scope": 293,
            "src": "3873:1065:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1984
            ],
            "body": {
              "id": 280,
              "nodeType": "Block",
              "src": "5130:488:11",
              "statements": [
                {
                  "assignments": [
                    236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 236,
                      "mutability": "mutable",
                      "name": "u",
                      "nameLocation": "5164:1:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 280,
                      "src": "5141:24:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UpgradeRequest_$14_storage_ptr",
                        "typeString": "struct Anvil.UpgradeRequest"
                      },
                      "typeName": {
                        "id": 235,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 234,
                          "name": "UpgradeRequest",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "5141:14:11"
                        },
                        "referencedDeclaration": 14,
                        "src": "5141:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UpgradeRequest_$14_storage_ptr",
                          "typeString": "struct Anvil.UpgradeRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 240,
                  "initialValue": {
                    "baseExpression": {
                      "id": 237,
                      "name": "upgradeRequests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "5168:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UpgradeRequest_$14_storage_$",
                        "typeString": "mapping(uint256 => struct Anvil.UpgradeRequest storage ref)"
                      }
                    },
                    "id": 239,
                    "indexExpression": {
                      "id": 238,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "5184:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5168:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UpgradeRequest_$14_storage",
                      "typeString": "struct Anvil.UpgradeRequest storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5141:53:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 242,
                          "name": "u",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 236,
                          "src": "5267:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UpgradeRequest_$14_storage_ptr",
                            "typeString": "struct Anvil.UpgradeRequest storage pointer"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "player",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "5267:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 244,
                          "name": "u",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 236,
                          "src": "5277:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UpgradeRequest_$14_storage_ptr",
                            "typeString": "struct Anvil.UpgradeRequest storage pointer"
                          }
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "itemId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "5277:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 246,
                        "name": "UPGRADE_FACTOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "5287:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 241,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1666,
                      "src": "5261:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5261:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "5261:41:11"
                },
                {
                  "expression": {
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 249,
                      "name": "_randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "5411:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 250,
                                "name": "randomWords",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 230,
                                "src": "5428:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 252,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5440:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5428:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5445:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "5428:20:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 255,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5427:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5452:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5427:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5411:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "5411:42:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 260,
                      "name": "_randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "5467:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 261,
                      "name": "UPGRADE_PERCENTAGE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "5484:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5467:35:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 275,
                  "nodeType": "IfStatement",
                  "src": "5463:100:11",
                  "trueBody": {
                    "id": 274,
                    "nodeType": "Block",
                    "src": "5504:59:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 264,
                                "name": "u",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 236,
                                "src": "5524:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UpgradeRequest_$14_storage_ptr",
                                  "typeString": "struct Anvil.UpgradeRequest storage pointer"
                                }
                              },
                              "id": 265,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "player",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11,
                              "src": "5524:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 266,
                                  "name": "u",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 236,
                                  "src": "5534:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UpgradeRequest_$14_storage_ptr",
                                    "typeString": "struct Anvil.UpgradeRequest storage pointer"
                                  }
                                },
                                "id": 267,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "itemId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13,
                                "src": "5534:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5543:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5534:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5546:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "",
                              "id": 271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5549:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "id": 263,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1488,
                            "src": "5518:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,uint256,bytes memory)"
                            }
                          },
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5518:34:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 273,
                        "nodeType": "ExpressionStatement",
                        "src": "5518:34:11"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 277,
                        "name": "_randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "5597:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 276,
                      "name": "ReturnedRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "5578:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5578:33:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "EmitStatement",
                  "src": "5573:38:11"
                }
              ]
            },
            "id": 281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomWords",
            "nameLocation": "5044:18:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 232,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5121:8:11"
            },
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "5071:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "5063:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5063:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "randomWords",
                  "nameLocation": "5099:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "5082:28:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 228,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5082:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 229,
                    "nodeType": "ArrayTypeName",
                    "src": "5082:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5062:49:11"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5130:0:11"
            },
            "scope": 293,
            "src": "5035:583:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 291,
              "nodeType": "Block",
              "src": "5645:48:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 284,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5659:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5659:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 286,
                          "name": "s_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "5673:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5659:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5651:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5651:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "5651:30:11"
                },
                {
                  "id": 290,
                  "nodeType": "PlaceholderStatement",
                  "src": "5687:1:11"
                }
              ]
            },
            "id": 292,
            "name": "onlyOwner",
            "nameLocation": "5633:9:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5642:2:11"
            },
            "src": "5624:69:11",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 294,
        "src": "513:5182:11",
        "usedErrors": [
          1962
        ]
      }
    ],
    "src": "151:5545:11"
  },
  "bytecode": "610160604052620186a0610100526004805461ffff60e01b1916600360e01b1790556002610120526003610140523480156200003a57600080fd5b5060405162002531380380620025318339810160408190526200005d91620005a2565b826040518060600160405280602781526020016200250a60279139620000838162000175565b506001600160a01b0390811660805283811660a052821660c05260e081905260068054336001600160a01b03199182168117909255600480546001600160e01b031916600160a01b6001600160401b038916029092169190911782179055604080516020810190915260008082526200010b92916b033b2e3c9fd0803ce8000000906200018e565b6200013b33600a6b033b2e3c9fd0803ce8000000604051806020016040528060008152506200018e60201b60201c565b6200016b3360146b033b2e3c9fd0803ce8000000604051806020016040528060008152506200018e60201b60201c565b5050505062000840565b80516200018a906002906020840190620004df565b5050565b6001600160a01b038416620001f45760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084015b60405180910390fd5b336200021a816000876200020888620002ae565b6200021388620002ae565b5050505050565b6000848152602081815260408083206001600160a01b0389168452909152812080548592906200024c90849062000601565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4620002138160008787878762000304565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110620002eb57620002eb62000628565b602090810291909101015292915050565b505050505050565b62000323846001600160a01b0316620004d960201b62000b181760201c565b15620002fc5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906200035f90899089908890889088906004016200068e565b6020604051808303816000875af19250505080156200039d575060408051601f3d908101601f191682019092526200039a91810190620006d5565b60015b6200045d57620003ac62000708565b806308c379a003620003ec5750620003c362000760565b80620003d05750620003ee565b8060405162461bcd60e51b8152600401620001eb9190620007ef565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401620001eb565b6001600160e01b0319811663f23a6e6160e01b14620004d05760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401620001eb565b50505050505050565b3b151590565b828054620004ed9062000804565b90600052602060002090601f0160209004810192826200051157600085556200055c565b82601f106200052c57805160ff19168380011785556200055c565b828001600101855582156200055c579182015b828111156200055c5782518255916020019190600101906200053f565b506200056a9291506200056e565b5090565b5b808211156200056a57600081556001016200056f565b80516001600160a01b03811681146200059d57600080fd5b919050565b60008060008060808587031215620005b957600080fd5b84516001600160401b0381168114620005d157600080fd5b9350620005e16020860162000585565b9250620005f16040860162000585565b6060959095015193969295505050565b600082198211156200062357634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b81811015620006665760208185018101518683018201520162000648565b8181111562000679576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090620006ca908301846200063e565b979650505050505050565b600060208284031215620006e857600080fd5b81516001600160e01b0319811681146200070157600080fd5b9392505050565b600060033d1115620007225760046000803e5060005160e01c5b90565b601f8201601f191681016001600160401b03811182821017156200075957634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d10156200076f5790565b6040516003193d81016004833e81513d6001600160401b0380831160248401831017156200079f57505050505090565b8285019150815181811115620007b85750505050505090565b843d8701016020828501011115620007d35750505050505090565b620007e46020828601018762000725565b509095945050505050565b6020815260006200070160208301846200063e565b600181811c908216806200081957607f821691505b6020821081036200083a57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516101205161014051611c6b6200089f6000396000610952015260006109a60152600061097e0152600061091101526000505060006109cd01526000818161050a015261054c0152611c6b6000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c80639bbc7c72116100f9578063ba865cce11610097578063d9a93bdf11610071578063d9a93bdf14610318578063da63c07f1461032b578063e985e9c514610333578063f242432a1461036f57600080fd5b8063ba865cce14610300578063bc50a0c114610308578063c13435ca1461031057600080fd5b8063a4f1adff116100d3578063a4f1adff146102e8578063a785a86d146102f0578063afb705b5146102f8578063b07708d3146102f857600080fd5b80639bbc7c72146102ba578063a01f44fb146102c2578063a22cb465146102d557600080fd5b806345d759a911610166578063684261c411610140578063684261c41461027757806375d29f311461027f578063853b15af146102875780638da5cb5b1461028f57600080fd5b806345d759a9146102465780634e1273f41461024e578063616524501461026e57600080fd5b8062fdd58e146101ad57806301ffc9a7146101d35780630e89341c146101f65780631fe543e3146102165780632e82439f1461022b5780632eb2c2d614610233575b600080fd5b6101c06101bb3660046113f8565b610382565b6040519081526020015b60405180910390f35b6101e66101e136600461143b565b610419565b60405190151581526020016101ca565b61020961020436600461145f565b61046b565b6040516101ca91906114c5565b6102296102243660046115b0565b6104ff565b005b6101c0600b81565b61022961024136600461166b565b610587565b6101c0600081565b61026161025c366004611715565b61061e565b6040516101ca9190611811565b6101c060055481565b6101c0600381565b6101c0600181565b6101c0601781565b6004546102a2906001600160a01b031681565b6040516001600160a01b0390911681526020016101ca565b6101c0600c81565b6101c06b033b2e3c9fd0803ce800000081565b6102296102e3366004611824565b610748565b6101c0603281565b6101c0601681565b6101c0600a81565b6101c0601481565b6101c0601581565b6101c0600281565b6101c06103263660046113f8565b61081e565b6101c0600d81565b6101e6610341366004611860565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61022961037d366004611893565b610a91565b60006001600160a01b0383166103f35760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061044a57506001600160e01b031982166303a24d0760e21b145b8061046557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461047a906118f8565b80601f01602080910402602001604051908101604052809291908181526020018280546104a6906118f8565b80156104f35780601f106104c8576101008083540402835291602001916104f3565b820191906000526020600020905b8154815290600101906020018083116104d657829003601f168201915b50505050509050919050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105795760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044016103ea565b6105838282610b1e565b5050565b6001600160a01b0385163314806105a357506105a38533610341565b61060a5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016103ea565b6106178585858585610bfd565b5050505050565b606081518351146106835760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016103ea565b6000835167ffffffffffffffff81111561069f5761069f6114d8565b6040519080825280602002602001820160405280156106c8578160200160208202803683370190505b50905060005b8451811015610740576107138582815181106106ec576106ec611932565b602002602001015185838151811061070657610706611932565b6020026020010151610382565b82828151811061072557610725611932565b60209081029190910101526107398161195e565b90506106ce565b509392505050565b6001600160a01b03821633036107b25760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016103ea565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60006001600160a01b03831633148061083c575061083c8333610341565b6108985760405162461bcd60e51b815260206004820152602760248201527f416e76696c3a2063616c6c6572206973206e6f74206f776e6572206e6f7220616044820152661c1c1c9bdd995960ca1b60648201526084016103ea565b60036108a5600a84611977565b106108fe5760405162461bcd60e51b8152602060048201526024808201527f416e76696c3a2043616e6e6f742075706772616465206c6567656e64617279206044820152636974656d60e01b60648201526084016103ea565b600480546040516305d3b1d360e41b81527f000000000000000000000000000000000000000000000000000000000000000092810192909252600160a01b900467ffffffffffffffff16602482015261ffff7f000000000000000000000000000000000000000000000000000000000000000016604482015263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660648301527f00000000000000000000000000000000000000000000000000000000000000001660848201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635d3b1d309060a4016020604051808303816000875af1158015610a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a429190611999565b60408051808201825233815260208082019586526000848152600390915291909120905181546001600160a01b0319166001600160a01b03909116178155925160019093019290925550919050565b6001600160a01b038516331480610aad5750610aad8533610341565b610b0b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016103ea565b6106178585858585610dda565b3b151590565b600082815260036020526040902080546001820154610b48916001600160a01b031690600a610f00565b606482600081518110610b5d57610b5d611932565b6020026020010151610b6f9190611977565b610b7a9060016119b2565b6005819055603210610bbd578054600180830154610bbd926001600160a01b031691610ba691906119b2565b60016040518060200160405280600081525061107a565b7f62e0f3b955d02692c7bc11e60c384d9eaec33908c4a2d399d566fa6b4942178f600554604051610bf091815260200190565b60405180910390a1505050565b8151835114610c5f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016103ea565b6001600160a01b038416610c855760405162461bcd60e51b81526004016103ea906119ca565b3360005b8451811015610d6c576000858281518110610ca657610ca6611932565b602002602001015190506000858381518110610cc457610cc4611932565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610d145760405162461bcd60e51b81526004016103ea90611a0f565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610d519084906119b2565b9250508190555050505080610d659061195e565b9050610c89565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610dbc929190611a59565b60405180910390a4610dd281878787878761117b565b505050505050565b6001600160a01b038416610e005760405162461bcd60e51b81526004016103ea906119ca565b33610e19818787610e10886112d6565b610617886112d6565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610e5a5760405162461bcd60e51b81526004016103ea90611a0f565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610e979084906119b2565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610ef7828888888888611321565b50505050505050565b6001600160a01b038316610f625760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016103ea565b33610f9281856000610f73876112d6565b610f7c876112d6565b5050604080516020810190915260009052505050565b6000838152602081815260408083206001600160a01b03881684529091529020548281101561100f5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016103ea565b6000848152602081815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b0384166110da5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016103ea565b336110eb81600087610e10886112d6565b6000848152602081815260408083206001600160a01b03891684529091528120805485929061111b9084906119b2565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461061781600087878787611321565b6001600160a01b0384163b15610dd25760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906111bf9089908990889088908890600401611a87565b6020604051808303816000875af19250505080156111fa575060408051601f3d908101601f191682019092526111f791810190611ae5565b60015b6112a657611206611b02565b806308c379a00361123f575061121a611b1e565b806112255750611241565b8060405162461bcd60e51b81526004016103ea91906114c5565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016103ea565b6001600160e01b0319811663bc197c8160e01b14610ef75760405162461bcd60e51b81526004016103ea90611ba8565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061131057611310611932565b602090810291909101015292915050565b6001600160a01b0384163b15610dd25760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113659089908990889088908890600401611bf0565b6020604051808303816000875af19250505080156113a0575060408051601f3d908101601f1916820190925261139d91810190611ae5565b60015b6113ac57611206611b02565b6001600160e01b0319811663f23a6e6160e01b14610ef75760405162461bcd60e51b81526004016103ea90611ba8565b80356001600160a01b03811681146113f357600080fd5b919050565b6000806040838503121561140b57600080fd5b611414836113dc565b946020939093013593505050565b6001600160e01b03198116811461143857600080fd5b50565b60006020828403121561144d57600080fd5b813561145881611422565b9392505050565b60006020828403121561147157600080fd5b5035919050565b6000815180845260005b8181101561149e57602081850181015186830182015201611482565b818111156114b0576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006114586020830184611478565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611514576115146114d8565b6040525050565b600067ffffffffffffffff821115611535576115356114d8565b5060051b60200190565b600082601f83011261155057600080fd5b8135602061155d8261151b565b60405161156a82826114ee565b83815260059390931b850182019282810191508684111561158a57600080fd5b8286015b848110156115a5578035835291830191830161158e565b509695505050505050565b600080604083850312156115c357600080fd5b82359150602083013567ffffffffffffffff8111156115e157600080fd5b6115ed8582860161153f565b9150509250929050565b600082601f83011261160857600080fd5b813567ffffffffffffffff811115611622576116226114d8565b604051611639601f8301601f1916602001826114ee565b81815284602083860101111561164e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561168357600080fd5b61168c866113dc565b945061169a602087016113dc565b9350604086013567ffffffffffffffff808211156116b757600080fd5b6116c389838a0161153f565b945060608801359150808211156116d957600080fd5b6116e589838a0161153f565b935060808801359150808211156116fb57600080fd5b50611708888289016115f7565b9150509295509295909350565b6000806040838503121561172857600080fd5b823567ffffffffffffffff8082111561174057600080fd5b818501915085601f83011261175457600080fd5b813560206117618261151b565b60405161176e82826114ee565b83815260059390931b850182019282810191508984111561178e57600080fd5b948201945b838610156117b3576117a4866113dc565b82529482019490820190611793565b965050860135925050808211156117c957600080fd5b506115ed8582860161153f565b600081518084526020808501945080840160005b83811015611806578151875295820195908201906001016117ea565b509495945050505050565b60208152600061145860208301846117d6565b6000806040838503121561183757600080fd5b611840836113dc565b91506020830135801515811461185557600080fd5b809150509250929050565b6000806040838503121561187357600080fd5b61187c836113dc565b915061188a602084016113dc565b90509250929050565b600080600080600060a086880312156118ab57600080fd5b6118b4866113dc565b94506118c2602087016113dc565b93506040860135925060608601359150608086013567ffffffffffffffff8111156118ec57600080fd5b611708888289016115f7565b600181811c9082168061190c57607f821691505b60208210810361192c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161197057611970611948565b5060010190565b60008261199457634e487b7160e01b600052601260045260246000fd5b500690565b6000602082840312156119ab57600080fd5b5051919050565b600082198211156119c5576119c5611948565b500190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000611a6c60408301856117d6565b8281036020840152611a7e81856117d6565b95945050505050565b6001600160a01b0386811682528516602082015260a060408201819052600090611ab3908301866117d6565b8281036060840152611ac581866117d6565b90508281036080840152611ad98185611478565b98975050505050505050565b600060208284031215611af757600080fd5b815161145881611422565b600060033d1115611b1b5760046000803e5060005160e01c5b90565b600060443d1015611b2c5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611b5c57505050505090565b8285019150815181811115611b745750505050505090565b843d8701016020828501011115611b8e5750505050505090565b611b9d602082860101876114ee565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611c2a90830184611478565b97965050505050505056fea2646970667358221220fdf73825607d0d6620b181ed0d13947746ec7b390218efdc35ba26a2ef38cdae64736f6c634300080e003368747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "Anvil",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC1155._burn": {
          "74": [
            10519,
            10540,
            true
          ],
          "75": [
            10814,
            10838,
            true
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "77": [
            14449,
            14509,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "78": [
            13656,
            13711,
            false
          ]
        },
        "ERC1155._mint": {
          "76": [
            8654,
            8675,
            true
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "69": [
            6366,
            6394,
            true
          ],
          "70": [
            6457,
            6473,
            true
          ],
          "71": [
            6832,
            6853,
            true
          ]
        },
        "ERC1155._safeTransferFrom": {
          "72": [
            5198,
            5214,
            true
          ],
          "73": [
            5475,
            5496,
            true
          ]
        },
        "ERC1155.balanceOf": {
          "62": [
            2222,
            2243,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "65": [
            2685,
            2714,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "63": [
            4362,
            4382,
            true
          ],
          "64": [
            4386,
            4422,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "67": [
            3876,
            3896,
            true
          ],
          "68": [
            3900,
            3936,
            true
          ]
        },
        "ERC1155.setApprovalForAll": {
          "66": [
            3172,
            3196,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {
        "Anvil.nonDeterministicUpgradeItem": {
          "59": [
            4007,
            4027,
            true
          ],
          "60": [
            4031,
            4067,
            true
          ],
          "61": [
            4441,
            4456,
            true
          ]
        }
      },
      "3": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {
        "VRFConsumerBaseV2.rawFulfillRandomWords": {
          "79": [
            6717,
            6745,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "ERC1155._asSingletonArray": {
          "56": [
            14967,
            14985
          ],
          "57": [
            14996,
            15008
          ]
        },
        "ERC1155._burn": {
          "43": [
            10511,
            10580
          ],
          "44": [
            10633,
            10738
          ],
          "45": [
            10806,
            10879
          ],
          "46": [
            10913,
            10961
          ],
          "47": [
            10982,
            11044
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "53": [
            14669,
            14683
          ],
          "54": [
            14723,
            14785
          ],
          "55": [
            14533,
            14583
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "58": [
            13735,
            13785
          ]
        },
        "ERC1155._mint": {
          "48": [
            8646,
            8713
          ],
          "49": [
            8766,
            8873
          ],
          "50": [
            8884,
            8916
          ],
          "51": [
            8926,
            8988
          ],
          "52": [
            8999,
            9078
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "28": [
            6358,
            6439
          ],
          "29": [
            6449,
            6515
          ],
          "30": [
            6824,
            6900
          ],
          "31": [
            6942,
            6984
          ],
          "32": [
            7012,
            7039
          ],
          "33": [
            6675,
            6678
          ],
          "34": [
            7060,
            7112
          ],
          "35": [
            7123,
            7198
          ]
        },
        "ERC1155._safeTransferFrom": {
          "36": [
            5190,
            5256
          ],
          "37": [
            5309,
            5405
          ],
          "38": [
            5467,
            5543
          ],
          "39": [
            5577,
            5619
          ],
          "40": [
            5639,
            5666
          ],
          "41": [
            5677,
            5728
          ],
          "42": [
            5739,
            5807
          ]
        },
        "ERC1155.balanceOf": {
          "1": [
            2214,
            2291
          ],
          "2": [
            2301,
            2330
          ]
        },
        "ERC1155.balanceOfBatch": {
          "11": [
            2677,
            2760
          ],
          "12": [
            2905,
            2954
          ],
          "13": [
            2886,
            2889
          ],
          "14": [
            2975,
            2995
          ]
        },
        "ERC1155.isApprovedForAll": {
          "0": [
            3558,
            3602
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "8": [
            4341,
            4498
          ],
          "10": [
            4508,
            4560
          ]
        },
        "ERC1155.safeTransferFrom": {
          "22": [
            3855,
            4003
          ],
          "23": [
            4013,
            4058
          ]
        },
        "ERC1155.setApprovalForAll": {
          "15": [
            3164,
            3242
          ],
          "16": [
            3253,
            3306
          ],
          "17": [
            3316,
            3369
          ]
        },
        "ERC1155.supportsInterface": {
          "3": [
            1278,
            1458
          ]
        },
        "ERC1155.uri": {
          "5": [
            1949,
            1960
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {
        "Anvil.fulfillRandomWords": {
          "24": [
            5261,
            5302
          ],
          "25": [
            5411,
            5453
          ],
          "26": [
            5518,
            5552
          ],
          "27": [
            5573,
            5611
          ]
        },
        "Anvil.nonDeterministicUpgradeItem": {
          "18": [
            3987,
            4131
          ],
          "19": [
            4433,
            4498
          ],
          "20": [
            4582,
            4779
          ],
          "21": [
            4829,
            4930
          ]
        }
      },
      "3": {},
      "5": {
        "Context._msgSender": {
          "9": [
            659,
            676
          ]
        }
      },
      "6": {
        "ERC165.supportsInterface": {
          "4": [
            864,
            911
          ]
        }
      },
      "7": {},
      "8": {
        "VRFConsumerBaseV2.rawFulfillRandomWords": {
          "6": [
            6713,
            6822
          ],
          "7": [
            6827,
            6869
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC1155MetadataURI",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165",
    "smartcontractkit/chainlink-brownie-contracts@0.4.0/LinkTokenInterface",
    "smartcontractkit/chainlink-brownie-contracts@0.4.0/VRFConsumerBaseV2",
    "smartcontractkit/chainlink-brownie-contracts@0.4.0/VRFCoordinatorV2Interface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101a85760003560e01c80639bbc7c72116100f9578063ba865cce11610097578063d9a93bdf11610071578063d9a93bdf14610318578063da63c07f1461032b578063e985e9c514610333578063f242432a1461036f57600080fd5b8063ba865cce14610300578063bc50a0c114610308578063c13435ca1461031057600080fd5b8063a4f1adff116100d3578063a4f1adff146102e8578063a785a86d146102f0578063afb705b5146102f8578063b07708d3146102f857600080fd5b80639bbc7c72146102ba578063a01f44fb146102c2578063a22cb465146102d557600080fd5b806345d759a911610166578063684261c411610140578063684261c41461027757806375d29f311461027f578063853b15af146102875780638da5cb5b1461028f57600080fd5b806345d759a9146102465780634e1273f41461024e578063616524501461026e57600080fd5b8062fdd58e146101ad57806301ffc9a7146101d35780630e89341c146101f65780631fe543e3146102165780632e82439f1461022b5780632eb2c2d614610233575b600080fd5b6101c06101bb3660046113f8565b610382565b6040519081526020015b60405180910390f35b6101e66101e136600461143b565b610419565b60405190151581526020016101ca565b61020961020436600461145f565b61046b565b6040516101ca91906114c5565b6102296102243660046115b0565b6104ff565b005b6101c0600b81565b61022961024136600461166b565b610587565b6101c0600081565b61026161025c366004611715565b61061e565b6040516101ca9190611811565b6101c060055481565b6101c0600381565b6101c0600181565b6101c0601781565b6004546102a2906001600160a01b031681565b6040516001600160a01b0390911681526020016101ca565b6101c0600c81565b6101c06b033b2e3c9fd0803ce800000081565b6102296102e3366004611824565b610748565b6101c0603281565b6101c0601681565b6101c0600a81565b6101c0601481565b6101c0601581565b6101c0600281565b6101c06103263660046113f8565b61081e565b6101c0600d81565b6101e6610341366004611860565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61022961037d366004611893565b610a91565b60006001600160a01b0383166103f35760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061044a57506001600160e01b031982166303a24d0760e21b145b8061046557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461047a906118f8565b80601f01602080910402602001604051908101604052809291908181526020018280546104a6906118f8565b80156104f35780601f106104c8576101008083540402835291602001916104f3565b820191906000526020600020905b8154815290600101906020018083116104d657829003601f168201915b50505050509050919050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105795760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044016103ea565b6105838282610b1e565b5050565b6001600160a01b0385163314806105a357506105a38533610341565b61060a5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016103ea565b6106178585858585610bfd565b5050505050565b606081518351146106835760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016103ea565b6000835167ffffffffffffffff81111561069f5761069f6114d8565b6040519080825280602002602001820160405280156106c8578160200160208202803683370190505b50905060005b8451811015610740576107138582815181106106ec576106ec611932565b602002602001015185838151811061070657610706611932565b6020026020010151610382565b82828151811061072557610725611932565b60209081029190910101526107398161195e565b90506106ce565b509392505050565b6001600160a01b03821633036107b25760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016103ea565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60006001600160a01b03831633148061083c575061083c8333610341565b6108985760405162461bcd60e51b815260206004820152602760248201527f416e76696c3a2063616c6c6572206973206e6f74206f776e6572206e6f7220616044820152661c1c1c9bdd995960ca1b60648201526084016103ea565b60036108a5600a84611977565b106108fe5760405162461bcd60e51b8152602060048201526024808201527f416e76696c3a2043616e6e6f742075706772616465206c6567656e64617279206044820152636974656d60e01b60648201526084016103ea565b600480546040516305d3b1d360e41b81527f000000000000000000000000000000000000000000000000000000000000000092810192909252600160a01b900467ffffffffffffffff16602482015261ffff7f000000000000000000000000000000000000000000000000000000000000000016604482015263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660648301527f00000000000000000000000000000000000000000000000000000000000000001660848201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635d3b1d309060a4016020604051808303816000875af1158015610a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a429190611999565b60408051808201825233815260208082019586526000848152600390915291909120905181546001600160a01b0319166001600160a01b03909116178155925160019093019290925550919050565b6001600160a01b038516331480610aad5750610aad8533610341565b610b0b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016103ea565b6106178585858585610dda565b3b151590565b600082815260036020526040902080546001820154610b48916001600160a01b031690600a610f00565b606482600081518110610b5d57610b5d611932565b6020026020010151610b6f9190611977565b610b7a9060016119b2565b6005819055603210610bbd578054600180830154610bbd926001600160a01b031691610ba691906119b2565b60016040518060200160405280600081525061107a565b7f62e0f3b955d02692c7bc11e60c384d9eaec33908c4a2d399d566fa6b4942178f600554604051610bf091815260200190565b60405180910390a1505050565b8151835114610c5f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016103ea565b6001600160a01b038416610c855760405162461bcd60e51b81526004016103ea906119ca565b3360005b8451811015610d6c576000858281518110610ca657610ca6611932565b602002602001015190506000858381518110610cc457610cc4611932565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610d145760405162461bcd60e51b81526004016103ea90611a0f565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610d519084906119b2565b9250508190555050505080610d659061195e565b9050610c89565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610dbc929190611a59565b60405180910390a4610dd281878787878761117b565b505050505050565b6001600160a01b038416610e005760405162461bcd60e51b81526004016103ea906119ca565b33610e19818787610e10886112d6565b610617886112d6565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610e5a5760405162461bcd60e51b81526004016103ea90611a0f565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610e979084906119b2565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610ef7828888888888611321565b50505050505050565b6001600160a01b038316610f625760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016103ea565b33610f9281856000610f73876112d6565b610f7c876112d6565b5050604080516020810190915260009052505050565b6000838152602081815260408083206001600160a01b03881684529091529020548281101561100f5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016103ea565b6000848152602081815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b0384166110da5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016103ea565b336110eb81600087610e10886112d6565b6000848152602081815260408083206001600160a01b03891684529091528120805485929061111b9084906119b2565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461061781600087878787611321565b6001600160a01b0384163b15610dd25760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906111bf9089908990889088908890600401611a87565b6020604051808303816000875af19250505080156111fa575060408051601f3d908101601f191682019092526111f791810190611ae5565b60015b6112a657611206611b02565b806308c379a00361123f575061121a611b1e565b806112255750611241565b8060405162461bcd60e51b81526004016103ea91906114c5565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016103ea565b6001600160e01b0319811663bc197c8160e01b14610ef75760405162461bcd60e51b81526004016103ea90611ba8565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061131057611310611932565b602090810291909101015292915050565b6001600160a01b0384163b15610dd25760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113659089908990889088908890600401611bf0565b6020604051808303816000875af19250505080156113a0575060408051601f3d908101601f1916820190925261139d91810190611ae5565b60015b6113ac57611206611b02565b6001600160e01b0319811663f23a6e6160e01b14610ef75760405162461bcd60e51b81526004016103ea90611ba8565b80356001600160a01b03811681146113f357600080fd5b919050565b6000806040838503121561140b57600080fd5b611414836113dc565b946020939093013593505050565b6001600160e01b03198116811461143857600080fd5b50565b60006020828403121561144d57600080fd5b813561145881611422565b9392505050565b60006020828403121561147157600080fd5b5035919050565b6000815180845260005b8181101561149e57602081850181015186830182015201611482565b818111156114b0576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006114586020830184611478565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611514576115146114d8565b6040525050565b600067ffffffffffffffff821115611535576115356114d8565b5060051b60200190565b600082601f83011261155057600080fd5b8135602061155d8261151b565b60405161156a82826114ee565b83815260059390931b850182019282810191508684111561158a57600080fd5b8286015b848110156115a5578035835291830191830161158e565b509695505050505050565b600080604083850312156115c357600080fd5b82359150602083013567ffffffffffffffff8111156115e157600080fd5b6115ed8582860161153f565b9150509250929050565b600082601f83011261160857600080fd5b813567ffffffffffffffff811115611622576116226114d8565b604051611639601f8301601f1916602001826114ee565b81815284602083860101111561164e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561168357600080fd5b61168c866113dc565b945061169a602087016113dc565b9350604086013567ffffffffffffffff808211156116b757600080fd5b6116c389838a0161153f565b945060608801359150808211156116d957600080fd5b6116e589838a0161153f565b935060808801359150808211156116fb57600080fd5b50611708888289016115f7565b9150509295509295909350565b6000806040838503121561172857600080fd5b823567ffffffffffffffff8082111561174057600080fd5b818501915085601f83011261175457600080fd5b813560206117618261151b565b60405161176e82826114ee565b83815260059390931b850182019282810191508984111561178e57600080fd5b948201945b838610156117b3576117a4866113dc565b82529482019490820190611793565b965050860135925050808211156117c957600080fd5b506115ed8582860161153f565b600081518084526020808501945080840160005b83811015611806578151875295820195908201906001016117ea565b509495945050505050565b60208152600061145860208301846117d6565b6000806040838503121561183757600080fd5b611840836113dc565b91506020830135801515811461185557600080fd5b809150509250929050565b6000806040838503121561187357600080fd5b61187c836113dc565b915061188a602084016113dc565b90509250929050565b600080600080600060a086880312156118ab57600080fd5b6118b4866113dc565b94506118c2602087016113dc565b93506040860135925060608601359150608086013567ffffffffffffffff8111156118ec57600080fd5b611708888289016115f7565b600181811c9082168061190c57607f821691505b60208210810361192c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161197057611970611948565b5060010190565b60008261199457634e487b7160e01b600052601260045260246000fd5b500690565b6000602082840312156119ab57600080fd5b5051919050565b600082198211156119c5576119c5611948565b500190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b604081526000611a6c60408301856117d6565b8281036020840152611a7e81856117d6565b95945050505050565b6001600160a01b0386811682528516602082015260a060408201819052600090611ab3908301866117d6565b8281036060840152611ac581866117d6565b90508281036080840152611ad98185611478565b98975050505050505050565b600060208284031215611af757600080fd5b815161145881611422565b600060033d1115611b1b5760046000803e5060005160e01c5b90565b600060443d1015611b2c5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611b5c57505050505090565b8285019150815181811115611b745750505050505090565b843d8701016020828501011115611b8e5750505050505090565b611b9d602082860101876114ee565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611c2a90830184611478565b97965050505050505056fea2646970667358221220fdf73825607d0d6620b181ed0d13947746ec7b390218efdc35ba26a2ef38cdae64736f6c634300080e0033",
  "deployedSourceMap": "513:5182:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:228:0;;;;;;:::i;:::-;;:::i;:::-;;;597:25:13;;;585:2;570:18;2109:228:0;;;;;;;;1160:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:13;;1177:22;1159:41;;1147:2;1132:18;1160:305:0;1019:187:13;1864:103:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6618:256:8:-;;;;;;:::i;:::-;;:::i;:::-;;1116:43:11;;1157:2;1116:43;;4137:430:0;;;;;;:::i;:::-;;:::i;869:43:11:-;;911:1;869:43;;2494:508:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2598:28:11:-;;;;;;1016:46;;1061:1;1016:46;;918:45;;962:1;918:45;;1405;;1448:2;1405:45;;2012:20;;;;;-1:-1:-1;;;;;2012:20:11;;;;;;-1:-1:-1;;;;;7413:32:13;;;7395:51;;7383:2;7368:18;2012:20:11;7249:203:13;1165:39:11;;1202:2;1165:39;;1526:52;;1572:6;1526:52;;3070:306:0;;;;;;:::i;:::-;;:::i;1632:47:11:-;;1677:2;1632:47;;1359:40;;1397:2;1359:40;;1069:41;;1108:2;1069:41;;1261:42;;1301:2;1261:42;;1309:44;;1351:2;1309:44;;969:41;;1009:1;969:41;;3873:1065;;;;;;:::i;:::-;;:::i;1210:44::-;;1252:2;1210:44;;3443:166:0;;;;;;:::i;:::-;-1:-1:-1;;;;;3565:27:0;;;3542:4;3565:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3443:166;3676:389;;;;;;:::i;:::-;;:::i;2109:228::-;2195:7;-1:-1:-1;;;;;2222:21:0;;2214:77;;;;-1:-1:-1;;;2214:77:0;;8887:2:13;2214:77:0;;;8869:21:13;8926:2;8906:18;;;8899:30;8965:34;8945:18;;;8938:62;-1:-1:-1;;;9016:18:13;;;9009:41;9067:19;;2214:77:0;;;;;;;;;-1:-1:-1;2308:9:0;:13;;;;;;;;;;;-1:-1:-1;;;;;2308:22:0;;;;;;;;;;;;2109:228::o;1160:305::-;1262:4;-1:-1:-1;;;;;;1297:41:0;;-1:-1:-1;;;1297:41:0;;:109;;-1:-1:-1;;;;;;;1354:52:0;;-1:-1:-1;;;1354:52:0;1297:109;:161;;;-1:-1:-1;;;;;;;;;;871:40:6;;;1422:36:0;1278:180;1160:305;-1:-1:-1;;1160:305:0:o;1864:103::-;1924:13;1956:4;1949:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1864:103;;;:::o;6618:256:8:-;6717:10;-1:-1:-1;;;;;6731:14:8;6717:28;;6713:109;;6762:53;;-1:-1:-1;;;6762:53:8;;6788:10;6762:53;;;9694:34:13;-1:-1:-1;;;;;6800:14:8;9764:15:13;9744:18;;;9737:43;9629:18;;6762:53:8;9482:304:13;6713:109:8;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;4137:430:0:-;-1:-1:-1;;;;;4362:20:0;;666:10:5;4362:20:0;;:60;;-1:-1:-1;4386:36:0;4403:4;666:10:5;3443:166:0;:::i;4386:36::-;4341:157;;;;-1:-1:-1;;;4341:157:0;;9993:2:13;4341:157:0;;;9975:21:13;10032:2;10012:18;;;10005:30;10071:34;10051:18;;;10044:62;-1:-1:-1;;;10122:18:13;;;10115:48;10180:19;;4341:157:0;9791:414:13;4341:157:0;4508:52;4531:4;4537:2;4541:3;4546:7;4555:4;4508:22;:52::i;:::-;4137:430;;;;;:::o;2494:508::-;2645:16;2704:3;:10;2685:8;:15;:29;2677:83;;;;-1:-1:-1;;;2677:83:0;;10412:2:13;2677:83:0;;;10394:21:13;10451:2;10431:18;;;10424:30;10490:34;10470:18;;;10463:62;-1:-1:-1;;;10541:18:13;;;10534:39;10590:19;;2677:83:0;10210:405:13;2677:83:0;2771:30;2818:8;:15;2804:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2804:30:0;;2771:63;;2850:9;2845:120;2869:8;:15;2865:1;:19;2845:120;;;2924:30;2934:8;2943:1;2934:11;;;;;;;;:::i;:::-;;;;;;;2947:3;2951:1;2947:6;;;;;;;;:::i;:::-;;;;;;;2924:9;:30::i;:::-;2905:13;2919:1;2905:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2886:3;;;:::i;:::-;;;2845:120;;;-1:-1:-1;2982:13:0;2494:508;-1:-1:-1;;;2494:508:0:o;3070:306::-;-1:-1:-1;;;;;3172:24:0;;666:10:5;3172:24:0;3164:78;;;;-1:-1:-1;;;3164:78:0;;11226:2:13;3164:78:0;;;11208:21:13;11265:2;11245:18;;;11238:30;11304:34;11284:18;;;11277:62;-1:-1:-1;;;11355:18:13;;;11348:39;11404:19;;3164:78:0;11024:405:13;3164:78:0;666:10:5;3253:32:0;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;3253:42:0;;;;;;;;;;;;:53;;-1:-1:-1;;3253:53:0;;;;;;;;;;3321:48;;1159:41:13;;;3253:42:0;;666:10:5;3321:48:0;;1132:18:13;3321:48:0;;;;;;;3070:306;;:::o;3873:1065:11:-;3957:17;-1:-1:-1;;;;;4007:20:11;;666:10:5;4007:20:11;;:60;;-1:-1:-1;4031:36:11;4048:4;666:10:5;3443:166:0;:::i;4031:36:11:-;3987:144;;;;-1:-1:-1;;;3987:144:11;;11636:2:13;3987:144:11;;;11618:21:13;11675:2;11655:18;;;11648:30;11714:34;11694:18;;;11687:62;-1:-1:-1;;;11765:18:13;;;11758:37;11812:19;;3987:144:11;11434:403:13;3987:144:11;4455:1;4441:11;4450:2;4441:6;:11;:::i;:::-;:15;4433:65;;;;-1:-1:-1;;;4433:65:11;;12258:2:13;4433:65:11;;;12240:21:13;12297:2;12277:18;;;12270:30;12336:34;12316:18;;;12309:62;-1:-1:-1;;;12387:18:13;;;12380:34;12431:19;;4433:65:11;12056:400:13;4433:65:11;4661:16;;;4594:185;;-1:-1:-1;;;4594:185:11;;4638:9;4594:185;;;12712:25:13;;;;-1:-1:-1;;;4661:16:11;;;;12753:18:13;;;12746:59;12853:6;4691:22:11;12841:19:13;12821:18;;;12814:47;12880:10;4727:18:11;12926:15:13;;12906:18;;;12899:43;4759:10:11;12979:15:13;12958:19;;;12951:44;4594:11:11;-1:-1:-1;;;;;4594:30:11;;;;12684:19:13;;4594:185:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4858:72;;;;;;;;4886:10;4858:72;;;;;;;;;-1:-1:-1;4829:26:11;;;:15;:26;;;;;;;:101;;;;-1:-1:-1;;;;;;4829:101:11;-1:-1:-1;;;;;4829:101:11;;;;;;;;-1:-1:-1;4829:101:11;;;;;;;-1:-1:-1;4829:26:11;4582:197;-1:-1:-1;3873:1065:11:o;3676:389:0:-;-1:-1:-1;;;;;3876:20:0;;666:10:5;3876:20:0;;:60;;-1:-1:-1;3900:36:0;3917:4;666:10:5;3443:166:0;:::i;3900:36::-;3855:148;;;;-1:-1:-1;;;3855:148:0;;13397:2:13;3855:148:0;;;13379:21:13;13436:2;13416:18;;;13409:30;13475:34;13455:18;;;13448:62;-1:-1:-1;;;13526:18:13;;;13519:39;13575:19;;3855:148:0;13195:405:13;3855:148:0;4013:45;4031:4;4037:2;4041;4045:6;4053:4;4013:17;:45::i;718:377:4:-;1034:20;1080:8;;;718:377::o;5035:583:11:-;5141:24;5168:26;;;:15;:26;;;;;5267:8;;;5277;;;5261:41;;-1:-1:-1;;;;;5267:8:11;;2002:2;5261:5;:41::i;:::-;5445:3;5428:11;5440:1;5428:14;;;;;;;;:::i;:::-;;;;;;;:20;;;;:::i;:::-;5427:26;;5452:1;5427:26;:::i;:::-;5411:13;:42;;;1677:2;-1:-1:-1;5463:100:11;;5524:8;;;5534;;;;5518:34;;-1:-1:-1;;;;;5524:8:11;;5534:10;;:8;:10;:::i;:::-;5546:1;5518:34;;;;;;;;;;;;:5;:34::i;:::-;5578:33;5597:13;;5578:33;;;;597:25:13;;585:2;570:18;;451:177;5578:33:11;;;;;;;;5130:488;5035:583;;:::o;6160:1045:0:-;6380:7;:14;6366:3;:10;:28;6358:81;;;;-1:-1:-1;;;6358:81:0;;13940:2:13;6358:81:0;;;13922:21:13;13979:2;13959:18;;;13952:30;14018:34;13998:18;;;13991:62;-1:-1:-1;;;14069:18:13;;;14062:38;14117:19;;6358:81:0;13738:404:13;6358:81:0;-1:-1:-1;;;;;6457:16:0;;6449:66;;;;-1:-1:-1;;;6449:66:0;;;;;;;:::i;:::-;666:10:5;6526:16:0;6639:411;6663:3;:10;6659:1;:14;6639:411;;;6694:10;6707:3;6711:1;6707:6;;;;;;;;:::i;:::-;;;;;;;6694:19;;6727:14;6744:7;6752:1;6744:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6769:19;6791:13;;;;;;;;;;-1:-1:-1;;;;;6791:19:0;;;;;;;;;;;;6744:10;;-1:-1:-1;6832:21:0;;;;6824:76;;;;-1:-1:-1;;;6824:76:0;;;;;;;:::i;:::-;6942:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6942:19:0;;;;;;;;;;6964:20;;;6942:42;;7012:17;;;;;;;:27;;6964:20;;6942:9;7012:27;;6964:20;;7012:27;:::i;:::-;;;;;;;;6680:370;;;6675:3;;;;:::i;:::-;;;6639:411;;;;7095:2;-1:-1:-1;;;;;7065:47:0;7089:4;-1:-1:-1;;;;;7065:47:0;7079:8;-1:-1:-1;;;;;7065:47:0;;7099:3;7104:7;7065:47;;;;;;;:::i;:::-;;;;;;;;7123:75;7159:8;7169:4;7175:2;7179:3;7184:7;7193:4;7123:35;:75::i;:::-;6348:857;6160:1045;;;;;:::o;5017:797::-;-1:-1:-1;;;;;5198:16:0;;5190:66;;;;-1:-1:-1;;;5190:66:0;;;;;;;:::i;:::-;666:10:5;5309:96:0;666:10:5;5340:4:0;5346:2;5350:21;5368:2;5350:17;:21::i;:::-;5373:25;5391:6;5373:17;:25::i;5309:96::-;5416:19;5438:13;;;;;;;;;;;-1:-1:-1;;;;;5438:19:0;;;;;;;;;;5475:21;;;;5467:76;;;;-1:-1:-1;;;5467:76:0;;;;;;;:::i;:::-;5577:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5577:19:0;;;;;;;;;;5599:20;;;5577:42;;5639:17;;;;;;;:27;;5599:20;;5577:9;5639:27;;5599:20;;5639:27;:::i;:::-;;;;-1:-1:-1;;5682:46:0;;;15608:25:13;;;15664:2;15649:18;;15642:34;;;-1:-1:-1;;;;;5682:46:0;;;;;;;;;;;;;;15581:18:13;5682:46:0;;;;;;;5739:68;5770:8;5780:4;5786:2;5790;5794:6;5802:4;5739:30;:68::i;:::-;5180:634;;5017:797;;;;;:::o;10394:657::-;-1:-1:-1;;;;;10519:21:0;;10511:69;;;;-1:-1:-1;;;10511:69:0;;15889:2:13;10511:69:0;;;15871:21:13;15928:2;15908:18;;;15901:30;15967:34;15947:18;;;15940:62;-1:-1:-1;;;16018:18:13;;;16011:33;16061:19;;10511:69:0;15687:399:13;10511:69:0;666:10:5;10633:105:0;666:10:5;10664:7:0;10591:16;10685:21;10703:2;10685:17;:21::i;:::-;10708:25;10726:6;10708:17;:25::i;:::-;-1:-1:-1;;10633:105:0;;;;;;;;;-1:-1:-1;10633:105:0;;-1:-1:-1;;;6160:1045:0;10633:105;10749:22;10774:13;;;;;;;;;;;-1:-1:-1;;;;;10774:22:0;;;;;;;;;;10814:24;;;;10806:73;;;;-1:-1:-1;;;10806:73:0;;16293:2:13;10806:73:0;;;16275:21:13;16332:2;16312:18;;;16305:30;16371:34;16351:18;;;16344:62;-1:-1:-1;;;16422:18:13;;;16415:34;16466:19;;10806:73:0;16091:400:13;10806:73:0;10913:9;:13;;;;;;;;;;;-1:-1:-1;;;;;10913:22:0;;;;;;;;;;;;10938:23;;;10913:48;;10987:57;;15608:25:13;;;15649:18;;;15642:34;;;10913:22:0;;10987:57;;;;;;15581:18:13;10987:57:0;;;;;;;10501:550;;10394:657;;;:::o;8502:583::-;-1:-1:-1;;;;;8654:21:0;;8646:67;;;;-1:-1:-1;;;8646:67:0;;16698:2:13;8646:67:0;;;16680:21:13;16737:2;16717:18;;;16710:30;16776:34;16756:18;;;16749:62;-1:-1:-1;;;16827:18:13;;;16820:31;16868:19;;8646:67:0;16496:397:13;8646:67:0;666:10:5;8766:107:0;666:10:5;8724:16:0;8809:7;8818:21;8836:2;8818:17;:21::i;8766:107::-;8884:9;:13;;;;;;;;;;;-1:-1:-1;;;;;8884:22:0;;;;;;;;;:32;;8910:6;;8884:9;:32;;8910:6;;8884:32;:::i;:::-;;;;-1:-1:-1;;8931:57:0;;;15608:25:13;;;15664:2;15649:18;;15642:34;;;-1:-1:-1;;;;;8931:57:0;;;;8964:1;;8931:57;;;;;;15581:18:13;8931:57:0;;;;;;;8999:79;9030:8;9048:1;9052:7;9061:2;9065:6;9073:4;8999:30;:79::i;14024:792::-;-1:-1:-1;;;;;14256:13:0;;1034:20:4;1080:8;14252:558:0;;14291:79;;-1:-1:-1;;;14291:79:0;;-1:-1:-1;;;;;14291:43:0;;;;;:79;;14335:8;;14345:4;;14351:3;;14356:7;;14365:4;;14291:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14291:79:0;;;;;;;;-1:-1:-1;;14291:79:0;;;;;;;;;;;;:::i;:::-;;;14287:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;14676:6;14669:14;;-1:-1:-1;;;14669:14:0;;;;;;;;:::i;14287:513::-;;;14723:62;;-1:-1:-1;;;14723:62:0;;19046:2:13;14723:62:0;;;19028:21:13;19085:2;19065:18;;;19058:30;19124:34;19104:18;;;19097:62;-1:-1:-1;;;19175:18:13;;;19168:50;19235:19;;14723:62:0;18844:416:13;14287:513:0;-1:-1:-1;;;;;;14449:60:0;;-1:-1:-1;;;14449:60:0;14445:157;;14533:50;;-1:-1:-1;;;14533:50:0;;;;;;;:::i;14822:193::-;14941:16;;;14955:1;14941:16;;;;;;;;;14888;;14916:22;;14941:16;;;;;;;;;;;;-1:-1:-1;14941:16:0;14916:41;;14978:7;14967:5;14973:1;14967:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15003:5;14822:193;-1:-1:-1;;14822:193:0:o;13293:725::-;-1:-1:-1;;;;;13500:13:0;;1034:20:4;1080:8;13496:516:0;;13535:72;;-1:-1:-1;;;13535:72:0;;-1:-1:-1;;;;;13535:38:0;;;;;:72;;13574:8;;13584:4;;13590:2;;13594:6;;13602:4;;13535:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13535:72:0;;;;;;;;-1:-1:-1;;13535:72:0;;;;;;;;;;;;:::i;:::-;;;13531:471;;;;:::i;:::-;-1:-1:-1;;;;;;13656:55:0;;-1:-1:-1;;;13656:55:0;13652:152;;13735:50;;-1:-1:-1;;;13735:50:0;;;;;;;:::i;14:173:13:-;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:13:o;633:131::-;-1:-1:-1;;;;;;707:32:13;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:13:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:13;;1211:180;-1:-1:-1;1211:180:13:o;1396:472::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1718:6;1715:1;1712:13;1709:87;;;1784:1;1777:4;1768:6;1763:3;1759:16;1755:27;1748:38;1709:87;-1:-1:-1;1850:2:13;1829:15;-1:-1:-1;;1825:29:13;1816:39;;;;1857:4;1812:50;;1396:472;-1:-1:-1;;1396:472:13:o;1873:220::-;2022:2;2011:9;2004:21;1985:4;2042:45;2083:2;2072:9;2068:18;2060:6;2042:45;:::i;2098:127::-;2159:10;2154:3;2150:20;2147:1;2140:31;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2230:249;2340:2;2321:13;;-1:-1:-1;;2317:27:13;2305:40;;2375:18;2360:34;;2396:22;;;2357:62;2354:88;;;2422:18;;:::i;:::-;2458:2;2451:22;-1:-1:-1;;2230:249:13:o;2484:183::-;2544:4;2577:18;2569:6;2566:30;2563:56;;;2599:18;;:::i;:::-;-1:-1:-1;2644:1:13;2640:14;2656:4;2636:25;;2484:183::o;2672:724::-;2726:5;2779:3;2772:4;2764:6;2760:17;2756:27;2746:55;;2797:1;2794;2787:12;2746:55;2833:6;2820:20;2859:4;2882:43;2922:2;2882:43;:::i;:::-;2954:2;2948:9;2966:31;2994:2;2986:6;2966:31;:::i;:::-;3032:18;;;3124:1;3120:10;;;;3108:23;;3104:32;;;3066:15;;;;-1:-1:-1;3148:15:13;;;3145:35;;;3176:1;3173;3166:12;3145:35;3212:2;3204:6;3200:15;3224:142;3240:6;3235:3;3232:15;3224:142;;;3306:17;;3294:30;;3344:12;;;;3257;;3224:142;;;-1:-1:-1;3384:6:13;2672:724;-1:-1:-1;;;;;;2672:724:13:o;3401:416::-;3494:6;3502;3555:2;3543:9;3534:7;3530:23;3526:32;3523:52;;;3571:1;3568;3561:12;3523:52;3607:9;3594:23;3584:33;;3668:2;3657:9;3653:18;3640:32;3695:18;3687:6;3684:30;3681:50;;;3727:1;3724;3717:12;3681:50;3750:61;3803:7;3794:6;3783:9;3779:22;3750:61;:::i;:::-;3740:71;;;3401:416;;;;;:::o;3822:555::-;3864:5;3917:3;3910:4;3902:6;3898:17;3894:27;3884:55;;3935:1;3932;3925:12;3884:55;3971:6;3958:20;3997:18;3993:2;3990:26;3987:52;;;4019:18;;:::i;:::-;4068:2;4062:9;4080:67;4135:2;4116:13;;-1:-1:-1;;4112:27:13;4141:4;4108:38;4062:9;4080:67;:::i;:::-;4171:2;4163:6;4156:18;4217:3;4210:4;4205:2;4197:6;4193:15;4189:26;4186:35;4183:55;;;4234:1;4231;4224:12;4183:55;4298:2;4291:4;4283:6;4279:17;4272:4;4264:6;4260:17;4247:54;4345:1;4321:15;;;4338:4;4317:26;4310:37;;;;4325:6;3822:555;-1:-1:-1;;;3822:555:13:o;4382:943::-;4536:6;4544;4552;4560;4568;4621:3;4609:9;4600:7;4596:23;4592:33;4589:53;;;4638:1;4635;4628:12;4589:53;4661:29;4680:9;4661:29;:::i;:::-;4651:39;;4709:38;4743:2;4732:9;4728:18;4709:38;:::i;:::-;4699:48;;4798:2;4787:9;4783:18;4770:32;4821:18;4862:2;4854:6;4851:14;4848:34;;;4878:1;4875;4868:12;4848:34;4901:61;4954:7;4945:6;4934:9;4930:22;4901:61;:::i;:::-;4891:71;;5015:2;5004:9;5000:18;4987:32;4971:48;;5044:2;5034:8;5031:16;5028:36;;;5060:1;5057;5050:12;5028:36;5083:63;5138:7;5127:8;5116:9;5112:24;5083:63;:::i;:::-;5073:73;;5199:3;5188:9;5184:19;5171:33;5155:49;;5229:2;5219:8;5216:16;5213:36;;;5245:1;5242;5235:12;5213:36;;5268:51;5311:7;5300:8;5289:9;5285:24;5268:51;:::i;:::-;5258:61;;;4382:943;;;;;;;;:::o;5330:1208::-;5448:6;5456;5509:2;5497:9;5488:7;5484:23;5480:32;5477:52;;;5525:1;5522;5515:12;5477:52;5565:9;5552:23;5594:18;5635:2;5627:6;5624:14;5621:34;;;5651:1;5648;5641:12;5621:34;5689:6;5678:9;5674:22;5664:32;;5734:7;5727:4;5723:2;5719:13;5715:27;5705:55;;5756:1;5753;5746:12;5705:55;5792:2;5779:16;5814:4;5837:43;5877:2;5837:43;:::i;:::-;5909:2;5903:9;5921:31;5949:2;5941:6;5921:31;:::i;:::-;5987:18;;;6075:1;6071:10;;;;6063:19;;6059:28;;;6021:15;;;;-1:-1:-1;6099:19:13;;;6096:39;;;6131:1;6128;6121:12;6096:39;6155:11;;;;6175:148;6191:6;6186:3;6183:15;6175:148;;;6257:23;6276:3;6257:23;:::i;:::-;6245:36;;6208:12;;;;6301;;;;6175:148;;;6342:6;-1:-1:-1;;6386:18:13;;6373:32;;-1:-1:-1;;6417:16:13;;;6414:36;;;6446:1;6443;6436:12;6414:36;;6469:63;6524:7;6513:8;6502:9;6498:24;6469:63;:::i;6543:435::-;6596:3;6634:5;6628:12;6661:6;6656:3;6649:19;6687:4;6716:2;6711:3;6707:12;6700:19;;6753:2;6746:5;6742:14;6774:1;6784:169;6798:6;6795:1;6792:13;6784:169;;;6859:13;;6847:26;;6893:12;;;;6928:15;;;;6820:1;6813:9;6784:169;;;-1:-1:-1;6969:3:13;;6543:435;-1:-1:-1;;;;;6543:435:13:o;6983:261::-;7162:2;7151:9;7144:21;7125:4;7182:56;7234:2;7223:9;7219:18;7211:6;7182:56;:::i;7457:347::-;7522:6;7530;7583:2;7571:9;7562:7;7558:23;7554:32;7551:52;;;7599:1;7596;7589:12;7551:52;7622:29;7641:9;7622:29;:::i;:::-;7612:39;;7701:2;7690:9;7686:18;7673:32;7748:5;7741:13;7734:21;7727:5;7724:32;7714:60;;7770:1;7767;7760:12;7714:60;7793:5;7783:15;;;7457:347;;;;;:::o;7809:260::-;7877:6;7885;7938:2;7926:9;7917:7;7913:23;7909:32;7906:52;;;7954:1;7951;7944:12;7906:52;7977:29;7996:9;7977:29;:::i;:::-;7967:39;;8025:38;8059:2;8048:9;8044:18;8025:38;:::i;:::-;8015:48;;7809:260;;;;;:::o;8074:606::-;8178:6;8186;8194;8202;8210;8263:3;8251:9;8242:7;8238:23;8234:33;8231:53;;;8280:1;8277;8270:12;8231:53;8303:29;8322:9;8303:29;:::i;:::-;8293:39;;8351:38;8385:2;8374:9;8370:18;8351:38;:::i;:::-;8341:48;;8436:2;8425:9;8421:18;8408:32;8398:42;;8487:2;8476:9;8472:18;8459:32;8449:42;;8542:3;8531:9;8527:19;8514:33;8570:18;8562:6;8559:30;8556:50;;;8602:1;8599;8592:12;8556:50;8625:49;8666:7;8657:6;8646:9;8642:22;8625:49;:::i;9097:380::-;9176:1;9172:12;;;;9219;;;9240:61;;9294:4;9286:6;9282:17;9272:27;;9240:61;9347:2;9339:6;9336:14;9316:18;9313:38;9310:161;;9393:10;9388:3;9384:20;9381:1;9374:31;9428:4;9425:1;9418:15;9456:4;9453:1;9446:15;9310:161;;9097:380;;;:::o;10620:127::-;10681:10;10676:3;10672:20;10669:1;10662:31;10712:4;10709:1;10702:15;10736:4;10733:1;10726:15;10752:127;10813:10;10808:3;10804:20;10801:1;10794:31;10844:4;10841:1;10834:15;10868:4;10865:1;10858:15;10884:135;10923:3;10944:17;;;10941:43;;10964:18;;:::i;:::-;-1:-1:-1;11011:1:13;11000:13;;10884:135::o;11842:209::-;11874:1;11900;11890:132;;11944:10;11939:3;11935:20;11932:1;11925:31;11979:4;11976:1;11969:15;12007:4;12004:1;11997:15;11890:132;-1:-1:-1;12036:9:13;;11842:209::o;13006:184::-;13076:6;13129:2;13117:9;13108:7;13104:23;13100:32;13097:52;;;13145:1;13142;13135:12;13097:52;-1:-1:-1;13168:16:13;;13006:184;-1:-1:-1;13006:184:13:o;13605:128::-;13645:3;13676:1;13672:6;13669:1;13666:13;13663:39;;;13682:18;;:::i;:::-;-1:-1:-1;13718:9:13;;13605:128::o;14147:401::-;14349:2;14331:21;;;14388:2;14368:18;;;14361:30;14427:34;14422:2;14407:18;;14400:62;-1:-1:-1;;;14493:2:13;14478:18;;14471:35;14538:3;14523:19;;14147:401::o;14553:406::-;14755:2;14737:21;;;14794:2;14774:18;;;14767:30;14833:34;14828:2;14813:18;;14806:62;-1:-1:-1;;;14899:2:13;14884:18;;14877:40;14949:3;14934:19;;14553:406::o;14964:465::-;15221:2;15210:9;15203:21;15184:4;15247:56;15299:2;15288:9;15284:18;15276:6;15247:56;:::i;:::-;15351:9;15343:6;15339:22;15334:2;15323:9;15319:18;15312:50;15379:44;15416:6;15408;15379:44;:::i;:::-;15371:52;14964:465;-1:-1:-1;;;;;14964:465:13:o;16898:827::-;-1:-1:-1;;;;;17295:15:13;;;17277:34;;17347:15;;17342:2;17327:18;;17320:43;17257:3;17394:2;17379:18;;17372:31;;;17220:4;;17426:57;;17463:19;;17455:6;17426:57;:::i;:::-;17531:9;17523:6;17519:22;17514:2;17503:9;17499:18;17492:50;17565:44;17602:6;17594;17565:44;:::i;:::-;17551:58;;17658:9;17650:6;17646:22;17640:3;17629:9;17625:19;17618:51;17686:33;17712:6;17704;17686:33;:::i;:::-;17678:41;16898:827;-1:-1:-1;;;;;;;;16898:827:13:o;17730:249::-;17799:6;17852:2;17840:9;17831:7;17827:23;17823:32;17820:52;;;17868:1;17865;17858:12;17820:52;17900:9;17894:16;17919:30;17943:5;17919:30;:::i;17984:179::-;18019:3;18061:1;18043:16;18040:23;18037:120;;;18107:1;18104;18101;18086:23;-1:-1:-1;18144:1:13;18138:8;18133:3;18129:18;18037:120;17984:179;:::o;18168:671::-;18207:3;18249:4;18231:16;18228:26;18225:39;;;18168:671;:::o;18225:39::-;18291:2;18285:9;-1:-1:-1;;18356:16:13;18352:25;;18349:1;18285:9;18328:50;18407:4;18401:11;18431:16;18466:18;18537:2;18530:4;18522:6;18518:17;18515:25;18510:2;18502:6;18499:14;18496:45;18493:58;;;18544:5;;;;;18168:671;:::o;18493:58::-;18581:6;18575:4;18571:17;18560:28;;18617:3;18611:10;18644:2;18636:6;18633:14;18630:27;;;18650:5;;;;;;18168:671;:::o;18630:27::-;18734:2;18715:16;18709:4;18705:27;18701:36;18694:4;18685:6;18680:3;18676:16;18672:27;18669:69;18666:82;;;18741:5;;;;;;18168:671;:::o;18666:82::-;18757:57;18808:4;18799:6;18791;18787:19;18783:30;18777:4;18757:57;:::i;:::-;-1:-1:-1;18830:3:13;;18168:671;-1:-1:-1;;;;;18168:671:13:o;19265:404::-;19467:2;19449:21;;;19506:2;19486:18;;;19479:30;19545:34;19540:2;19525:18;;19518:62;-1:-1:-1;;;19611:2:13;19596:18;;19589:38;19659:3;19644:19;;19265:404::o;19674:561::-;-1:-1:-1;;;;;19971:15:13;;;19953:34;;20023:15;;20018:2;20003:18;;19996:43;20070:2;20055:18;;20048:34;;;20113:2;20098:18;;20091:34;;;19933:3;20156;20141:19;;20134:32;;;19896:4;;20183:46;;20209:19;;20201:6;20183:46;:::i;:::-;20175:54;19674:561;-1:-1:-1;;;;;;;19674:561:13:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "nonDeterministicUpgradeItem(address,uint256)": {
        "details": "Destroys `UPGRADE_FACTOR` tokens of token type `id` from `from` and has `UPGRADE_PERCENTAGE` chance of minting token `id+1` Emits a {???????? -- check if we need} event. Requirements: - `from` cannot be the zero address. - `from` must have at least `amount` tokens of token type `id`. TODO implement approval"
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "version": 1
  },
  "offset": [
    513,
    5695
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9BBC7C72 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBA865CCE GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD9A93BDF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD9A93BDF EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xDA63C07F EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBA865CCE EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xBC50A0C1 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xC13435CA EQ PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA4F1ADFF GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xA4F1ADFF EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xA785A86D EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xAFB705B5 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xB07708D3 EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9BBC7C72 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xA01F44FB EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45D759A9 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x684261C4 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x684261C4 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x75D29F31 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x853B15AF EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45D759A9 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x61652450 EQ PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x2E82439F EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x233 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x143B JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x209 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x145F JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x4FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0xB DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x261 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x1715 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x17 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2A2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0xC DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH12 0x33B2E3C9FD0803CE8000000 DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1824 JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x16 DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x15 DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x81E JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0xD DUP2 JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0x1860 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x44A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x465 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x47A SWAP1 PUSH2 0x18F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A6 SWAP1 PUSH2 0x18F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x583 DUP3 DUP3 PUSH2 0xB1E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x5A3 JUMPI POP PUSH2 0x5A3 DUP6 CALLER PUSH2 0x341 JUMP JUMPDEST PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x617 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xBFD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x69F JUMPI PUSH2 0x69F PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x740 JUMPI PUSH2 0x713 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6EC JUMPI PUSH2 0x6EC PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x706 JUMPI PUSH2 0x706 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x382 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x725 JUMPI PUSH2 0x725 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x739 DUP2 PUSH2 0x195E JUMP JUMPDEST SWAP1 POP PUSH2 0x6CE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER SUB PUSH2 0x7B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x83C JUMPI POP PUSH2 0x83C DUP4 CALLER PUSH2 0x341 JUMP JUMPDEST PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416E76696C3A2063616C6C6572206973206E6F74206F776E6572206E6F722061 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1C1C1C9BDD9959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x3 PUSH2 0x8A5 PUSH1 0xA DUP5 PUSH2 0x1977 JUMP JUMPDEST LT PUSH2 0x8FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x416E76696C3A2043616E6E6F742075706772616465206C6567656E6461727920 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x6974656D PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH32 0x0 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0xFFFF PUSH32 0x0 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH32 0x0 AND PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x5D3B1D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP6 DUP7 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xAAD JUMPI POP PUSH2 0xAAD DUP6 CALLER PUSH2 0x341 JUMP JUMPDEST PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x617 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xDDA JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0xB48 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0xA PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x64 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB5D JUMPI PUSH2 0xB5D PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xB6F SWAP2 SWAP1 PUSH2 0x1977 JUMP JUMPDEST PUSH2 0xB7A SWAP1 PUSH1 0x1 PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x32 LT PUSH2 0xBBD JUMPI DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH2 0xBBD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0xBA6 SWAP2 SWAP1 PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x107A JUMP JUMPDEST PUSH32 0x62E0F3B955D02692C7BC11E60C384D9EAEC33908C4A2D399D566FA6B4942178F PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH2 0xBF0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP1 PUSH2 0x19CA JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xD6C JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCA6 JUMPI PUSH2 0xCA6 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCC4 JUMPI PUSH2 0xCC4 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xD51 SWAP1 DUP5 SWAP1 PUSH2 0x19B2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xD65 SWAP1 PUSH2 0x195E JUMP JUMPDEST SWAP1 POP PUSH2 0xC89 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xDBC SWAP3 SWAP2 SWAP1 PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDD2 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x117B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP1 PUSH2 0x19CA JUMP JUMPDEST CALLER PUSH2 0xE19 DUP2 DUP8 DUP8 PUSH2 0xE10 DUP9 PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x617 DUP9 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xE97 SWAP1 DUP5 SWAP1 PUSH2 0x19B2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xEF7 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1321 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST CALLER PUSH2 0xF92 DUP2 DUP6 PUSH1 0x0 PUSH2 0xF73 DUP8 PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0xF7C DUP8 PUSH2 0x12D6 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x100F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP4 DUP5 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST CALLER PUSH2 0x10EB DUP2 PUSH1 0x0 DUP8 PUSH2 0xE10 DUP9 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x111B SWAP1 DUP5 SWAP1 PUSH2 0x19B2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x617 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xDD2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x11BF SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11FA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11F7 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12A6 JUMPI PUSH2 0x1206 PUSH2 0x1B02 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x123F JUMPI POP PUSH2 0x121A PUSH2 0x1B1E JUMP JUMPDEST DUP1 PUSH2 0x1225 JUMPI POP PUSH2 0x1241 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xEF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1310 JUMPI PUSH2 0x1310 PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xDD2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1365 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13A0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x139D SWAP2 DUP2 ADD SWAP1 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13AC JUMPI PUSH2 0x1206 PUSH2 0x1B02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xEF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EA SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1414 DUP4 PUSH2 0x13DC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x144D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1458 DUP2 PUSH2 0x1422 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x149E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1482 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x14B0 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1458 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1478 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1514 JUMPI PUSH2 0x1514 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1535 JUMPI PUSH2 0x1535 PUSH2 0x14D8 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x155D DUP3 PUSH2 0x151B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156A DUP3 DUP3 PUSH2 0x14EE JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x158A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x15A5 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x158E JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15ED DUP6 DUP3 DUP7 ADD PUSH2 0x153F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1622 JUMPI PUSH2 0x1622 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1639 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x14EE JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x164E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168C DUP7 PUSH2 0x13DC JUMP JUMPDEST SWAP5 POP PUSH2 0x169A PUSH1 0x20 DUP8 ADD PUSH2 0x13DC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C3 DUP10 DUP4 DUP11 ADD PUSH2 0x153F JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16E5 DUP10 DUP4 DUP11 ADD PUSH2 0x153F JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1708 DUP9 DUP3 DUP10 ADD PUSH2 0x15F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1761 DUP3 PUSH2 0x151B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176E DUP3 DUP3 PUSH2 0x14EE JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x178E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x17B3 JUMPI PUSH2 0x17A4 DUP7 PUSH2 0x13DC JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x17C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15ED DUP6 DUP3 DUP7 ADD PUSH2 0x153F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1806 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17EA JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1458 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1840 DUP4 PUSH2 0x13DC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x187C DUP4 PUSH2 0x13DC JUMP JUMPDEST SWAP2 POP PUSH2 0x188A PUSH1 0x20 DUP5 ADD PUSH2 0x13DC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x18AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B4 DUP7 PUSH2 0x13DC JUMP JUMPDEST SWAP5 POP PUSH2 0x18C2 PUSH1 0x20 DUP8 ADD PUSH2 0x13DC JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1708 DUP9 DUP3 DUP10 ADD PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x190C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x192C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1970 JUMPI PUSH2 0x1970 PUSH2 0x1948 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1994 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x19C5 JUMPI PUSH2 0x19C5 PUSH2 0x1948 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A6C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17D6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1A7E DUP2 DUP6 PUSH2 0x17D6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1AB3 SWAP1 DUP4 ADD DUP7 PUSH2 0x17D6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1AC5 DUP2 DUP7 PUSH2 0x17D6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1AD9 DUP2 DUP6 PUSH2 0x1478 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1458 DUP2 PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1B1B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1B2C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1B5C JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B74 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1B8E JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1B9D PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x14EE JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1C2A SWAP1 DUP4 ADD DUP5 PUSH2 0x1478 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xF7 CODESIZE 0x25 PUSH1 0x7D 0xD PUSH7 0x20B181ED0D1394 PUSH24 0x46EC7B390218EFDC35BA26A2EF38CDAE64736F6C63430008 0xE STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        513,
        5695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "REVERT",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "POP",
      "path": "11"
    },
    "18": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "21": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "LT",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A8"
    },
    "25": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "29": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "SHR",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "33": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x9BBC7C72"
    },
    "38": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "GT",
      "path": "11"
    },
    "39": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF9"
    },
    "42": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "43": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "44": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xBA865CCE"
    },
    "49": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "GT",
      "path": "11"
    },
    "50": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "54": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "55": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD9A93BDF"
    },
    "60": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "GT",
      "path": "11"
    },
    "61": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "65": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "66": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD9A93BDF"
    },
    "71": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "72": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x318"
    },
    "75": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "76": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "77": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xDA63C07F"
    },
    "82": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "83": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32B"
    },
    "86": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "87": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "88": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "94": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x333"
    },
    "97": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "98": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "99": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF242432A"
    },
    "104": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "105": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x36F"
    },
    "108": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "109": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "112": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "REVERT",
      "path": "11"
    },
    "113": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "114": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "115": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xBA865CCE"
    },
    "120": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "121": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x300"
    },
    "124": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "125": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "126": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xBC50A0C1"
    },
    "131": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "132": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x308"
    },
    "135": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "136": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "137": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xC13435CA"
    },
    "142": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "143": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x310"
    },
    "146": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "147": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "150": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "REVERT",
      "path": "11"
    },
    "151": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "152": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "153": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA4F1ADFF"
    },
    "158": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "GT",
      "path": "11"
    },
    "159": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "163": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "164": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA4F1ADFF"
    },
    "169": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "170": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E8"
    },
    "173": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "174": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "175": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA785A86D"
    },
    "180": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "181": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F0"
    },
    "184": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "185": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "186": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xAFB705B5"
    },
    "191": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "192": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F8"
    },
    "195": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "196": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "197": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB07708D3"
    },
    "202": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "203": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F8"
    },
    "206": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "207": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "210": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "REVERT",
      "path": "11"
    },
    "211": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "212": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "213": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x9BBC7C72"
    },
    "218": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "219": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BA"
    },
    "222": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "223": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "224": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA01F44FB"
    },
    "229": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "230": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C2"
    },
    "233": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "234": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "235": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA22CB465"
    },
    "240": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "241": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D5"
    },
    "244": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "245": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "247": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "248": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "REVERT",
      "path": "11"
    },
    "249": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "250": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "251": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x45D759A9"
    },
    "256": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "GT",
      "path": "11"
    },
    "257": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x166"
    },
    "260": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "261": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "262": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x684261C4"
    },
    "267": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "GT",
      "path": "11"
    },
    "268": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x140"
    },
    "271": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "272": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "273": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x684261C4"
    },
    "278": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "279": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x277"
    },
    "282": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "283": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "284": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x75D29F31"
    },
    "289": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "290": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27F"
    },
    "293": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "294": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "295": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x853B15AF"
    },
    "300": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "301": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x287"
    },
    "304": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "305": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "306": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8DA5CB5B"
    },
    "311": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "312": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x28F"
    },
    "315": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "316": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "318": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "319": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "REVERT",
      "path": "11"
    },
    "320": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "321": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "322": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x45D759A9"
    },
    "327": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "328": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x246"
    },
    "331": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "332": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "333": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x4E1273F4"
    },
    "338": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "339": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x24E"
    },
    "342": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "343": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "344": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x61652450"
    },
    "349": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "350": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x26E"
    },
    "353": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "354": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "356": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "357": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "REVERT",
      "path": "11"
    },
    "358": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "359": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "360": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH3",
      "path": "11",
      "value": "0xFDD58E"
    },
    "364": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "365": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AD"
    },
    "368": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "369": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "370": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x1FFC9A7"
    },
    "375": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "376": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D3"
    },
    "379": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "380": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "381": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE89341C"
    },
    "386": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "387": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F6"
    },
    "390": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "391": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "392": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x1FE543E3"
    },
    "397": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "398": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x216"
    },
    "401": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "402": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "403": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x2E82439F"
    },
    "408": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "409": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22B"
    },
    "412": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "413": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "414": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x2EB2C2D6"
    },
    "419": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "EQ",
      "path": "11"
    },
    "420": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x233"
    },
    "423": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "424": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "425": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "427": {
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "DUP1",
      "path": "11"
    },
    "428": {
      "first_revert": true,
      "fn": null,
      "offset": [
        513,
        5695
      ],
      "op": "REVERT",
      "path": "11"
    },
    "429": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "430": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "433": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BB"
    },
    "436": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "437": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "439": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F8"
    },
    "442": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "443": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "444": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x382"
    },
    "447": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "448": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "449": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "451": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "452": {
      "op": "SWAP1"
    },
    "453": {
      "op": "DUP2"
    },
    "454": {
      "op": "MSTORE"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "457": {
      "op": "ADD"
    },
    "458": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "459": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "461": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "462": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "463": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "464": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SUB",
      "path": "0"
    },
    "465": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "466": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "RETURN",
      "path": "0"
    },
    "467": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "468": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E6"
    },
    "471": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1"
    },
    "474": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "475": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "477": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143B"
    },
    "480": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "0"
    },
    "481": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "482": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x419"
    },
    "485": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "0"
    },
    "486": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "487": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "489": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "490": {
      "op": "SWAP1"
    },
    "491": {
      "op": "ISZERO"
    },
    "492": {
      "op": "ISZERO"
    },
    "493": {
      "op": "DUP2"
    },
    "494": {
      "op": "MSTORE"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "497": {
      "op": "ADD"
    },
    "498": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CA"
    },
    "501": {
      "op": "JUMP"
    },
    "502": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "503": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x209"
    },
    "506": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x204"
    },
    "509": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "510": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "512": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145F"
    },
    "515": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "0"
    },
    "516": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "517": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46B"
    },
    "520": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "0"
    },
    "521": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "522": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "524": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "525": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CA"
    },
    "528": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "529": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "530": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C5"
    },
    "533": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "0"
    },
    "534": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "535": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x229"
    },
    "538": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x224"
    },
    "541": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "542": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "544": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15B0"
    },
    "547": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMP",
      "path": "8"
    },
    "548": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "549": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4FF"
    },
    "552": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMP",
      "path": "8"
    },
    "553": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "554": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "STOP",
      "path": "8"
    },
    "555": {
      "offset": [
        1116,
        1159
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "556": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        1116,
        1159
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "559": {
      "offset": [
        1157,
        1159
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xB"
    },
    "561": {
      "offset": [
        1116,
        1159
      ],
      "op": "DUP2",
      "path": "11"
    },
    "562": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        1116,
        1159
      ],
      "op": "JUMP",
      "path": "11"
    },
    "563": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "564": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229"
    },
    "567": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x241"
    },
    "570": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "571": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "573": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166B"
    },
    "576": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "0"
    },
    "577": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "578": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x587"
    },
    "581": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "0"
    },
    "582": {
      "offset": [
        869,
        912
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "583": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        869,
        912
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "586": {
      "offset": [
        911,
        912
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "588": {
      "offset": [
        869,
        912
      ],
      "op": "DUP2",
      "path": "11"
    },
    "589": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        869,
        912
      ],
      "op": "JUMP",
      "path": "11"
    },
    "590": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "591": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x261"
    },
    "594": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25C"
    },
    "597": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "598": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "600": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1715"
    },
    "603": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "0"
    },
    "604": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "605": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61E"
    },
    "608": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "0"
    },
    "609": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "610": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "612": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "613": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CA"
    },
    "616": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "617": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "618": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1811"
    },
    "621": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "0"
    },
    "622": {
      "offset": [
        2598,
        2626
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "623": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2598,
        2626
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "626": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2598,
        2626
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "628": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2598,
        2626
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "629": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2598,
        2626
      ],
      "op": "DUP2",
      "path": "11"
    },
    "630": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2598,
        2626
      ],
      "op": "JUMP",
      "path": "11"
    },
    "631": {
      "offset": [
        1016,
        1062
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "632": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1016,
        1062
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "635": {
      "offset": [
        1061,
        1062
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "637": {
      "offset": [
        1016,
        1062
      ],
      "op": "DUP2",
      "path": "11"
    },
    "638": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1016,
        1062
      ],
      "op": "JUMP",
      "path": "11"
    },
    "639": {
      "offset": [
        918,
        963
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "640": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        918,
        963
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "643": {
      "offset": [
        962,
        963
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "645": {
      "offset": [
        918,
        963
      ],
      "op": "DUP2",
      "path": "11"
    },
    "646": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        918,
        963
      ],
      "op": "JUMP",
      "path": "11"
    },
    "647": {
      "offset": [
        1405,
        1450
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "648": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1405,
        1450
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "651": {
      "offset": [
        1448,
        1450
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x17"
    },
    "653": {
      "offset": [
        1405,
        1450
      ],
      "op": "DUP2",
      "path": "11"
    },
    "654": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1405,
        1450
      ],
      "op": "JUMP",
      "path": "11"
    },
    "655": {
      "offset": [
        2012,
        2032
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "656": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2012,
        2032
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "658": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2012,
        2032
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "659": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2012,
        2032
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A2"
    },
    "662": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2012,
        2032
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "669": {
      "op": "SHL"
    },
    "670": {
      "op": "SUB"
    },
    "671": {
      "offset": [
        2012,
        2032
      ],
      "op": "AND",
      "path": "11"
    },
    "672": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2012,
        2032
      ],
      "op": "DUP2",
      "path": "11"
    },
    "673": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2012,
        2032
      ],
      "op": "JUMP",
      "path": "11"
    },
    "674": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2012,
        2032
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "675": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2012,
        2032
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "677": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2012,
        2032
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "684": {
      "op": "SHL"
    },
    "685": {
      "op": "SUB"
    },
    "686": {
      "op": "SWAP1"
    },
    "687": {
      "op": "SWAP2"
    },
    "688": {
      "op": "AND"
    },
    "689": {
      "op": "DUP2"
    },
    "690": {
      "op": "MSTORE"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "693": {
      "op": "ADD"
    },
    "694": {
      "offset": [
        2012,
        2032
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CA"
    },
    "697": {
      "op": "JUMP"
    },
    "698": {
      "offset": [
        1165,
        1204
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "699": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1165,
        1204
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "702": {
      "offset": [
        1202,
        1204
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC"
    },
    "704": {
      "offset": [
        1165,
        1204
      ],
      "op": "DUP2",
      "path": "11"
    },
    "705": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1165,
        1204
      ],
      "op": "JUMP",
      "path": "11"
    },
    "706": {
      "offset": [
        1526,
        1578
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "707": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1526,
        1578
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "710": {
      "offset": [
        1572,
        1578
      ],
      "op": "PUSH12",
      "path": "11",
      "value": "0x33B2E3C9FD0803CE8000000"
    },
    "723": {
      "offset": [
        1526,
        1578
      ],
      "op": "DUP2",
      "path": "11"
    },
    "724": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1526,
        1578
      ],
      "op": "JUMP",
      "path": "11"
    },
    "725": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "726": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229"
    },
    "729": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E3"
    },
    "732": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "733": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "735": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1824"
    },
    "738": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "0"
    },
    "739": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "740": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x748"
    },
    "743": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "0"
    },
    "744": {
      "offset": [
        1632,
        1679
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "745": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        1632,
        1679
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "748": {
      "offset": [
        1677,
        1679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x32"
    },
    "750": {
      "offset": [
        1632,
        1679
      ],
      "op": "DUP2",
      "path": "11"
    },
    "751": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        1632,
        1679
      ],
      "op": "JUMP",
      "path": "11"
    },
    "752": {
      "offset": [
        1359,
        1399
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "753": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        1359,
        1399
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "756": {
      "offset": [
        1397,
        1399
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x16"
    },
    "758": {
      "offset": [
        1359,
        1399
      ],
      "op": "DUP2",
      "path": "11"
    },
    "759": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        1359,
        1399
      ],
      "op": "JUMP",
      "path": "11"
    },
    "760": {
      "offset": [
        1069,
        1110
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "761": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        1069,
        1110
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "764": {
      "offset": [
        1108,
        1110
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "766": {
      "offset": [
        1069,
        1110
      ],
      "op": "DUP2",
      "path": "11"
    },
    "767": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        1069,
        1110
      ],
      "op": "JUMP",
      "path": "11"
    },
    "768": {
      "offset": [
        1261,
        1303
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "769": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        1261,
        1303
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "772": {
      "offset": [
        1301,
        1303
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x14"
    },
    "774": {
      "offset": [
        1261,
        1303
      ],
      "op": "DUP2",
      "path": "11"
    },
    "775": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        1261,
        1303
      ],
      "op": "JUMP",
      "path": "11"
    },
    "776": {
      "offset": [
        1309,
        1353
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "777": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        1309,
        1353
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "780": {
      "offset": [
        1351,
        1353
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x15"
    },
    "782": {
      "offset": [
        1309,
        1353
      ],
      "op": "DUP2",
      "path": "11"
    },
    "783": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        1309,
        1353
      ],
      "op": "JUMP",
      "path": "11"
    },
    "784": {
      "offset": [
        969,
        1010
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "785": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        969,
        1010
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "788": {
      "offset": [
        1009,
        1010
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "790": {
      "offset": [
        969,
        1010
      ],
      "op": "DUP2",
      "path": "11"
    },
    "791": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        969,
        1010
      ],
      "op": "JUMP",
      "path": "11"
    },
    "792": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3873,
        4938
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "793": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3873,
        4938
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "796": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3873,
        4938
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x326"
    },
    "799": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3873,
        4938
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "800": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3873,
        4938
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "802": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3873,
        4938
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13F8"
    },
    "805": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "jump": "i",
      "offset": [
        3873,
        4938
      ],
      "op": "JUMP",
      "path": "11"
    },
    "806": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3873,
        4938
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "807": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3873,
        4938
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x81E"
    },
    "810": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "jump": "i",
      "offset": [
        3873,
        4938
      ],
      "op": "JUMP",
      "path": "11"
    },
    "811": {
      "offset": [
        1210,
        1254
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "812": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        1210,
        1254
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0"
    },
    "815": {
      "offset": [
        1252,
        1254
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xD"
    },
    "817": {
      "offset": [
        1210,
        1254
      ],
      "op": "DUP2",
      "path": "11"
    },
    "818": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        1210,
        1254
      ],
      "op": "JUMP",
      "path": "11"
    },
    "819": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "820": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E6"
    },
    "823": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "826": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "827": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "829": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1860"
    },
    "832": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "0"
    },
    "833": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "840": {
      "op": "SHL"
    },
    "841": {
      "op": "SUB"
    },
    "842": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 0
    },
    "843": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP3",
      "path": "0"
    },
    "844": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "AND",
      "path": "0"
    },
    "845": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3542,
        3546
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "847": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "848": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP2",
      "path": "0"
    },
    "849": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "850": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "852": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "854": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "855": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP2",
      "path": "0"
    },
    "856": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "857": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "859": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP1",
      "path": "0"
    },
    "860": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP4",
      "path": "0"
    },
    "861": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "862": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "863": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "864": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "865": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "AND",
      "path": "0"
    },
    "866": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "DUP3",
      "path": "0"
    },
    "867": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "868": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "869": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "870": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "871": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "872": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "873": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "874": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "876": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "AND",
      "path": "0"
    },
    "877": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "878": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "0"
    },
    "879": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "880": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x229"
    },
    "883": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37D"
    },
    "886": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "887": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "889": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1893"
    },
    "892": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMP",
      "path": "0"
    },
    "893": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "894": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA91"
    },
    "897": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMP",
      "path": "0"
    },
    "898": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "899": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2195,
        2202
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "907": {
      "op": "SHL"
    },
    "908": {
      "op": "SUB"
    },
    "909": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2222,
        2243
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 1
    },
    "910": {
      "branch": 62,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2222,
        2243
      ],
      "op": "AND",
      "path": "0"
    },
    "911": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F3"
    },
    "914": {
      "branch": 62,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "915": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "917": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "918": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "922": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "924": {
      "op": "SHL"
    },
    "925": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP2",
      "path": "0"
    },
    "926": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "929": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "931": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP3",
      "path": "0"
    },
    "932": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "ADD",
      "path": "0"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "938": {
      "op": "DUP3"
    },
    "939": {
      "op": "ADD"
    },
    "940": {
      "op": "MSTORE"
    },
    "941": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "976": {
      "op": "DUP3"
    },
    "977": {
      "op": "ADD"
    },
    "978": {
      "op": "MSTORE"
    },
    "979": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "991": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "993": {
      "op": "SHL"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "996": {
      "op": "DUP3"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "op": "MSTORE"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1001": {
      "op": "ADD"
    },
    "1002": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1003": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1005": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1006": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1007": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1008": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SUB",
      "path": "0"
    },
    "1009": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1010": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1011": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1012": {
      "op": "POP"
    },
    "1013": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2317
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "1015": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1016": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1017": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1018": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1020": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1021": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1022": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1023": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1025": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1026": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1027": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1034": {
      "op": "SHL"
    },
    "1035": {
      "op": "SUB"
    },
    "1036": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1037": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1038": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1039": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "AND",
      "path": "0"
    },
    "1040": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1041": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1042": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1043": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1044": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1045": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1046": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1047": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1048": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1049": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1050": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1262,
        1266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1058": {
      "op": "SHL"
    },
    "1059": {
      "op": "SUB"
    },
    "1060": {
      "op": "NOT"
    },
    "1061": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 3
    },
    "1062": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "AND",
      "path": "0"
    },
    "1063": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1070": {
      "op": "SHL"
    },
    "1071": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "EQ",
      "path": "0"
    },
    "1072": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1073": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44A"
    },
    "1076": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1077": {
      "op": "POP"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1084": {
      "op": "SHL"
    },
    "1085": {
      "op": "SUB"
    },
    "1086": {
      "op": "NOT"
    },
    "1087": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1088": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "AND",
      "path": "0"
    },
    "1089": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "EQ",
      "path": "0"
    },
    "1098": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1099": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1100": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x465"
    },
    "1103": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1112": {
      "op": "SHL"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1119": {
      "op": "SHL"
    },
    "1120": {
      "op": "SUB"
    },
    "1121": {
      "op": "NOT"
    },
    "1122": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 4
    },
    "1123": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "6"
    },
    "1124": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "6"
    },
    "1125": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1422,
        1458
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1126": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1278,
        1458
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1127": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1128": {
      "op": "POP"
    },
    "1129": {
      "op": "POP"
    },
    "1130": {
      "fn": "ERC1155.supportsInterface",
      "jump": "o",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1131": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1132": {
      "fn": "ERC1155.uri",
      "offset": [
        1924,
        1937
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1134": {
      "fn": "ERC1155.uri",
      "offset": [
        1956,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x2"
    },
    "1136": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1137": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1138": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47A"
    },
    "1141": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1142": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F8"
    },
    "1145": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1146": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1147": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1148": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1150": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "0"
    },
    "1151": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1153": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1154": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1155": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DIV",
      "path": "0"
    },
    "1156": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MUL",
      "path": "0"
    },
    "1157": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1159": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "0"
    },
    "1160": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1162": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1163": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1164": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1165": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "0"
    },
    "1166": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1168": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1169": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1170": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1171": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1172": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1173": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1174": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1175": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1176": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1178": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "0"
    },
    "1179": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1180": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1181": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1182": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A6"
    },
    "1185": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1186": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F8"
    },
    "1189": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1190": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1191": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1192": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1193": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F3"
    },
    "1196": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1197": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1198": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1200": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "LT",
      "path": "0"
    },
    "1201": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C8"
    },
    "1204": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1205": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1208": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1209": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1210": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1211": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DIV",
      "path": "0"
    },
    "1212": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MUL",
      "path": "0"
    },
    "1213": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1214": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1215": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1216": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1218": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "0"
    },
    "1219": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1220": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F3"
    },
    "1223": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1224": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1225": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1226": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "0"
    },
    "1227": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1228": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1229": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1231": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1232": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1234": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1236": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1237": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1238": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1239": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1240": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1241": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1242": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1243": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1244": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1246": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "0"
    },
    "1247": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1248": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1250": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "0"
    },
    "1251": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1252": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1253": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "GT",
      "path": "0"
    },
    "1254": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D6"
    },
    "1257": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1258": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1259": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1260": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SUB",
      "path": "0"
    },
    "1261": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1263": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "AND",
      "path": "0"
    },
    "1264": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1265": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "ADD",
      "path": "0"
    },
    "1266": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1267": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1268": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "0"
    },
    "1269": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "0"
    },
    "1270": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "0"
    },
    "1271": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "0"
    },
    "1272": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "0"
    },
    "1273": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1274": {
      "fn": "ERC1155.uri",
      "offset": [
        1949,
        1960
      ],
      "op": "POP",
      "path": "0"
    },
    "1275": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1276": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1277": {
      "fn": "ERC1155.uri",
      "offset": [
        1864,
        1967
      ],
      "op": "POP",
      "path": "0"
    },
    "1278": {
      "fn": "ERC1155.uri",
      "jump": "o",
      "offset": [
        1864,
        1967
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1279": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1280": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6717,
        6727
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 6
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1287": {
      "op": "SHL"
    },
    "1288": {
      "op": "SUB"
    },
    "1289": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6731,
        6745
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "1322": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6717,
        6745
      ],
      "op": "AND",
      "path": "8"
    },
    "1323": {
      "branch": 79,
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6717,
        6745
      ],
      "op": "EQ",
      "path": "8"
    },
    "1324": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6713,
        6822
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x579"
    },
    "1327": {
      "branch": 79,
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6713,
        6822
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1328": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1330": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1331": {
      "op": "PUSH4",
      "value": "0x73E64FD"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1338": {
      "op": "SHL"
    },
    "1339": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1340": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1341": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6788,
        6798
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1342": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1344": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1345": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "ADD",
      "path": "8"
    },
    "1346": {
      "op": "MSTORE"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1353": {
      "op": "SHL"
    },
    "1354": {
      "op": "SUB"
    },
    "1355": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6800,
        6814
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "1388": {
      "op": "AND"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1391": {
      "op": "DUP3"
    },
    "1392": {
      "op": "ADD"
    },
    "1393": {
      "op": "MSTORE"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1396": {
      "op": "ADD"
    },
    "1397": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3EA"
    },
    "1400": {
      "op": "JUMP"
    },
    "1401": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6713,
        6822
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1402": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6827,
        6869
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 7,
      "value": "0x583"
    },
    "1405": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6846,
        6855
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1406": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6857,
        6868
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1407": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6827,
        6845
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB1E"
    },
    "1410": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        6827,
        6869
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1411": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6827,
        6869
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1412": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "POP",
      "path": "8"
    },
    "1413": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "POP",
      "path": "8"
    },
    "1414": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "o",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1415": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1422": {
      "op": "SHL"
    },
    "1423": {
      "op": "SUB"
    },
    "1424": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 8
    },
    "1425": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "AND",
      "path": "0"
    },
    "1426": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 9
    },
    "1427": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "EQ",
      "path": "0"
    },
    "1428": {
      "branch": 63,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1429": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A3"
    },
    "1432": {
      "branch": 63,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4422
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1433": {
      "op": "POP"
    },
    "1434": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4386,
        4422
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A3"
    },
    "1437": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4403,
        4407
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1438": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1439": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "1442": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1443": {
      "branch": 64,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4386,
        4422
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1444": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60A"
    },
    "1447": {
      "branch": 64,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1448": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1450": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1451": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1457": {
      "op": "SHL"
    },
    "1458": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1459": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1462": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1464": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1465": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "ADD",
      "path": "0"
    },
    "1466": {
      "op": "MSTORE"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1471": {
      "op": "DUP3"
    },
    "1472": {
      "op": "ADD"
    },
    "1473": {
      "op": "MSTORE"
    },
    "1474": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1509": {
      "op": "DUP3"
    },
    "1510": {
      "op": "ADD"
    },
    "1511": {
      "op": "MSTORE"
    },
    "1512": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1533": {
      "op": "SHL"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1536": {
      "op": "DUP3"
    },
    "1537": {
      "op": "ADD"
    },
    "1538": {
      "op": "MSTORE"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1541": {
      "op": "ADD"
    },
    "1542": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "1545": {
      "op": "JUMP"
    },
    "1546": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1547": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4560
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x617"
    },
    "1550": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4531,
        4535
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1551": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4537,
        4539
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1552": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4541,
        4544
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1553": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4546,
        4553
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1554": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4555,
        4559
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1555": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBFD"
    },
    "1558": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4508,
        4560
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1559": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4560
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1560": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "0"
    },
    "1561": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "0"
    },
    "1562": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "0"
    },
    "1563": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "0"
    },
    "1564": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "0"
    },
    "1565": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1566": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1567": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2645,
        2661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1569": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2704,
        2707
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 11
    },
    "1570": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2704,
        2714
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1571": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2693
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1572": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2700
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1573": {
      "branch": 65,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2714
      ],
      "op": "EQ",
      "path": "0"
    },
    "1574": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x683"
    },
    "1577": {
      "branch": 65,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1578": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1580": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1581": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1587": {
      "op": "SHL"
    },
    "1588": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1589": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1592": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1594": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1595": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "ADD",
      "path": "0"
    },
    "1596": {
      "op": "MSTORE"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1601": {
      "op": "DUP3"
    },
    "1602": {
      "op": "ADD"
    },
    "1603": {
      "op": "MSTORE"
    },
    "1604": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1639": {
      "op": "DUP3"
    },
    "1640": {
      "op": "ADD"
    },
    "1641": {
      "op": "MSTORE"
    },
    "1642": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "1654": {
      "op": "SHL"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1657": {
      "op": "DUP3"
    },
    "1658": {
      "op": "ADD"
    },
    "1659": {
      "op": "MSTORE"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1662": {
      "op": "ADD"
    },
    "1663": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "1666": {
      "op": "JUMP"
    },
    "1667": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1668": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1670": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2818,
        2826
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1671": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2818,
        2833
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1672": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1681": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1682": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "GT",
      "path": "0"
    },
    "1683": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1684": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69F"
    },
    "1687": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1688": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69F"
    },
    "1691": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D8"
    },
    "1694": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1695": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1696": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1698": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1699": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1700": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1701": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1702": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1703": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1704": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1706": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MUL",
      "path": "0"
    },
    "1707": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1709": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "0"
    },
    "1710": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1711": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "0"
    },
    "1712": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1714": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1715": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1716": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1717": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C8"
    },
    "1720": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1721": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1722": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1724": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "0"
    },
    "1725": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1727": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1728": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MUL",
      "path": "0"
    },
    "1729": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1730": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1731": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1732": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "1733": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "0"
    },
    "1734": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1735": {
      "op": "POP"
    },
    "1736": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1737": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "POP",
      "path": "0"
    },
    "1738": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1739": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2834
      ],
      "op": "POP",
      "path": "0"
    },
    "1740": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2850,
        2859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1742": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1743": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2869,
        2877
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1744": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2869,
        2884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1745": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2866
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1746": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2884
      ],
      "op": "LT",
      "path": "0"
    },
    "1747": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1748": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x740"
    },
    "1751": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1752": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2954
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x713"
    },
    "1755": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2942
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1756": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2943,
        2944
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1757": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1758": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1759": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1760": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "LT",
      "path": "0"
    },
    "1761": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EC"
    },
    "1764": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1765": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EC"
    },
    "1768": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1932"
    },
    "1771": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1772": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1773": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1775": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MUL",
      "path": "0"
    },
    "1776": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1778": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "ADD",
      "path": "0"
    },
    "1779": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "ADD",
      "path": "0"
    },
    "1780": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1781": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1782": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2951,
        2952
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1783": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1784": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1785": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1786": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "LT",
      "path": "0"
    },
    "1787": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x706"
    },
    "1790": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1791": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x706"
    },
    "1794": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1932"
    },
    "1797": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1798": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1799": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1801": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MUL",
      "path": "0"
    },
    "1802": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1804": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "ADD",
      "path": "0"
    },
    "1805": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "ADD",
      "path": "0"
    },
    "1806": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1807": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2933
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x382"
    },
    "1810": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2924,
        2954
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1811": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1812": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2918
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1813": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2919,
        2920
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1814": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1815": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1816": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1817": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "LT",
      "path": "0"
    },
    "1818": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x725"
    },
    "1821": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1822": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x725"
    },
    "1825": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1932"
    },
    "1828": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1829": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1830": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1832": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1833": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1834": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "MUL",
      "path": "0"
    },
    "1835": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1836": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1837": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1838": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "ADD",
      "path": "0"
    },
    "1839": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "ADD",
      "path": "0"
    },
    "1840": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2954
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1841": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x739"
    },
    "1844": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1845": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x195E"
    },
    "1848": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2886,
        2889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1849": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1850": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1851": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "POP",
      "path": "0"
    },
    "1852": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CE"
    },
    "1855": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1856": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1857": {
      "op": "POP"
    },
    "1858": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2982,
        2995
      ],
      "op": "SWAP4",
      "path": "0",
      "statement": 14
    },
    "1859": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1860": {
      "op": "POP"
    },
    "1861": {
      "op": "POP"
    },
    "1862": {
      "op": "POP"
    },
    "1863": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1864": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1871": {
      "op": "SHL"
    },
    "1872": {
      "op": "SUB"
    },
    "1873": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 15
    },
    "1874": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "AND",
      "path": "0"
    },
    "1875": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1876": {
      "branch": 66,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "SUB",
      "path": "0"
    },
    "1877": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B2"
    },
    "1880": {
      "branch": 66,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1881": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1883": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1884": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1890": {
      "op": "SHL"
    },
    "1891": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1892": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1895": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1897": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1898": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "ADD",
      "path": "0"
    },
    "1899": {
      "op": "MSTORE"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1904": {
      "op": "DUP3"
    },
    "1905": {
      "op": "ADD"
    },
    "1906": {
      "op": "MSTORE"
    },
    "1907": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1942": {
      "op": "DUP3"
    },
    "1943": {
      "op": "ADD"
    },
    "1944": {
      "op": "MSTORE"
    },
    "1945": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1957": {
      "op": "SHL"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1960": {
      "op": "DUP3"
    },
    "1961": {
      "op": "ADD"
    },
    "1962": {
      "op": "MSTORE"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1965": {
      "op": "ADD"
    },
    "1966": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "1969": {
      "op": "JUMP"
    },
    "1970": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1971": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1972": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x0"
    },
    "1974": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1975": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1976": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1977": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1979": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1981": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1982": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1983": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1984": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1986": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1987": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1988": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1995": {
      "op": "SHL"
    },
    "1996": {
      "op": "SUB"
    },
    "1997": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1998": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "AND",
      "path": "0"
    },
    "1999": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2000": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2001": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2002": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2003": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2004": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2005": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2006": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2007": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2008": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2009": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2010": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2013": {
      "op": "NOT"
    },
    "2014": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "AND",
      "path": "0"
    },
    "2015": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2016": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2017": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2018": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2019": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2020": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "OR",
      "path": "0"
    },
    "2021": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2022": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2023": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2024": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 17
    },
    "2025": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2026": {
      "op": "SWAP1"
    },
    "2027": {
      "op": "DUP2"
    },
    "2028": {
      "op": "MSTORE"
    },
    "2029": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2030": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2031": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2032": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2065": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2066": {
      "op": "ADD"
    },
    "2067": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2069": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2070": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2071": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2072": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SUB",
      "path": "0"
    },
    "2073": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2074": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2075": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "POP",
      "path": "0"
    },
    "2076": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "POP",
      "path": "0"
    },
    "2077": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2078": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3873,
        4938
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2079": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3957,
        3974
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "op": "SUB"
    },
    "2089": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4007,
        4027
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 18
    },
    "2090": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4007,
        4027
      ],
      "op": "AND",
      "path": "11"
    },
    "2091": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2092": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4007,
        4027
      ],
      "op": "EQ",
      "path": "11"
    },
    "2093": {
      "branch": 59,
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4007,
        4027
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2094": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4007,
        4067
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x83C"
    },
    "2097": {
      "branch": 59,
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4007,
        4067
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4031,
        4067
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x83C"
    },
    "2102": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4048,
        4052
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2103": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2104": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "2107": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2108": {
      "branch": 60,
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4031,
        4067
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2109": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3987,
        4131
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x898"
    },
    "2112": {
      "branch": 60,
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3987,
        4131
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2113": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3987,
        4131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2115": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3987,
        4131
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2116": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2122": {
      "op": "SHL"
    },
    "2123": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3987,
        4131
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2124": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3987,
        4131
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2127": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3987,
        4131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2129": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3987,
        4131
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2130": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3987,
        4131
      ],
      "op": "ADD",
      "path": "11"
    },
    "2131": {
      "op": "MSTORE"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2136": {
      "op": "DUP3"
    },
    "2137": {
      "op": "ADD"
    },
    "2138": {
      "op": "MSTORE"
    },
    "2139": {
      "op": "PUSH32",
      "value": "0x416E76696C3A2063616C6C6572206973206E6F74206F776E6572206E6F722061"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2174": {
      "op": "DUP3"
    },
    "2175": {
      "op": "ADD"
    },
    "2176": {
      "op": "MSTORE"
    },
    "2177": {
      "op": "PUSH7",
      "value": "0x1C1C1C9BDD9959"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0xCA"
    },
    "2187": {
      "op": "SHL"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2190": {
      "op": "DUP3"
    },
    "2191": {
      "op": "ADD"
    },
    "2192": {
      "op": "MSTORE"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2195": {
      "op": "ADD"
    },
    "2196": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3987,
        4131
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3EA"
    },
    "2199": {
      "op": "JUMP"
    },
    "2200": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        3987,
        4131
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2201": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4455,
        4456
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 19,
      "value": "0x3"
    },
    "2203": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4441,
        4452
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8A5"
    },
    "2206": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4450,
        4452
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "2208": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4441,
        4447
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2209": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4441,
        4452
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1977"
    },
    "2212": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "jump": "i",
      "offset": [
        4441,
        4452
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2213": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4441,
        4452
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2214": {
      "branch": 61,
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4441,
        4456
      ],
      "op": "LT",
      "path": "11"
    },
    "2215": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4433,
        4498
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8FE"
    },
    "2218": {
      "branch": 61,
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4433,
        4498
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2219": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4433,
        4498
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2221": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4433,
        4498
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2222": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2228": {
      "op": "SHL"
    },
    "2229": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4433,
        4498
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2230": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4433,
        4498
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2233": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4433,
        4498
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2235": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4433,
        4498
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2236": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4433,
        4498
      ],
      "op": "ADD",
      "path": "11"
    },
    "2237": {
      "op": "MSTORE"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2240": {
      "op": "DUP1"
    },
    "2241": {
      "op": "DUP3"
    },
    "2242": {
      "op": "ADD"
    },
    "2243": {
      "op": "MSTORE"
    },
    "2244": {
      "op": "PUSH32",
      "value": "0x416E76696C3A2043616E6E6F742075706772616465206C6567656E6461727920"
    },
    "2277": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2279": {
      "op": "DUP3"
    },
    "2280": {
      "op": "ADD"
    },
    "2281": {
      "op": "MSTORE"
    },
    "2282": {
      "op": "PUSH4",
      "value": "0x6974656D"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2289": {
      "op": "SHL"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2292": {
      "op": "DUP3"
    },
    "2293": {
      "op": "ADD"
    },
    "2294": {
      "op": "MSTORE"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2297": {
      "op": "ADD"
    },
    "2298": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4433,
        4498
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3EA"
    },
    "2301": {
      "op": "JUMP"
    },
    "2302": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4433,
        4498
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2303": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4661,
        4677
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 20,
      "value": "0x4"
    },
    "2305": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4661,
        4677
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2306": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4661,
        4677
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2307": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2309": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2310": {
      "op": "PUSH4",
      "value": "0x5D3B1D3"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2317": {
      "op": "SHL"
    },
    "2318": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2319": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2320": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4638,
        4647
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "2353": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2354": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2355": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "ADD",
      "path": "11"
    },
    "2356": {
      "op": "SWAP3"
    },
    "2357": {
      "op": "SWAP1"
    },
    "2358": {
      "op": "SWAP3"
    },
    "2359": {
      "op": "MSTORE"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2364": {
      "op": "SHL"
    },
    "2365": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4661,
        4677
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2366": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4661,
        4677
      ],
      "op": "DIV",
      "path": "11"
    },
    "2367": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4661,
        4677
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2376": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4661,
        4677
      ],
      "op": "AND",
      "path": "11"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2379": {
      "op": "DUP3"
    },
    "2380": {
      "op": "ADD"
    },
    "2381": {
      "op": "MSTORE"
    },
    "2382": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "2385": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4691,
        4713
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "2418": {
      "op": "AND"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2421": {
      "op": "DUP3"
    },
    "2422": {
      "op": "ADD"
    },
    "2423": {
      "op": "MSTORE"
    },
    "2424": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2429": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4727,
        4745
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "2462": {
      "op": "DUP2"
    },
    "2463": {
      "op": "AND"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2466": {
      "op": "DUP4"
    },
    "2467": {
      "op": "ADD"
    },
    "2468": {
      "op": "MSTORE"
    },
    "2469": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4759,
        4769
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "2502": {
      "op": "AND"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2505": {
      "op": "DUP3"
    },
    "2506": {
      "op": "ADD"
    },
    "2507": {
      "op": "MSTORE"
    },
    "2508": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4605
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2547": {
      "op": "SHL"
    },
    "2548": {
      "op": "SUB"
    },
    "2549": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4624
      ],
      "op": "AND",
      "path": "11"
    },
    "2550": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4624
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2551": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4624
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x5D3B1D30"
    },
    "2556": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4624
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "2559": {
      "op": "ADD"
    },
    "2560": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2562": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2564": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2565": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2566": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2567": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "SUB",
      "path": "11"
    },
    "2568": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2569": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2571": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2572": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "GAS",
      "path": "11"
    },
    "2573": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "CALL",
      "path": "11"
    },
    "2574": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2575": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2576": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2577": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA1E"
    },
    "2580": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2581": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2582": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2584": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2585": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2586": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2587": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2589": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2590": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2591": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "POP",
      "path": "11"
    },
    "2592": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "POP",
      "path": "11"
    },
    "2593": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "POP",
      "path": "11"
    },
    "2594": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "POP",
      "path": "11"
    },
    "2595": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2597": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2598": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2599": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2601": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "NOT",
      "path": "11"
    },
    "2602": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2604": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2605": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "ADD",
      "path": "11"
    },
    "2606": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "AND",
      "path": "11"
    },
    "2607": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2608": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "ADD",
      "path": "11"
    },
    "2609": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2610": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2612": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2613": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "POP",
      "path": "11"
    },
    "2614": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2615": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "ADD",
      "path": "11"
    },
    "2616": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2617": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA42"
    },
    "2620": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2621": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2622": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1999"
    },
    "2625": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "jump": "i",
      "offset": [
        4594,
        4779
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2626": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4594,
        4779
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2627": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 21,
      "value": "0x40"
    },
    "2629": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2630": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2631": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2632": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2633": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "ADD",
      "path": "11"
    },
    "2634": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2635": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2636": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4886,
        4896
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2637": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2638": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2639": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2641": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2642": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2643": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "ADD",
      "path": "11"
    },
    "2644": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "2645": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2646": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4858,
        4930
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2649": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4855
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2650": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4855
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2651": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4855
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2652": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4844
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2654": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4855
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2655": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4855
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2656": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4855
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2657": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4855
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2658": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4855
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2659": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4855
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2660": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4855
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2661": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2662": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2663": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2664": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2671": {
      "op": "SHL"
    },
    "2672": {
      "op": "SUB"
    },
    "2673": {
      "op": "NOT"
    },
    "2674": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "AND",
      "path": "11"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2681": {
      "op": "SHL"
    },
    "2682": {
      "op": "SUB"
    },
    "2683": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2684": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2685": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "AND",
      "path": "11"
    },
    "2686": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "OR",
      "path": "11"
    },
    "2687": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2688": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2689": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2690": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2693": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2694": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2695": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "ADD",
      "path": "11"
    },
    "2696": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2697": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2698": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2699": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4930
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2700": {
      "op": "POP"
    },
    "2701": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4829,
        4855
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2702": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "offset": [
        4582,
        4779
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2703": {
      "op": "POP"
    },
    "2704": {
      "fn": "Anvil.nonDeterministicUpgradeItem",
      "jump": "o",
      "offset": [
        3873,
        4938
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2705": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2712": {
      "op": "SHL"
    },
    "2713": {
      "op": "SUB"
    },
    "2714": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 22
    },
    "2715": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "AND",
      "path": "0"
    },
    "2716": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2717": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "EQ",
      "path": "0"
    },
    "2718": {
      "branch": 67,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2719": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3936
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAD"
    },
    "2722": {
      "branch": 67,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3936
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2723": {
      "op": "POP"
    },
    "2724": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3900,
        3936
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAD"
    },
    "2727": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3917,
        3921
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2728": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2729": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "2732": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2733": {
      "branch": 68,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3900,
        3936
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2734": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "2737": {
      "branch": 68,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2738": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2740": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2741": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2747": {
      "op": "SHL"
    },
    "2748": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2749": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2752": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2754": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2755": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "ADD",
      "path": "0"
    },
    "2756": {
      "op": "MSTORE"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2761": {
      "op": "DUP3"
    },
    "2762": {
      "op": "ADD"
    },
    "2763": {
      "op": "MSTORE"
    },
    "2764": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2799": {
      "op": "DUP3"
    },
    "2800": {
      "op": "ADD"
    },
    "2801": {
      "op": "MSTORE"
    },
    "2802": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "2814": {
      "op": "SHL"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2817": {
      "op": "DUP3"
    },
    "2818": {
      "op": "ADD"
    },
    "2819": {
      "op": "MSTORE"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2822": {
      "op": "ADD"
    },
    "2823": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "2826": {
      "op": "JUMP"
    },
    "2827": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2828": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4013,
        4058
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 23,
      "value": "0x617"
    },
    "2831": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4031,
        4035
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2832": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4037,
        4039
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2833": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4041,
        4043
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2834": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4045,
        4051
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2835": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4053,
        4057
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2836": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4013,
        4030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDA"
    },
    "2839": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4013,
        4058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2840": {
      "op": "JUMPDEST"
    },
    "2841": {
      "op": "EXTCODESIZE"
    },
    "2842": {
      "op": "ISZERO"
    },
    "2843": {
      "op": "ISZERO"
    },
    "2844": {
      "op": "SWAP1"
    },
    "2845": {
      "jump": "o",
      "op": "JUMP"
    },
    "2846": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5035,
        5618
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2847": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5141,
        5165
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2849": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5168,
        5194
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2850": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5168,
        5194
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2851": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5168,
        5194
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2852": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5168,
        5183
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2854": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5168,
        5194
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2856": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5168,
        5194
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2857": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5168,
        5194
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2859": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5168,
        5194
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2860": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5168,
        5194
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2861": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5267,
        5275
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 24
    },
    "2862": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5267,
        5275
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2863": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5267,
        5275
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2865": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5277,
        5285
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2866": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5277,
        5285
      ],
      "op": "ADD",
      "path": "11"
    },
    "2867": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5277,
        5285
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2868": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5261,
        5302
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB48"
    },
    "2871": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5261,
        5302
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2878": {
      "op": "SHL"
    },
    "2879": {
      "op": "SUB"
    },
    "2880": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5267,
        5275
      ],
      "op": "AND",
      "path": "11"
    },
    "2881": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5267,
        5275
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2882": {
      "offset": [
        2002,
        2004
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "2884": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5261,
        5266
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF00"
    },
    "2887": {
      "fn": "Anvil.fulfillRandomWords",
      "jump": "i",
      "offset": [
        5261,
        5302
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2888": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5261,
        5302
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2889": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5445,
        5448
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 25,
      "value": "0x64"
    },
    "2891": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5439
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2892": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5440,
        5441
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2894": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2895": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2896": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2897": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "LT",
      "path": "11"
    },
    "2898": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB5D"
    },
    "2901": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2902": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB5D"
    },
    "2905": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1932"
    },
    "2908": {
      "fn": "Anvil.fulfillRandomWords",
      "jump": "i",
      "offset": [
        5428,
        5442
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2909": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2910": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2912": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "MUL",
      "path": "11"
    },
    "2913": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2915": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "ADD",
      "path": "11"
    },
    "2916": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "ADD",
      "path": "11"
    },
    "2917": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5442
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2918": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5448
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB6F"
    },
    "2921": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5448
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2922": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5448
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2923": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5448
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1977"
    },
    "2926": {
      "fn": "Anvil.fulfillRandomWords",
      "jump": "i",
      "offset": [
        5428,
        5448
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2927": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5428,
        5448
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2928": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5427,
        5453
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB7A"
    },
    "2931": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5427,
        5453
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2932": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5452,
        5453
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2934": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5427,
        5453
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x19B2"
    },
    "2937": {
      "fn": "Anvil.fulfillRandomWords",
      "jump": "i",
      "offset": [
        5427,
        5453
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2938": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5427,
        5453
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2939": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5411,
        5424
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "2941": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5411,
        5453
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2942": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5411,
        5453
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2943": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5411,
        5453
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2944": {
      "offset": [
        1677,
        1679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x32"
    },
    "2946": {
      "op": "LT"
    },
    "2947": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5463,
        5563
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBBD"
    },
    "2950": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5463,
        5563
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2951": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5524,
        5532
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 26
    },
    "2952": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5524,
        5532
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2953": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5524,
        5532
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2955": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5534,
        5542
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2956": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5534,
        5542
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2957": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5534,
        5542
      ],
      "op": "ADD",
      "path": "11"
    },
    "2958": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5534,
        5542
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2959": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBBD"
    },
    "2962": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2969": {
      "op": "SHL"
    },
    "2970": {
      "op": "SUB"
    },
    "2971": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5524,
        5532
      ],
      "op": "AND",
      "path": "11"
    },
    "2972": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5524,
        5532
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2973": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5534,
        5544
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBA6"
    },
    "2976": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5534,
        5544
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2977": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5534,
        5542
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2978": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5534,
        5544
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x19B2"
    },
    "2981": {
      "fn": "Anvil.fulfillRandomWords",
      "jump": "i",
      "offset": [
        5534,
        5544
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2982": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5534,
        5544
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2983": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5546,
        5547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2985": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2987": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2988": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2989": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2991": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "ADD",
      "path": "11"
    },
    "2992": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2994": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2995": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2996": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2998": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2999": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3000": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "POP",
      "path": "11"
    },
    "3001": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5523
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x107A"
    },
    "3004": {
      "fn": "Anvil.fulfillRandomWords",
      "jump": "i",
      "offset": [
        5518,
        5552
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3005": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5518,
        5552
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3006": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5578,
        5611
      ],
      "op": "PUSH32",
      "path": "11",
      "statement": 27,
      "value": "0x62E0F3B955D02692C7BC11E60C384D9EAEC33908C4A2D399D566FA6B4942178F"
    },
    "3039": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5597,
        5610
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "3041": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5597,
        5610
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3042": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5578,
        5611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3044": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5578,
        5611
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3045": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5578,
        5611
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBF0"
    },
    "3048": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5578,
        5611
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3049": {
      "op": "DUP2"
    },
    "3050": {
      "op": "MSTORE"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3053": {
      "op": "ADD"
    },
    "3054": {
      "op": "SWAP1"
    },
    "3055": {
      "op": "JUMP"
    },
    "3056": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5578,
        5611
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3057": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5578,
        5611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3059": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5578,
        5611
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3060": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5578,
        5611
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3061": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5578,
        5611
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3062": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5578,
        5611
      ],
      "op": "SUB",
      "path": "11"
    },
    "3063": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5578,
        5611
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3064": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5578,
        5611
      ],
      "op": "LOG1",
      "path": "11"
    },
    "3065": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5130,
        5618
      ],
      "op": "POP",
      "path": "11"
    },
    "3066": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5035,
        5618
      ],
      "op": "POP",
      "path": "11"
    },
    "3067": {
      "fn": "Anvil.fulfillRandomWords",
      "offset": [
        5035,
        5618
      ],
      "op": "POP",
      "path": "11"
    },
    "3068": {
      "fn": "Anvil.fulfillRandomWords",
      "jump": "o",
      "offset": [
        5035,
        5618
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3069": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3070": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6380,
        6387
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 28
    },
    "3071": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6380,
        6394
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3072": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6369
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3073": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6376
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3074": {
      "branch": 69,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6394
      ],
      "op": "EQ",
      "path": "0"
    },
    "3075": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5F"
    },
    "3078": {
      "branch": 69,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3079": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3081": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3088": {
      "op": "SHL"
    },
    "3089": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3090": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3093": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3095": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3096": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "ADD",
      "path": "0"
    },
    "3097": {
      "op": "MSTORE"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3102": {
      "op": "DUP3"
    },
    "3103": {
      "op": "ADD"
    },
    "3104": {
      "op": "MSTORE"
    },
    "3105": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3140": {
      "op": "DUP3"
    },
    "3141": {
      "op": "ADD"
    },
    "3142": {
      "op": "MSTORE"
    },
    "3143": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "3154": {
      "op": "SHL"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3157": {
      "op": "DUP3"
    },
    "3158": {
      "op": "ADD"
    },
    "3159": {
      "op": "MSTORE"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3162": {
      "op": "ADD"
    },
    "3163": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "3166": {
      "op": "JUMP"
    },
    "3167": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3174": {
      "op": "SHL"
    },
    "3175": {
      "op": "SUB"
    },
    "3176": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6457,
        6473
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 29
    },
    "3177": {
      "branch": 70,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6457,
        6473
      ],
      "op": "AND",
      "path": "0"
    },
    "3178": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC85"
    },
    "3181": {
      "branch": 70,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3182": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3184": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3185": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3191": {
      "op": "SHL"
    },
    "3192": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3193": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3194": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3196": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "ADD",
      "path": "0"
    },
    "3197": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "3200": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3201": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19CA"
    },
    "3204": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3205": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3206": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3207": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6526,
        6542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3209": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3210": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6663,
        6666
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3211": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6663,
        6673
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3212": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6659,
        6660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3213": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6659,
        6673
      ],
      "op": "LT",
      "path": "0"
    },
    "3214": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3215": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6C"
    },
    "3218": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3219": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6704
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3221": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6710
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3222": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6711,
        6712
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3223": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3224": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3225": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3226": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "LT",
      "path": "0"
    },
    "3227": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA6"
    },
    "3230": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3231": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA6"
    },
    "3234": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1932"
    },
    "3237": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3238": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3239": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3241": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MUL",
      "path": "0"
    },
    "3242": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3244": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "ADD",
      "path": "0"
    },
    "3245": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "ADD",
      "path": "0"
    },
    "3246": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3247": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3248": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6713
      ],
      "op": "POP",
      "path": "0"
    },
    "3249": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6727,
        6741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3251": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6751
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3252": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6752,
        6753
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3253": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3254": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3255": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3256": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "LT",
      "path": "0"
    },
    "3257": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC4"
    },
    "3260": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3261": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC4"
    },
    "3264": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1932"
    },
    "3267": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3268": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3269": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3271": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3272": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3273": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MUL",
      "path": "0"
    },
    "3274": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3275": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3276": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3277": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "ADD",
      "path": "0"
    },
    "3278": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3279": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "ADD",
      "path": "0"
    },
    "3280": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3281": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6769,
        6788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3283": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3284": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3285": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3286": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3287": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3288": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3289": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3291": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3292": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3293": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3300": {
      "op": "SHL"
    },
    "3301": {
      "op": "SUB"
    },
    "3302": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "DUP15",
      "path": "0"
    },
    "3303": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "AND",
      "path": "0"
    },
    "3304": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3305": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3306": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3307": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3308": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3309": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3310": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3311": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3312": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3313": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3314": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3315": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3316": {
      "op": "POP"
    },
    "3317": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 30
    },
    "3318": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3319": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "LT",
      "path": "0"
    },
    "3320": {
      "branch": 71,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3321": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD14"
    },
    "3324": {
      "branch": 71,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3325": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3327": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3328": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3334": {
      "op": "SHL"
    },
    "3335": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3336": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3337": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3339": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "ADD",
      "path": "0"
    },
    "3340": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "3343": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3344": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0F"
    },
    "3347": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3348": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3349": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6951
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x0"
    },
    "3351": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3352": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3353": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3354": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3356": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3357": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3358": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3359": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3361": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3362": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3363": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3370": {
      "op": "SHL"
    },
    "3371": {
      "op": "SUB"
    },
    "3372": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP15",
      "path": "0"
    },
    "3373": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3374": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "AND",
      "path": "0"
    },
    "3375": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3376": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3377": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3378": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3379": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3380": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3381": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3382": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3383": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3384": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SUB",
      "path": "0"
    },
    "3385": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6984
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3386": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6984
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3387": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 32
    },
    "3388": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP12",
      "path": "0"
    },
    "3389": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "AND",
      "path": "0"
    },
    "3390": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3391": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3392": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3393": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3394": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3395": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3396": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3397": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3398": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6951
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3399": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD51"
    },
    "3402": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3403": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3404": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3405": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B2"
    },
    "3408": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7012,
        7039
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3409": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3410": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3411": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "0"
    },
    "3412": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "0"
    },
    "3413": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3414": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3415": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3416": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "0"
    },
    "3417": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "0"
    },
    "3418": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "0"
    },
    "3419": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "0"
    },
    "3420": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 33
    },
    "3421": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD65"
    },
    "3424": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3425": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x195E"
    },
    "3428": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6675,
        6678
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3429": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3430": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3431": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "POP",
      "path": "0"
    },
    "3432": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC89"
    },
    "3435": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3436": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3437": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "POP",
      "path": "0"
    },
    "3438": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7095,
        7097
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 34
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3445": {
      "op": "SHL"
    },
    "3446": {
      "op": "SUB"
    },
    "3447": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "0"
    },
    "3448": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7089,
        7093
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3455": {
      "op": "SHL"
    },
    "3456": {
      "op": "SUB"
    },
    "3457": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "0"
    },
    "3458": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7079,
        7087
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3465": {
      "op": "SHL"
    },
    "3466": {
      "op": "SUB"
    },
    "3467": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "0"
    },
    "3468": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "3501": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7099,
        7102
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3502": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7104,
        7111
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3503": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3505": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3506": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDBC"
    },
    "3509": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3510": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3511": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3512": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A59"
    },
    "3515": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7065,
        7112
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3516": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3517": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3519": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3520": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3521": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3522": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SUB",
      "path": "0"
    },
    "3523": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3524": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "LOG4",
      "path": "0"
    },
    "3525": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7198
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 35,
      "value": "0xDD2"
    },
    "3528": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7159,
        7167
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3529": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7169,
        7173
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3530": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7175,
        7177
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3531": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7179,
        7182
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3532": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7184,
        7191
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3533": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7193,
        7197
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3534": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7158
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117B"
    },
    "3537": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7123,
        7198
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3538": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7198
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3539": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6348,
        7205
      ],
      "op": "POP",
      "path": "0"
    },
    "3540": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "0"
    },
    "3541": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "0"
    },
    "3542": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "0"
    },
    "3543": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "0"
    },
    "3544": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "0"
    },
    "3545": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        6160,
        7205
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3546": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3553": {
      "op": "SHL"
    },
    "3554": {
      "op": "SUB"
    },
    "3555": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5198,
        5214
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 36
    },
    "3556": {
      "branch": 72,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5198,
        5214
      ],
      "op": "AND",
      "path": "0"
    },
    "3557": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE00"
    },
    "3560": {
      "branch": 72,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3561": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3563": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3564": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3570": {
      "op": "SHL"
    },
    "3571": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3572": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3573": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3575": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "ADD",
      "path": "0"
    },
    "3576": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "3579": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3580": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19CA"
    },
    "3583": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3584": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3585": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3586": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5309,
        5405
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 37,
      "value": "0xE19"
    },
    "3589": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3590": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5340,
        5344
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3591": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5348
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3592": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5371
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE10"
    },
    "3595": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5368,
        5370
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3596": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5367
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D6"
    },
    "3599": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5350,
        5371
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3600": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5371
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3601": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5373,
        5398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x617"
    },
    "3604": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5391,
        5397
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3605": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5373,
        5390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D6"
    },
    "3608": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5373,
        5398
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3609": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5309,
        5405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3610": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5416,
        5435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3612": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3613": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3614": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3615": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3617": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3618": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3619": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3620": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3622": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3623": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3624": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3631": {
      "op": "SHL"
    },
    "3632": {
      "op": "SUB"
    },
    "3633": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "DUP11",
      "path": "0"
    },
    "3634": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "AND",
      "path": "0"
    },
    "3635": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3636": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3637": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3638": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3639": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3640": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3641": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3642": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3643": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 38
    },
    "3644": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3645": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "LT",
      "path": "0"
    },
    "3646": {
      "branch": 73,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3647": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE5A"
    },
    "3650": {
      "branch": 73,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3651": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3653": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3654": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3660": {
      "op": "SHL"
    },
    "3661": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3662": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3663": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3665": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "ADD",
      "path": "0"
    },
    "3666": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "3669": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3670": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0F"
    },
    "3673": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3674": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3675": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5586
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x0"
    },
    "3677": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3678": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3679": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3680": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3682": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3683": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3684": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3685": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3687": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3688": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3689": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3696": {
      "op": "SHL"
    },
    "3697": {
      "op": "SUB"
    },
    "3698": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP12",
      "path": "0"
    },
    "3699": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3700": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "AND",
      "path": "0"
    },
    "3701": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3702": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3703": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3704": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3705": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3706": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3707": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3708": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3709": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3710": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SUB",
      "path": "0"
    },
    "3711": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5619
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3712": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5619
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3713": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 40
    },
    "3714": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3715": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "AND",
      "path": "0"
    },
    "3716": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3717": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3718": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3719": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3720": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3721": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3722": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3723": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3724": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5586
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3725": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE97"
    },
    "3728": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3729": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3730": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3731": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B2"
    },
    "3734": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5639,
        5666
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3735": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3736": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3737": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3738": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x40"
    },
    "3743": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3744": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3745": {
      "op": "DUP7"
    },
    "3746": {
      "op": "DUP2"
    },
    "3747": {
      "op": "MSTORE"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3750": {
      "op": "DUP2"
    },
    "3751": {
      "op": "ADD"
    },
    "3752": {
      "op": "DUP7"
    },
    "3753": {
      "op": "SWAP1"
    },
    "3754": {
      "op": "MSTORE"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3761": {
      "op": "SHL"
    },
    "3762": {
      "op": "SUB"
    },
    "3763": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3764": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP10",
      "path": "0"
    },
    "3765": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "0"
    },
    "3766": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3767": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP11",
      "path": "0"
    },
    "3768": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3769": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "0"
    },
    "3770": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3771": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3772": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3773": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "0"
    },
    "3774": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3775": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "3808": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3809": {
      "op": "ADD"
    },
    "3810": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3812": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3813": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3814": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3815": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SUB",
      "path": "0"
    },
    "3816": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3817": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "LOG4",
      "path": "0"
    },
    "3818": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5807
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 42,
      "value": "0xEF7"
    },
    "3821": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5770,
        5778
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3822": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5780,
        5784
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3823": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5786,
        5788
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3824": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5790,
        5792
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3825": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5794,
        5800
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3826": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5802,
        5806
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3827": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1321"
    },
    "3830": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5739,
        5807
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3831": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5807
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3832": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5180,
        5814
      ],
      "op": "POP",
      "path": "0"
    },
    "3833": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5180,
        5814
      ],
      "op": "POP",
      "path": "0"
    },
    "3834": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "0"
    },
    "3835": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "0"
    },
    "3836": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "0"
    },
    "3837": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "0"
    },
    "3838": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "0"
    },
    "3839": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "o",
      "offset": [
        5017,
        5814
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3840": {
      "fn": "ERC1155._burn",
      "offset": [
        10394,
        11051
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3847": {
      "op": "SHL"
    },
    "3848": {
      "op": "SUB"
    },
    "3849": {
      "fn": "ERC1155._burn",
      "offset": [
        10519,
        10540
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 43
    },
    "3850": {
      "branch": 74,
      "fn": "ERC1155._burn",
      "offset": [
        10519,
        10540
      ],
      "op": "AND",
      "path": "0"
    },
    "3851": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF62"
    },
    "3854": {
      "branch": 74,
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3855": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3857": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3858": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3864": {
      "op": "SHL"
    },
    "3865": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3866": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3869": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3871": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3872": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "ADD",
      "path": "0"
    },
    "3873": {
      "op": "MSTORE"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3878": {
      "op": "DUP3"
    },
    "3879": {
      "op": "ADD"
    },
    "3880": {
      "op": "MSTORE"
    },
    "3881": {
      "op": "PUSH32",
      "value": "0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3916": {
      "op": "DUP3"
    },
    "3917": {
      "op": "ADD"
    },
    "3918": {
      "op": "MSTORE"
    },
    "3919": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3925": {
      "op": "SHL"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3928": {
      "op": "DUP3"
    },
    "3929": {
      "op": "ADD"
    },
    "3930": {
      "op": "MSTORE"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3933": {
      "op": "ADD"
    },
    "3934": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "3937": {
      "op": "JUMP"
    },
    "3938": {
      "fn": "ERC1155._burn",
      "offset": [
        10511,
        10580
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3939": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3940": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 44,
      "value": "0xF92"
    },
    "3943": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3944": {
      "fn": "ERC1155._burn",
      "offset": [
        10664,
        10671
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3945": {
      "fn": "ERC1155._burn",
      "offset": [
        10591,
        10607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3947": {
      "fn": "ERC1155._burn",
      "offset": [
        10685,
        10706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF73"
    },
    "3950": {
      "fn": "ERC1155._burn",
      "offset": [
        10703,
        10705
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3951": {
      "fn": "ERC1155._burn",
      "offset": [
        10685,
        10702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D6"
    },
    "3954": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10685,
        10706
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3955": {
      "fn": "ERC1155._burn",
      "offset": [
        10685,
        10706
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3956": {
      "fn": "ERC1155._burn",
      "offset": [
        10708,
        10733
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7C"
    },
    "3959": {
      "fn": "ERC1155._burn",
      "offset": [
        10726,
        10732
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3960": {
      "fn": "ERC1155._burn",
      "offset": [
        10708,
        10725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D6"
    },
    "3963": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10708,
        10733
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3964": {
      "fn": "ERC1155._burn",
      "offset": [
        10708,
        10733
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3965": {
      "op": "POP"
    },
    "3966": {
      "op": "POP"
    },
    "3967": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3969": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3970": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3971": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3973": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3974": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "ADD",
      "path": "0"
    },
    "3975": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3976": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3977": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3980": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3981": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3982": {
      "op": "POP"
    },
    "3983": {
      "op": "POP"
    },
    "3984": {
      "op": "POP"
    },
    "3985": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3986": {
      "fn": "ERC1155._burn",
      "offset": [
        10633,
        10738
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3987": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3989": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3990": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3991": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3992": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3994": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3995": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3996": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3997": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3999": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4000": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4001": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10787
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4008": {
      "op": "SHL"
    },
    "4009": {
      "op": "SUB"
    },
    "4010": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4011": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "AND",
      "path": "0"
    },
    "4012": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4013": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4014": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4015": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4016": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4017": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4018": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4019": {
      "fn": "ERC1155._burn",
      "offset": [
        10774,
        10796
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4020": {
      "fn": "ERC1155._burn",
      "offset": [
        10814,
        10838
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 45
    },
    "4021": {
      "fn": "ERC1155._burn",
      "offset": [
        10814,
        10838
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4022": {
      "fn": "ERC1155._burn",
      "offset": [
        10814,
        10838
      ],
      "op": "LT",
      "path": "0"
    },
    "4023": {
      "branch": 75,
      "fn": "ERC1155._burn",
      "offset": [
        10814,
        10838
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4024": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100F"
    },
    "4027": {
      "branch": 75,
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4028": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4030": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4031": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4037": {
      "op": "SHL"
    },
    "4038": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4039": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4042": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4044": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4045": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "ADD",
      "path": "0"
    },
    "4046": {
      "op": "MSTORE"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4049": {
      "op": "DUP1"
    },
    "4050": {
      "op": "DUP3"
    },
    "4051": {
      "op": "ADD"
    },
    "4052": {
      "op": "MSTORE"
    },
    "4053": {
      "op": "PUSH32",
      "value": "0x455243313135353A206275726E20616D6F756E7420657863656564732062616C"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4088": {
      "op": "DUP3"
    },
    "4089": {
      "op": "ADD"
    },
    "4090": {
      "op": "MSTORE"
    },
    "4091": {
      "op": "PUSH4",
      "value": "0x616E6365"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4098": {
      "op": "SHL"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4101": {
      "op": "DUP3"
    },
    "4102": {
      "op": "ADD"
    },
    "4103": {
      "op": "MSTORE"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4106": {
      "op": "ADD"
    },
    "4107": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "4110": {
      "op": "JUMP"
    },
    "4111": {
      "fn": "ERC1155._burn",
      "offset": [
        10806,
        10879
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4112": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10922
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x0"
    },
    "4114": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4115": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4116": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4117": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4119": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4120": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4121": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4122": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4124": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4125": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4126": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10926
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4133": {
      "op": "SHL"
    },
    "4134": {
      "op": "SUB"
    },
    "4135": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "DUP10",
      "path": "0"
    },
    "4136": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4137": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "AND",
      "path": "0"
    },
    "4138": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4139": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4140": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4141": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4142": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4143": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4144": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4145": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4146": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4147": {
      "fn": "ERC1155._burn",
      "offset": [
        10938,
        10961
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4148": {
      "fn": "ERC1155._burn",
      "offset": [
        10938,
        10961
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4149": {
      "fn": "ERC1155._burn",
      "offset": [
        10938,
        10961
      ],
      "op": "SUB",
      "path": "0"
    },
    "4150": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10961
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4151": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10961
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4152": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 47
    },
    "4153": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4154": {
      "op": "DUP10"
    },
    "4155": {
      "op": "DUP2"
    },
    "4156": {
      "op": "MSTORE"
    },
    "4157": {
      "op": "SWAP4"
    },
    "4158": {
      "op": "DUP5"
    },
    "4159": {
      "op": "ADD"
    },
    "4160": {
      "op": "DUP9"
    },
    "4161": {
      "op": "SWAP1"
    },
    "4162": {
      "op": "MSTORE"
    },
    "4163": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4164": {
      "fn": "ERC1155._burn",
      "offset": [
        10913,
        10935
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4165": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4166": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4167": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "AND",
      "path": "0"
    },
    "4168": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4169": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "4202": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4203": {
      "op": "ADD"
    },
    "4204": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4206": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4207": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4208": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4209": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "SUB",
      "path": "0"
    },
    "4210": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4211": {
      "fn": "ERC1155._burn",
      "offset": [
        10987,
        11044
      ],
      "op": "LOG4",
      "path": "0"
    },
    "4212": {
      "fn": "ERC1155._burn",
      "offset": [
        10501,
        11051
      ],
      "op": "POP",
      "path": "0"
    },
    "4213": {
      "fn": "ERC1155._burn",
      "offset": [
        10501,
        11051
      ],
      "op": "POP",
      "path": "0"
    },
    "4214": {
      "fn": "ERC1155._burn",
      "offset": [
        10394,
        11051
      ],
      "op": "POP",
      "path": "0"
    },
    "4215": {
      "fn": "ERC1155._burn",
      "offset": [
        10394,
        11051
      ],
      "op": "POP",
      "path": "0"
    },
    "4216": {
      "fn": "ERC1155._burn",
      "offset": [
        10394,
        11051
      ],
      "op": "POP",
      "path": "0"
    },
    "4217": {
      "fn": "ERC1155._burn",
      "jump": "o",
      "offset": [
        10394,
        11051
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4218": {
      "fn": "ERC1155._mint",
      "offset": [
        8502,
        9085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4225": {
      "op": "SHL"
    },
    "4226": {
      "op": "SUB"
    },
    "4227": {
      "fn": "ERC1155._mint",
      "offset": [
        8654,
        8675
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 48
    },
    "4228": {
      "branch": 76,
      "fn": "ERC1155._mint",
      "offset": [
        8654,
        8675
      ],
      "op": "AND",
      "path": "0"
    },
    "4229": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10DA"
    },
    "4232": {
      "branch": 76,
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4233": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4235": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4236": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4242": {
      "op": "SHL"
    },
    "4243": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4244": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4247": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4249": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4250": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "ADD",
      "path": "0"
    },
    "4251": {
      "op": "MSTORE"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4256": {
      "op": "DUP3"
    },
    "4257": {
      "op": "ADD"
    },
    "4258": {
      "op": "MSTORE"
    },
    "4259": {
      "op": "PUSH32",
      "value": "0x455243313135353A206D696E7420746F20746865207A65726F20616464726573"
    },
    "4292": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4294": {
      "op": "DUP3"
    },
    "4295": {
      "op": "ADD"
    },
    "4296": {
      "op": "MSTORE"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4301": {
      "op": "SHL"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4304": {
      "op": "DUP3"
    },
    "4305": {
      "op": "ADD"
    },
    "4306": {
      "op": "MSTORE"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4309": {
      "op": "ADD"
    },
    "4310": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "4313": {
      "op": "JUMP"
    },
    "4314": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4315": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4316": {
      "fn": "ERC1155._mint",
      "offset": [
        8766,
        8873
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 49,
      "value": "0x10EB"
    },
    "4319": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4320": {
      "fn": "ERC1155._mint",
      "offset": [
        8724,
        8740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4322": {
      "fn": "ERC1155._mint",
      "offset": [
        8809,
        8816
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4323": {
      "fn": "ERC1155._mint",
      "offset": [
        8818,
        8839
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE10"
    },
    "4326": {
      "fn": "ERC1155._mint",
      "offset": [
        8836,
        8838
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4327": {
      "fn": "ERC1155._mint",
      "offset": [
        8818,
        8835
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D6"
    },
    "4330": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8818,
        8839
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4331": {
      "fn": "ERC1155._mint",
      "offset": [
        8766,
        8873
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4332": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8893
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0x0"
    },
    "4334": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4335": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4336": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4337": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4339": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4340": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4341": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4342": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4344": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4345": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4346": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4353": {
      "op": "SHL"
    },
    "4354": {
      "op": "SUB"
    },
    "4355": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP10",
      "path": "0"
    },
    "4356": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "AND",
      "path": "0"
    },
    "4357": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4358": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4359": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4360": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4361": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4362": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4363": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4364": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4365": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4366": {
      "fn": "ERC1155._mint",
      "offset": [
        8910,
        8916
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4367": {
      "fn": "ERC1155._mint",
      "offset": [
        8910,
        8916
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4368": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8893
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4369": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111B"
    },
    "4372": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4373": {
      "fn": "ERC1155._mint",
      "offset": [
        8910,
        8916
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4374": {
      "fn": "ERC1155._mint",
      "offset": [
        8910,
        8916
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4375": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B2"
    },
    "4378": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8884,
        8916
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4379": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4380": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4381": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4382": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4383": {
      "op": "POP"
    },
    "4384": {
      "op": "POP"
    },
    "4385": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 51,
      "value": "0x40"
    },
    "4387": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4388": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4389": {
      "op": "DUP6"
    },
    "4390": {
      "op": "DUP2"
    },
    "4391": {
      "op": "MSTORE"
    },
    "4392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4394": {
      "op": "DUP2"
    },
    "4395": {
      "op": "ADD"
    },
    "4396": {
      "op": "DUP6"
    },
    "4397": {
      "op": "SWAP1"
    },
    "4398": {
      "op": "MSTORE"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4405": {
      "op": "SHL"
    },
    "4406": {
      "op": "SUB"
    },
    "4407": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4408": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4409": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "AND",
      "path": "0"
    },
    "4410": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4411": {
      "fn": "ERC1155._mint",
      "offset": [
        8964,
        8965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4413": {
      "fn": "ERC1155._mint",
      "offset": [
        8964,
        8965
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4414": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4415": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4416": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "AND",
      "path": "0"
    },
    "4417": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4418": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "4451": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4452": {
      "op": "ADD"
    },
    "4453": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4455": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4456": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4457": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4458": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SUB",
      "path": "0"
    },
    "4459": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4460": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "LOG4",
      "path": "0"
    },
    "4461": {
      "fn": "ERC1155._mint",
      "offset": [
        8999,
        9078
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 52,
      "value": "0x617"
    },
    "4464": {
      "fn": "ERC1155._mint",
      "offset": [
        9030,
        9038
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4465": {
      "fn": "ERC1155._mint",
      "offset": [
        9048,
        9049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4467": {
      "fn": "ERC1155._mint",
      "offset": [
        9052,
        9059
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4468": {
      "fn": "ERC1155._mint",
      "offset": [
        9061,
        9063
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4469": {
      "fn": "ERC1155._mint",
      "offset": [
        9065,
        9071
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4470": {
      "fn": "ERC1155._mint",
      "offset": [
        9073,
        9077
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4471": {
      "fn": "ERC1155._mint",
      "offset": [
        8999,
        9029
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1321"
    },
    "4474": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8999,
        9078
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4475": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14024,
        14816
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4482": {
      "op": "SHL"
    },
    "4483": {
      "op": "SUB"
    },
    "4484": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14256,
        14269
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4485": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14256,
        14269
      ],
      "op": "AND",
      "path": "0"
    },
    "4486": {
      "op": "EXTCODESIZE"
    },
    "4487": {
      "op": "ISZERO"
    },
    "4488": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14252,
        14810
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD2"
    },
    "4491": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14252,
        14810
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4492": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4494": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4495": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4502": {
      "op": "SHL"
    },
    "4503": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4504": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4511": {
      "op": "SHL"
    },
    "4512": {
      "op": "SUB"
    },
    "4513": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4514": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "AND",
      "path": "0"
    },
    "4515": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4516": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBC197C81"
    },
    "4521": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4522": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11BF"
    },
    "4525": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4526": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14335,
        14343
      ],
      "op": "DUP10",
      "path": "0"
    },
    "4527": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14335,
        14343
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4528": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14345,
        14349
      ],
      "op": "DUP10",
      "path": "0"
    },
    "4529": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14345,
        14349
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4530": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14351,
        14354
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4531": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14351,
        14354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4532": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14356,
        14363
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4533": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14356,
        14363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4534": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14365,
        14369
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4535": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14365,
        14369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4536": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4538": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "0"
    },
    "4539": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A87"
    },
    "4542": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4543": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4544": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4546": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4548": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4549": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4550": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4551": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SUB",
      "path": "0"
    },
    "4552": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4553": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4555": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4556": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "GAS",
      "path": "0"
    },
    "4557": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "CALL",
      "path": "0"
    },
    "4558": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4559": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "0"
    },
    "4560": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "0"
    },
    "4561": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "0"
    },
    "4562": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4563": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4564": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11FA"
    },
    "4567": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4568": {
      "op": "POP"
    },
    "4569": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4571": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4572": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4573": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4575": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4576": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4577": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4578": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "0"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4581": {
      "op": "NOT"
    },
    "4582": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "AND",
      "path": "0"
    },
    "4583": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4584": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "0"
    },
    "4585": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4586": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4587": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4588": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F7"
    },
    "4591": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4592": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4593": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "0"
    },
    "4594": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4595": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AE5"
    },
    "4598": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4599": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4600": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4602": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4603": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A6"
    },
    "4606": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4607": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1206"
    },
    "4610": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B02"
    },
    "4613": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4614": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4615": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4616": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8C379A0"
    },
    "4621": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "SUB",
      "path": "0"
    },
    "4622": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x123F"
    },
    "4625": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4626": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "POP",
      "path": "0"
    },
    "4627": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121A"
    },
    "4630": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B1E"
    },
    "4633": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4634": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4635": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4636": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1225"
    },
    "4639": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4640": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "POP",
      "path": "0"
    },
    "4641": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1241"
    },
    "4644": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4645": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4646": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14676,
        14682
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 53
    },
    "4647": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4649": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4650": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4656": {
      "op": "SHL"
    },
    "4657": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4658": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4659": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4661": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "ADD",
      "path": "0"
    },
    "4662": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "4665": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4666": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4667": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14669,
        14683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C5"
    },
    "4670": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14669,
        14683
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4671": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4672": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "POP",
      "path": "0"
    },
    "4673": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4674": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 54,
      "value": "0x40"
    },
    "4676": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4677": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4683": {
      "op": "SHL"
    },
    "4684": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4685": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4686": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4688": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4690": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4691": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "ADD",
      "path": "0"
    },
    "4692": {
      "op": "MSTORE"
    },
    "4693": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4697": {
      "op": "DUP3"
    },
    "4698": {
      "op": "ADD"
    },
    "4699": {
      "op": "MSTORE"
    },
    "4700": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4735": {
      "op": "DUP3"
    },
    "4736": {
      "op": "ADD"
    },
    "4737": {
      "op": "MSTORE"
    },
    "4738": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "4761": {
      "op": "SHL"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4764": {
      "op": "DUP3"
    },
    "4765": {
      "op": "ADD"
    },
    "4766": {
      "op": "MSTORE"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4769": {
      "op": "ADD"
    },
    "4770": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14723,
        14785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "4773": {
      "op": "JUMP"
    },
    "4774": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4781": {
      "op": "SHL"
    },
    "4782": {
      "op": "SUB"
    },
    "4783": {
      "op": "NOT"
    },
    "4784": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4785": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "AND",
      "path": "0"
    },
    "4786": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4793": {
      "op": "SHL"
    },
    "4794": {
      "branch": 77,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "EQ",
      "path": "0"
    },
    "4795": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14445,
        14602
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEF7"
    },
    "4798": {
      "branch": 77,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14445,
        14602
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4799": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 55,
      "value": "0x40"
    },
    "4801": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4808": {
      "op": "SHL"
    },
    "4809": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4810": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4811": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4813": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "ADD",
      "path": "0"
    },
    "4814": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "4817": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4818": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BA8"
    },
    "4821": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14533,
        14583
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4822": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14822,
        15015
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4823": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4825": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4826": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4827": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14955,
        14956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4829": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4830": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4831": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4832": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4833": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4834": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "0"
    },
    "4835": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4836": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4837": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4838": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14888,
        14904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4840": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14888,
        14904
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4841": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4843": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14938
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4844": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4845": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4847": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4848": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4849": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "0"
    },
    "4850": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4851": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4852": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "4853": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4854": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "4855": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "0"
    },
    "4856": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4857": {
      "op": "POP"
    },
    "4858": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "POP",
      "path": "0"
    },
    "4859": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14957
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4860": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14957
      ],
      "op": "POP",
      "path": "0"
    },
    "4861": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14978,
        14985
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 56
    },
    "4862": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14972
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4863": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14973,
        14974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4865": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4866": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4867": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4868": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "LT",
      "path": "0"
    },
    "4869": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1310"
    },
    "4872": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4873": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1310"
    },
    "4876": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1932"
    },
    "4879": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "i",
      "offset": [
        14967,
        14975
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4880": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4881": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4883": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4884": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4885": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "MUL",
      "path": "0"
    },
    "4886": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4887": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4888": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4889": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "ADD",
      "path": "0"
    },
    "4890": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "ADD",
      "path": "0"
    },
    "4891": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14985
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4892": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15003,
        15008
      ],
      "op": "SWAP3",
      "path": "0",
      "statement": 57
    },
    "4893": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14822,
        15015
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4894": {
      "op": "POP"
    },
    "4895": {
      "op": "POP"
    },
    "4896": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        14822,
        15015
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4897": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13293,
        14018
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4904": {
      "op": "SHL"
    },
    "4905": {
      "op": "SUB"
    },
    "4906": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13500,
        13513
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4907": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13500,
        13513
      ],
      "op": "AND",
      "path": "0"
    },
    "4908": {
      "op": "EXTCODESIZE"
    },
    "4909": {
      "op": "ISZERO"
    },
    "4910": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13496,
        14012
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD2"
    },
    "4913": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13496,
        14012
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4914": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4916": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4917": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4924": {
      "op": "SHL"
    },
    "4925": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4926": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4933": {
      "op": "SHL"
    },
    "4934": {
      "op": "SUB"
    },
    "4935": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4936": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "AND",
      "path": "0"
    },
    "4937": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4938": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF23A6E61"
    },
    "4943": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4944": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1365"
    },
    "4947": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4948": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13574,
        13582
      ],
      "op": "DUP10",
      "path": "0"
    },
    "4949": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13574,
        13582
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4950": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13584,
        13588
      ],
      "op": "DUP10",
      "path": "0"
    },
    "4951": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13584,
        13588
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4952": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13590,
        13592
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4953": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13590,
        13592
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4954": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13594,
        13600
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4955": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13594,
        13600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4956": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13602,
        13606
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4957": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13602,
        13606
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4958": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4960": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "0"
    },
    "4961": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BF0"
    },
    "4964": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4965": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4966": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4968": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4970": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4971": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4972": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4973": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SUB",
      "path": "0"
    },
    "4974": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4975": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4977": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4978": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "GAS",
      "path": "0"
    },
    "4979": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "CALL",
      "path": "0"
    },
    "4980": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4981": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "0"
    },
    "4982": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "0"
    },
    "4983": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "0"
    },
    "4984": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4985": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4986": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A0"
    },
    "4989": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4990": {
      "op": "POP"
    },
    "4991": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4993": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4994": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4995": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4997": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4998": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4999": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5000": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "0"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5003": {
      "op": "NOT"
    },
    "5004": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "AND",
      "path": "0"
    },
    "5005": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5006": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "0"
    },
    "5007": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5008": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5009": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5010": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139D"
    },
    "5013": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5014": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5015": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "0"
    },
    "5016": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5017": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AE5"
    },
    "5020": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5021": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5022": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5024": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5025": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13AC"
    },
    "5028": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5029": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1206"
    },
    "5032": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B02"
    },
    "5035": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5036": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5043": {
      "op": "SHL"
    },
    "5044": {
      "op": "SUB"
    },
    "5045": {
      "op": "NOT"
    },
    "5046": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5047": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "AND",
      "path": "0"
    },
    "5048": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5055": {
      "op": "SHL"
    },
    "5056": {
      "branch": 78,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "EQ",
      "path": "0"
    },
    "5057": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13652,
        13804
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEF7"
    },
    "5060": {
      "branch": 78,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13652,
        13804
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5061": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 58,
      "value": "0x40"
    },
    "5063": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5064": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5070": {
      "op": "SHL"
    },
    "5071": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5072": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5073": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5075": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "0"
    },
    "5076": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "5079": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5080": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BA8"
    },
    "5083": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13735,
        13785
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5084": {
      "op": "JUMPDEST"
    },
    "5085": {
      "op": "DUP1"
    },
    "5086": {
      "op": "CALLDATALOAD"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5093": {
      "op": "SHL"
    },
    "5094": {
      "op": "SUB"
    },
    "5095": {
      "op": "DUP2"
    },
    "5096": {
      "op": "AND"
    },
    "5097": {
      "op": "DUP2"
    },
    "5098": {
      "op": "EQ"
    },
    "5099": {
      "op": "PUSH2",
      "value": "0x13F3"
    },
    "5102": {
      "op": "JUMPI"
    },
    "5103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5105": {
      "op": "DUP1"
    },
    "5106": {
      "op": "REVERT"
    },
    "5107": {
      "op": "JUMPDEST"
    },
    "5108": {
      "op": "SWAP2"
    },
    "5109": {
      "op": "SWAP1"
    },
    "5110": {
      "op": "POP"
    },
    "5111": {
      "jump": "o",
      "op": "JUMP"
    },
    "5112": {
      "op": "JUMPDEST"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5115": {
      "op": "DUP1"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5118": {
      "op": "DUP4"
    },
    "5119": {
      "op": "DUP6"
    },
    "5120": {
      "op": "SUB"
    },
    "5121": {
      "op": "SLT"
    },
    "5122": {
      "op": "ISZERO"
    },
    "5123": {
      "op": "PUSH2",
      "value": "0x140B"
    },
    "5126": {
      "op": "JUMPI"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5129": {
      "op": "DUP1"
    },
    "5130": {
      "op": "REVERT"
    },
    "5131": {
      "op": "JUMPDEST"
    },
    "5132": {
      "op": "PUSH2",
      "value": "0x1414"
    },
    "5135": {
      "op": "DUP4"
    },
    "5136": {
      "op": "PUSH2",
      "value": "0x13DC"
    },
    "5139": {
      "jump": "i",
      "op": "JUMP"
    },
    "5140": {
      "op": "JUMPDEST"
    },
    "5141": {
      "op": "SWAP5"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5144": {
      "op": "SWAP4"
    },
    "5145": {
      "op": "SWAP1"
    },
    "5146": {
      "op": "SWAP4"
    },
    "5147": {
      "op": "ADD"
    },
    "5148": {
      "op": "CALLDATALOAD"
    },
    "5149": {
      "op": "SWAP4"
    },
    "5150": {
      "op": "POP"
    },
    "5151": {
      "op": "POP"
    },
    "5152": {
      "op": "POP"
    },
    "5153": {
      "jump": "o",
      "op": "JUMP"
    },
    "5154": {
      "op": "JUMPDEST"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5161": {
      "op": "SHL"
    },
    "5162": {
      "op": "SUB"
    },
    "5163": {
      "op": "NOT"
    },
    "5164": {
      "op": "DUP2"
    },
    "5165": {
      "op": "AND"
    },
    "5166": {
      "op": "DUP2"
    },
    "5167": {
      "op": "EQ"
    },
    "5168": {
      "op": "PUSH2",
      "value": "0x1438"
    },
    "5171": {
      "op": "JUMPI"
    },
    "5172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5174": {
      "op": "DUP1"
    },
    "5175": {
      "op": "REVERT"
    },
    "5176": {
      "op": "JUMPDEST"
    },
    "5177": {
      "op": "POP"
    },
    "5178": {
      "jump": "o",
      "op": "JUMP"
    },
    "5179": {
      "op": "JUMPDEST"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5184": {
      "op": "DUP3"
    },
    "5185": {
      "op": "DUP5"
    },
    "5186": {
      "op": "SUB"
    },
    "5187": {
      "op": "SLT"
    },
    "5188": {
      "op": "ISZERO"
    },
    "5189": {
      "op": "PUSH2",
      "value": "0x144D"
    },
    "5192": {
      "op": "JUMPI"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5195": {
      "op": "DUP1"
    },
    "5196": {
      "op": "REVERT"
    },
    "5197": {
      "op": "JUMPDEST"
    },
    "5198": {
      "op": "DUP2"
    },
    "5199": {
      "op": "CALLDATALOAD"
    },
    "5200": {
      "op": "PUSH2",
      "value": "0x1458"
    },
    "5203": {
      "op": "DUP2"
    },
    "5204": {
      "op": "PUSH2",
      "value": "0x1422"
    },
    "5207": {
      "jump": "i",
      "op": "JUMP"
    },
    "5208": {
      "op": "JUMPDEST"
    },
    "5209": {
      "op": "SWAP4"
    },
    "5210": {
      "op": "SWAP3"
    },
    "5211": {
      "op": "POP"
    },
    "5212": {
      "op": "POP"
    },
    "5213": {
      "op": "POP"
    },
    "5214": {
      "jump": "o",
      "op": "JUMP"
    },
    "5215": {
      "op": "JUMPDEST"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5220": {
      "op": "DUP3"
    },
    "5221": {
      "op": "DUP5"
    },
    "5222": {
      "op": "SUB"
    },
    "5223": {
      "op": "SLT"
    },
    "5224": {
      "op": "ISZERO"
    },
    "5225": {
      "op": "PUSH2",
      "value": "0x1471"
    },
    "5228": {
      "op": "JUMPI"
    },
    "5229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5231": {
      "op": "DUP1"
    },
    "5232": {
      "op": "REVERT"
    },
    "5233": {
      "op": "JUMPDEST"
    },
    "5234": {
      "op": "POP"
    },
    "5235": {
      "op": "CALLDATALOAD"
    },
    "5236": {
      "op": "SWAP2"
    },
    "5237": {
      "op": "SWAP1"
    },
    "5238": {
      "op": "POP"
    },
    "5239": {
      "jump": "o",
      "op": "JUMP"
    },
    "5240": {
      "op": "JUMPDEST"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5243": {
      "op": "DUP2"
    },
    "5244": {
      "op": "MLOAD"
    },
    "5245": {
      "op": "DUP1"
    },
    "5246": {
      "op": "DUP5"
    },
    "5247": {
      "op": "MSTORE"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5250": {
      "op": "JUMPDEST"
    },
    "5251": {
      "op": "DUP2"
    },
    "5252": {
      "op": "DUP2"
    },
    "5253": {
      "op": "LT"
    },
    "5254": {
      "op": "ISZERO"
    },
    "5255": {
      "op": "PUSH2",
      "value": "0x149E"
    },
    "5258": {
      "op": "JUMPI"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5261": {
      "op": "DUP2"
    },
    "5262": {
      "op": "DUP6"
    },
    "5263": {
      "op": "ADD"
    },
    "5264": {
      "op": "DUP2"
    },
    "5265": {
      "op": "ADD"
    },
    "5266": {
      "op": "MLOAD"
    },
    "5267": {
      "op": "DUP7"
    },
    "5268": {
      "op": "DUP4"
    },
    "5269": {
      "op": "ADD"
    },
    "5270": {
      "op": "DUP3"
    },
    "5271": {
      "op": "ADD"
    },
    "5272": {
      "op": "MSTORE"
    },
    "5273": {
      "op": "ADD"
    },
    "5274": {
      "op": "PUSH2",
      "value": "0x1482"
    },
    "5277": {
      "op": "JUMP"
    },
    "5278": {
      "op": "JUMPDEST"
    },
    "5279": {
      "op": "DUP2"
    },
    "5280": {
      "op": "DUP2"
    },
    "5281": {
      "op": "GT"
    },
    "5282": {
      "op": "ISZERO"
    },
    "5283": {
      "op": "PUSH2",
      "value": "0x14B0"
    },
    "5286": {
      "op": "JUMPI"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5291": {
      "op": "DUP4"
    },
    "5292": {
      "op": "DUP8"
    },
    "5293": {
      "op": "ADD"
    },
    "5294": {
      "op": "ADD"
    },
    "5295": {
      "op": "MSTORE"
    },
    "5296": {
      "op": "JUMPDEST"
    },
    "5297": {
      "op": "POP"
    },
    "5298": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5300": {
      "op": "ADD"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5303": {
      "op": "NOT"
    },
    "5304": {
      "op": "AND"
    },
    "5305": {
      "op": "SWAP3"
    },
    "5306": {
      "op": "SWAP1"
    },
    "5307": {
      "op": "SWAP3"
    },
    "5308": {
      "op": "ADD"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5311": {
      "op": "ADD"
    },
    "5312": {
      "op": "SWAP3"
    },
    "5313": {
      "op": "SWAP2"
    },
    "5314": {
      "op": "POP"
    },
    "5315": {
      "op": "POP"
    },
    "5316": {
      "jump": "o",
      "op": "JUMP"
    },
    "5317": {
      "op": "JUMPDEST"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5320": {
      "op": "DUP2"
    },
    "5321": {
      "op": "MSTORE"
    },
    "5322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5324": {
      "op": "PUSH2",
      "value": "0x1458"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5329": {
      "op": "DUP4"
    },
    "5330": {
      "op": "ADD"
    },
    "5331": {
      "op": "DUP5"
    },
    "5332": {
      "op": "PUSH2",
      "value": "0x1478"
    },
    "5335": {
      "jump": "i",
      "op": "JUMP"
    },
    "5336": {
      "op": "JUMPDEST"
    },
    "5337": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5344": {
      "op": "SHL"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5347": {
      "op": "MSTORE"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5350": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5352": {
      "op": "MSTORE"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5357": {
      "op": "REVERT"
    },
    "5358": {
      "op": "JUMPDEST"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5361": {
      "op": "DUP3"
    },
    "5362": {
      "op": "ADD"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5365": {
      "op": "NOT"
    },
    "5366": {
      "op": "AND"
    },
    "5367": {
      "op": "DUP2"
    },
    "5368": {
      "op": "ADD"
    },
    "5369": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5378": {
      "op": "DUP2"
    },
    "5379": {
      "op": "GT"
    },
    "5380": {
      "op": "DUP3"
    },
    "5381": {
      "op": "DUP3"
    },
    "5382": {
      "op": "LT"
    },
    "5383": {
      "op": "OR"
    },
    "5384": {
      "op": "ISZERO"
    },
    "5385": {
      "op": "PUSH2",
      "value": "0x1514"
    },
    "5388": {
      "op": "JUMPI"
    },
    "5389": {
      "op": "PUSH2",
      "value": "0x1514"
    },
    "5392": {
      "op": "PUSH2",
      "value": "0x14D8"
    },
    "5395": {
      "jump": "i",
      "op": "JUMP"
    },
    "5396": {
      "op": "JUMPDEST"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5399": {
      "op": "MSTORE"
    },
    "5400": {
      "op": "POP"
    },
    "5401": {
      "op": "POP"
    },
    "5402": {
      "jump": "o",
      "op": "JUMP"
    },
    "5403": {
      "op": "JUMPDEST"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5406": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5415": {
      "op": "DUP3"
    },
    "5416": {
      "op": "GT"
    },
    "5417": {
      "op": "ISZERO"
    },
    "5418": {
      "op": "PUSH2",
      "value": "0x1535"
    },
    "5421": {
      "op": "JUMPI"
    },
    "5422": {
      "op": "PUSH2",
      "value": "0x1535"
    },
    "5425": {
      "op": "PUSH2",
      "value": "0x14D8"
    },
    "5428": {
      "jump": "i",
      "op": "JUMP"
    },
    "5429": {
      "op": "JUMPDEST"
    },
    "5430": {
      "op": "POP"
    },
    "5431": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5433": {
      "op": "SHL"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5436": {
      "op": "ADD"
    },
    "5437": {
      "op": "SWAP1"
    },
    "5438": {
      "jump": "o",
      "op": "JUMP"
    },
    "5439": {
      "op": "JUMPDEST"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5442": {
      "op": "DUP3"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5445": {
      "op": "DUP4"
    },
    "5446": {
      "op": "ADD"
    },
    "5447": {
      "op": "SLT"
    },
    "5448": {
      "op": "PUSH2",
      "value": "0x1550"
    },
    "5451": {
      "op": "JUMPI"
    },
    "5452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5454": {
      "op": "DUP1"
    },
    "5455": {
      "op": "REVERT"
    },
    "5456": {
      "op": "JUMPDEST"
    },
    "5457": {
      "op": "DUP2"
    },
    "5458": {
      "op": "CALLDATALOAD"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5461": {
      "op": "PUSH2",
      "value": "0x155D"
    },
    "5464": {
      "op": "DUP3"
    },
    "5465": {
      "op": "PUSH2",
      "value": "0x151B"
    },
    "5468": {
      "jump": "i",
      "op": "JUMP"
    },
    "5469": {
      "op": "JUMPDEST"
    },
    "5470": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5472": {
      "op": "MLOAD"
    },
    "5473": {
      "op": "PUSH2",
      "value": "0x156A"
    },
    "5476": {
      "op": "DUP3"
    },
    "5477": {
      "op": "DUP3"
    },
    "5478": {
      "op": "PUSH2",
      "value": "0x14EE"
    },
    "5481": {
      "jump": "i",
      "op": "JUMP"
    },
    "5482": {
      "op": "JUMPDEST"
    },
    "5483": {
      "op": "DUP4"
    },
    "5484": {
      "op": "DUP2"
    },
    "5485": {
      "op": "MSTORE"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5488": {
      "op": "SWAP4"
    },
    "5489": {
      "op": "SWAP1"
    },
    "5490": {
      "op": "SWAP4"
    },
    "5491": {
      "op": "SHL"
    },
    "5492": {
      "op": "DUP6"
    },
    "5493": {
      "op": "ADD"
    },
    "5494": {
      "op": "DUP3"
    },
    "5495": {
      "op": "ADD"
    },
    "5496": {
      "op": "SWAP3"
    },
    "5497": {
      "op": "DUP3"
    },
    "5498": {
      "op": "DUP2"
    },
    "5499": {
      "op": "ADD"
    },
    "5500": {
      "op": "SWAP2"
    },
    "5501": {
      "op": "POP"
    },
    "5502": {
      "op": "DUP7"
    },
    "5503": {
      "op": "DUP5"
    },
    "5504": {
      "op": "GT"
    },
    "5505": {
      "op": "ISZERO"
    },
    "5506": {
      "op": "PUSH2",
      "value": "0x158A"
    },
    "5509": {
      "op": "JUMPI"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5512": {
      "op": "DUP1"
    },
    "5513": {
      "op": "REVERT"
    },
    "5514": {
      "op": "JUMPDEST"
    },
    "5515": {
      "op": "DUP3"
    },
    "5516": {
      "op": "DUP7"
    },
    "5517": {
      "op": "ADD"
    },
    "5518": {
      "op": "JUMPDEST"
    },
    "5519": {
      "op": "DUP5"
    },
    "5520": {
      "op": "DUP2"
    },
    "5521": {
      "op": "LT"
    },
    "5522": {
      "op": "ISZERO"
    },
    "5523": {
      "op": "PUSH2",
      "value": "0x15A5"
    },
    "5526": {
      "op": "JUMPI"
    },
    "5527": {
      "op": "DUP1"
    },
    "5528": {
      "op": "CALLDATALOAD"
    },
    "5529": {
      "op": "DUP4"
    },
    "5530": {
      "op": "MSTORE"
    },
    "5531": {
      "op": "SWAP2"
    },
    "5532": {
      "op": "DUP4"
    },
    "5533": {
      "op": "ADD"
    },
    "5534": {
      "op": "SWAP2"
    },
    "5535": {
      "op": "DUP4"
    },
    "5536": {
      "op": "ADD"
    },
    "5537": {
      "op": "PUSH2",
      "value": "0x158E"
    },
    "5540": {
      "op": "JUMP"
    },
    "5541": {
      "op": "JUMPDEST"
    },
    "5542": {
      "op": "POP"
    },
    "5543": {
      "op": "SWAP7"
    },
    "5544": {
      "op": "SWAP6"
    },
    "5545": {
      "op": "POP"
    },
    "5546": {
      "op": "POP"
    },
    "5547": {
      "op": "POP"
    },
    "5548": {
      "op": "POP"
    },
    "5549": {
      "op": "POP"
    },
    "5550": {
      "op": "POP"
    },
    "5551": {
      "jump": "o",
      "op": "JUMP"
    },
    "5552": {
      "op": "JUMPDEST"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5555": {
      "op": "DUP1"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5558": {
      "op": "DUP4"
    },
    "5559": {
      "op": "DUP6"
    },
    "5560": {
      "op": "SUB"
    },
    "5561": {
      "op": "SLT"
    },
    "5562": {
      "op": "ISZERO"
    },
    "5563": {
      "op": "PUSH2",
      "value": "0x15C3"
    },
    "5566": {
      "op": "JUMPI"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5569": {
      "op": "DUP1"
    },
    "5570": {
      "op": "REVERT"
    },
    "5571": {
      "op": "JUMPDEST"
    },
    "5572": {
      "op": "DUP3"
    },
    "5573": {
      "op": "CALLDATALOAD"
    },
    "5574": {
      "op": "SWAP2"
    },
    "5575": {
      "op": "POP"
    },
    "5576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5578": {
      "op": "DUP4"
    },
    "5579": {
      "op": "ADD"
    },
    "5580": {
      "op": "CALLDATALOAD"
    },
    "5581": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5590": {
      "op": "DUP2"
    },
    "5591": {
      "op": "GT"
    },
    "5592": {
      "op": "ISZERO"
    },
    "5593": {
      "op": "PUSH2",
      "value": "0x15E1"
    },
    "5596": {
      "op": "JUMPI"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5599": {
      "op": "DUP1"
    },
    "5600": {
      "op": "REVERT"
    },
    "5601": {
      "op": "JUMPDEST"
    },
    "5602": {
      "op": "PUSH2",
      "value": "0x15ED"
    },
    "5605": {
      "op": "DUP6"
    },
    "5606": {
      "op": "DUP3"
    },
    "5607": {
      "op": "DUP7"
    },
    "5608": {
      "op": "ADD"
    },
    "5609": {
      "op": "PUSH2",
      "value": "0x153F"
    },
    "5612": {
      "jump": "i",
      "op": "JUMP"
    },
    "5613": {
      "op": "JUMPDEST"
    },
    "5614": {
      "op": "SWAP2"
    },
    "5615": {
      "op": "POP"
    },
    "5616": {
      "op": "POP"
    },
    "5617": {
      "op": "SWAP3"
    },
    "5618": {
      "op": "POP"
    },
    "5619": {
      "op": "SWAP3"
    },
    "5620": {
      "op": "SWAP1"
    },
    "5621": {
      "op": "POP"
    },
    "5622": {
      "jump": "o",
      "op": "JUMP"
    },
    "5623": {
      "op": "JUMPDEST"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5626": {
      "op": "DUP3"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5629": {
      "op": "DUP4"
    },
    "5630": {
      "op": "ADD"
    },
    "5631": {
      "op": "SLT"
    },
    "5632": {
      "op": "PUSH2",
      "value": "0x1608"
    },
    "5635": {
      "op": "JUMPI"
    },
    "5636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5638": {
      "op": "DUP1"
    },
    "5639": {
      "op": "REVERT"
    },
    "5640": {
      "op": "JUMPDEST"
    },
    "5641": {
      "op": "DUP2"
    },
    "5642": {
      "op": "CALLDATALOAD"
    },
    "5643": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5652": {
      "op": "DUP2"
    },
    "5653": {
      "op": "GT"
    },
    "5654": {
      "op": "ISZERO"
    },
    "5655": {
      "op": "PUSH2",
      "value": "0x1622"
    },
    "5658": {
      "op": "JUMPI"
    },
    "5659": {
      "op": "PUSH2",
      "value": "0x1622"
    },
    "5662": {
      "op": "PUSH2",
      "value": "0x14D8"
    },
    "5665": {
      "jump": "i",
      "op": "JUMP"
    },
    "5666": {
      "op": "JUMPDEST"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5669": {
      "op": "MLOAD"
    },
    "5670": {
      "op": "PUSH2",
      "value": "0x1639"
    },
    "5673": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5675": {
      "op": "DUP4"
    },
    "5676": {
      "op": "ADD"
    },
    "5677": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5679": {
      "op": "NOT"
    },
    "5680": {
      "op": "AND"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5683": {
      "op": "ADD"
    },
    "5684": {
      "op": "DUP3"
    },
    "5685": {
      "op": "PUSH2",
      "value": "0x14EE"
    },
    "5688": {
      "jump": "i",
      "op": "JUMP"
    },
    "5689": {
      "op": "JUMPDEST"
    },
    "5690": {
      "op": "DUP2"
    },
    "5691": {
      "op": "DUP2"
    },
    "5692": {
      "op": "MSTORE"
    },
    "5693": {
      "op": "DUP5"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5696": {
      "op": "DUP4"
    },
    "5697": {
      "op": "DUP7"
    },
    "5698": {
      "op": "ADD"
    },
    "5699": {
      "op": "ADD"
    },
    "5700": {
      "op": "GT"
    },
    "5701": {
      "op": "ISZERO"
    },
    "5702": {
      "op": "PUSH2",
      "value": "0x164E"
    },
    "5705": {
      "op": "JUMPI"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5708": {
      "op": "DUP1"
    },
    "5709": {
      "op": "REVERT"
    },
    "5710": {
      "op": "JUMPDEST"
    },
    "5711": {
      "op": "DUP2"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5714": {
      "op": "DUP6"
    },
    "5715": {
      "op": "ADD"
    },
    "5716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5718": {
      "op": "DUP4"
    },
    "5719": {
      "op": "ADD"
    },
    "5720": {
      "op": "CALLDATACOPY"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5723": {
      "op": "SWAP2"
    },
    "5724": {
      "op": "DUP2"
    },
    "5725": {
      "op": "ADD"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5728": {
      "op": "ADD"
    },
    "5729": {
      "op": "SWAP2"
    },
    "5730": {
      "op": "SWAP1"
    },
    "5731": {
      "op": "SWAP2"
    },
    "5732": {
      "op": "MSTORE"
    },
    "5733": {
      "op": "SWAP4"
    },
    "5734": {
      "op": "SWAP3"
    },
    "5735": {
      "op": "POP"
    },
    "5736": {
      "op": "POP"
    },
    "5737": {
      "op": "POP"
    },
    "5738": {
      "jump": "o",
      "op": "JUMP"
    },
    "5739": {
      "op": "JUMPDEST"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5742": {
      "op": "DUP1"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5745": {
      "op": "DUP1"
    },
    "5746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5750": {
      "op": "DUP7"
    },
    "5751": {
      "op": "DUP9"
    },
    "5752": {
      "op": "SUB"
    },
    "5753": {
      "op": "SLT"
    },
    "5754": {
      "op": "ISZERO"
    },
    "5755": {
      "op": "PUSH2",
      "value": "0x1683"
    },
    "5758": {
      "op": "JUMPI"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5761": {
      "op": "DUP1"
    },
    "5762": {
      "op": "REVERT"
    },
    "5763": {
      "op": "JUMPDEST"
    },
    "5764": {
      "op": "PUSH2",
      "value": "0x168C"
    },
    "5767": {
      "op": "DUP7"
    },
    "5768": {
      "op": "PUSH2",
      "value": "0x13DC"
    },
    "5771": {
      "jump": "i",
      "op": "JUMP"
    },
    "5772": {
      "op": "JUMPDEST"
    },
    "5773": {
      "op": "SWAP5"
    },
    "5774": {
      "op": "POP"
    },
    "5775": {
      "op": "PUSH2",
      "value": "0x169A"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5780": {
      "op": "DUP8"
    },
    "5781": {
      "op": "ADD"
    },
    "5782": {
      "op": "PUSH2",
      "value": "0x13DC"
    },
    "5785": {
      "jump": "i",
      "op": "JUMP"
    },
    "5786": {
      "op": "JUMPDEST"
    },
    "5787": {
      "op": "SWAP4"
    },
    "5788": {
      "op": "POP"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5791": {
      "op": "DUP7"
    },
    "5792": {
      "op": "ADD"
    },
    "5793": {
      "op": "CALLDATALOAD"
    },
    "5794": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5803": {
      "op": "DUP1"
    },
    "5804": {
      "op": "DUP3"
    },
    "5805": {
      "op": "GT"
    },
    "5806": {
      "op": "ISZERO"
    },
    "5807": {
      "op": "PUSH2",
      "value": "0x16B7"
    },
    "5810": {
      "op": "JUMPI"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5813": {
      "op": "DUP1"
    },
    "5814": {
      "op": "REVERT"
    },
    "5815": {
      "op": "JUMPDEST"
    },
    "5816": {
      "op": "PUSH2",
      "value": "0x16C3"
    },
    "5819": {
      "op": "DUP10"
    },
    "5820": {
      "op": "DUP4"
    },
    "5821": {
      "op": "DUP11"
    },
    "5822": {
      "op": "ADD"
    },
    "5823": {
      "op": "PUSH2",
      "value": "0x153F"
    },
    "5826": {
      "jump": "i",
      "op": "JUMP"
    },
    "5827": {
      "op": "JUMPDEST"
    },
    "5828": {
      "op": "SWAP5"
    },
    "5829": {
      "op": "POP"
    },
    "5830": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5832": {
      "op": "DUP9"
    },
    "5833": {
      "op": "ADD"
    },
    "5834": {
      "op": "CALLDATALOAD"
    },
    "5835": {
      "op": "SWAP2"
    },
    "5836": {
      "op": "POP"
    },
    "5837": {
      "op": "DUP1"
    },
    "5838": {
      "op": "DUP3"
    },
    "5839": {
      "op": "GT"
    },
    "5840": {
      "op": "ISZERO"
    },
    "5841": {
      "op": "PUSH2",
      "value": "0x16D9"
    },
    "5844": {
      "op": "JUMPI"
    },
    "5845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5847": {
      "op": "DUP1"
    },
    "5848": {
      "op": "REVERT"
    },
    "5849": {
      "op": "JUMPDEST"
    },
    "5850": {
      "op": "PUSH2",
      "value": "0x16E5"
    },
    "5853": {
      "op": "DUP10"
    },
    "5854": {
      "op": "DUP4"
    },
    "5855": {
      "op": "DUP11"
    },
    "5856": {
      "op": "ADD"
    },
    "5857": {
      "op": "PUSH2",
      "value": "0x153F"
    },
    "5860": {
      "jump": "i",
      "op": "JUMP"
    },
    "5861": {
      "op": "JUMPDEST"
    },
    "5862": {
      "op": "SWAP4"
    },
    "5863": {
      "op": "POP"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5866": {
      "op": "DUP9"
    },
    "5867": {
      "op": "ADD"
    },
    "5868": {
      "op": "CALLDATALOAD"
    },
    "5869": {
      "op": "SWAP2"
    },
    "5870": {
      "op": "POP"
    },
    "5871": {
      "op": "DUP1"
    },
    "5872": {
      "op": "DUP3"
    },
    "5873": {
      "op": "GT"
    },
    "5874": {
      "op": "ISZERO"
    },
    "5875": {
      "op": "PUSH2",
      "value": "0x16FB"
    },
    "5878": {
      "op": "JUMPI"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5881": {
      "op": "DUP1"
    },
    "5882": {
      "op": "REVERT"
    },
    "5883": {
      "op": "JUMPDEST"
    },
    "5884": {
      "op": "POP"
    },
    "5885": {
      "op": "PUSH2",
      "value": "0x1708"
    },
    "5888": {
      "op": "DUP9"
    },
    "5889": {
      "op": "DUP3"
    },
    "5890": {
      "op": "DUP10"
    },
    "5891": {
      "op": "ADD"
    },
    "5892": {
      "op": "PUSH2",
      "value": "0x15F7"
    },
    "5895": {
      "jump": "i",
      "op": "JUMP"
    },
    "5896": {
      "op": "JUMPDEST"
    },
    "5897": {
      "op": "SWAP2"
    },
    "5898": {
      "op": "POP"
    },
    "5899": {
      "op": "POP"
    },
    "5900": {
      "op": "SWAP3"
    },
    "5901": {
      "op": "SWAP6"
    },
    "5902": {
      "op": "POP"
    },
    "5903": {
      "op": "SWAP3"
    },
    "5904": {
      "op": "SWAP6"
    },
    "5905": {
      "op": "SWAP1"
    },
    "5906": {
      "op": "SWAP4"
    },
    "5907": {
      "op": "POP"
    },
    "5908": {
      "jump": "o",
      "op": "JUMP"
    },
    "5909": {
      "op": "JUMPDEST"
    },
    "5910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5912": {
      "op": "DUP1"
    },
    "5913": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5915": {
      "op": "DUP4"
    },
    "5916": {
      "op": "DUP6"
    },
    "5917": {
      "op": "SUB"
    },
    "5918": {
      "op": "SLT"
    },
    "5919": {
      "op": "ISZERO"
    },
    "5920": {
      "op": "PUSH2",
      "value": "0x1728"
    },
    "5923": {
      "op": "JUMPI"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5926": {
      "op": "DUP1"
    },
    "5927": {
      "op": "REVERT"
    },
    "5928": {
      "op": "JUMPDEST"
    },
    "5929": {
      "op": "DUP3"
    },
    "5930": {
      "op": "CALLDATALOAD"
    },
    "5931": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5940": {
      "op": "DUP1"
    },
    "5941": {
      "op": "DUP3"
    },
    "5942": {
      "op": "GT"
    },
    "5943": {
      "op": "ISZERO"
    },
    "5944": {
      "op": "PUSH2",
      "value": "0x1740"
    },
    "5947": {
      "op": "JUMPI"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5950": {
      "op": "DUP1"
    },
    "5951": {
      "op": "REVERT"
    },
    "5952": {
      "op": "JUMPDEST"
    },
    "5953": {
      "op": "DUP2"
    },
    "5954": {
      "op": "DUP6"
    },
    "5955": {
      "op": "ADD"
    },
    "5956": {
      "op": "SWAP2"
    },
    "5957": {
      "op": "POP"
    },
    "5958": {
      "op": "DUP6"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5961": {
      "op": "DUP4"
    },
    "5962": {
      "op": "ADD"
    },
    "5963": {
      "op": "SLT"
    },
    "5964": {
      "op": "PUSH2",
      "value": "0x1754"
    },
    "5967": {
      "op": "JUMPI"
    },
    "5968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5970": {
      "op": "DUP1"
    },
    "5971": {
      "op": "REVERT"
    },
    "5972": {
      "op": "JUMPDEST"
    },
    "5973": {
      "op": "DUP2"
    },
    "5974": {
      "op": "CALLDATALOAD"
    },
    "5975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5977": {
      "op": "PUSH2",
      "value": "0x1761"
    },
    "5980": {
      "op": "DUP3"
    },
    "5981": {
      "op": "PUSH2",
      "value": "0x151B"
    },
    "5984": {
      "jump": "i",
      "op": "JUMP"
    },
    "5985": {
      "op": "JUMPDEST"
    },
    "5986": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5988": {
      "op": "MLOAD"
    },
    "5989": {
      "op": "PUSH2",
      "value": "0x176E"
    },
    "5992": {
      "op": "DUP3"
    },
    "5993": {
      "op": "DUP3"
    },
    "5994": {
      "op": "PUSH2",
      "value": "0x14EE"
    },
    "5997": {
      "jump": "i",
      "op": "JUMP"
    },
    "5998": {
      "op": "JUMPDEST"
    },
    "5999": {
      "op": "DUP4"
    },
    "6000": {
      "op": "DUP2"
    },
    "6001": {
      "op": "MSTORE"
    },
    "6002": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6004": {
      "op": "SWAP4"
    },
    "6005": {
      "op": "SWAP1"
    },
    "6006": {
      "op": "SWAP4"
    },
    "6007": {
      "op": "SHL"
    },
    "6008": {
      "op": "DUP6"
    },
    "6009": {
      "op": "ADD"
    },
    "6010": {
      "op": "DUP3"
    },
    "6011": {
      "op": "ADD"
    },
    "6012": {
      "op": "SWAP3"
    },
    "6013": {
      "op": "DUP3"
    },
    "6014": {
      "op": "DUP2"
    },
    "6015": {
      "op": "ADD"
    },
    "6016": {
      "op": "SWAP2"
    },
    "6017": {
      "op": "POP"
    },
    "6018": {
      "op": "DUP10"
    },
    "6019": {
      "op": "DUP5"
    },
    "6020": {
      "op": "GT"
    },
    "6021": {
      "op": "ISZERO"
    },
    "6022": {
      "op": "PUSH2",
      "value": "0x178E"
    },
    "6025": {
      "op": "JUMPI"
    },
    "6026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6028": {
      "op": "DUP1"
    },
    "6029": {
      "op": "REVERT"
    },
    "6030": {
      "op": "JUMPDEST"
    },
    "6031": {
      "op": "SWAP5"
    },
    "6032": {
      "op": "DUP3"
    },
    "6033": {
      "op": "ADD"
    },
    "6034": {
      "op": "SWAP5"
    },
    "6035": {
      "op": "JUMPDEST"
    },
    "6036": {
      "op": "DUP4"
    },
    "6037": {
      "op": "DUP7"
    },
    "6038": {
      "op": "LT"
    },
    "6039": {
      "op": "ISZERO"
    },
    "6040": {
      "op": "PUSH2",
      "value": "0x17B3"
    },
    "6043": {
      "op": "JUMPI"
    },
    "6044": {
      "op": "PUSH2",
      "value": "0x17A4"
    },
    "6047": {
      "op": "DUP7"
    },
    "6048": {
      "op": "PUSH2",
      "value": "0x13DC"
    },
    "6051": {
      "jump": "i",
      "op": "JUMP"
    },
    "6052": {
      "op": "JUMPDEST"
    },
    "6053": {
      "op": "DUP3"
    },
    "6054": {
      "op": "MSTORE"
    },
    "6055": {
      "op": "SWAP5"
    },
    "6056": {
      "op": "DUP3"
    },
    "6057": {
      "op": "ADD"
    },
    "6058": {
      "op": "SWAP5"
    },
    "6059": {
      "op": "SWAP1"
    },
    "6060": {
      "op": "DUP3"
    },
    "6061": {
      "op": "ADD"
    },
    "6062": {
      "op": "SWAP1"
    },
    "6063": {
      "op": "PUSH2",
      "value": "0x1793"
    },
    "6066": {
      "op": "JUMP"
    },
    "6067": {
      "op": "JUMPDEST"
    },
    "6068": {
      "op": "SWAP7"
    },
    "6069": {
      "op": "POP"
    },
    "6070": {
      "op": "POP"
    },
    "6071": {
      "op": "DUP7"
    },
    "6072": {
      "op": "ADD"
    },
    "6073": {
      "op": "CALLDATALOAD"
    },
    "6074": {
      "op": "SWAP3"
    },
    "6075": {
      "op": "POP"
    },
    "6076": {
      "op": "POP"
    },
    "6077": {
      "op": "DUP1"
    },
    "6078": {
      "op": "DUP3"
    },
    "6079": {
      "op": "GT"
    },
    "6080": {
      "op": "ISZERO"
    },
    "6081": {
      "op": "PUSH2",
      "value": "0x17C9"
    },
    "6084": {
      "op": "JUMPI"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6087": {
      "op": "DUP1"
    },
    "6088": {
      "op": "REVERT"
    },
    "6089": {
      "op": "JUMPDEST"
    },
    "6090": {
      "op": "POP"
    },
    "6091": {
      "op": "PUSH2",
      "value": "0x15ED"
    },
    "6094": {
      "op": "DUP6"
    },
    "6095": {
      "op": "DUP3"
    },
    "6096": {
      "op": "DUP7"
    },
    "6097": {
      "op": "ADD"
    },
    "6098": {
      "op": "PUSH2",
      "value": "0x153F"
    },
    "6101": {
      "jump": "i",
      "op": "JUMP"
    },
    "6102": {
      "op": "JUMPDEST"
    },
    "6103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6105": {
      "op": "DUP2"
    },
    "6106": {
      "op": "MLOAD"
    },
    "6107": {
      "op": "DUP1"
    },
    "6108": {
      "op": "DUP5"
    },
    "6109": {
      "op": "MSTORE"
    },
    "6110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6112": {
      "op": "DUP1"
    },
    "6113": {
      "op": "DUP6"
    },
    "6114": {
      "op": "ADD"
    },
    "6115": {
      "op": "SWAP5"
    },
    "6116": {
      "op": "POP"
    },
    "6117": {
      "op": "DUP1"
    },
    "6118": {
      "op": "DUP5"
    },
    "6119": {
      "op": "ADD"
    },
    "6120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6122": {
      "op": "JUMPDEST"
    },
    "6123": {
      "op": "DUP4"
    },
    "6124": {
      "op": "DUP2"
    },
    "6125": {
      "op": "LT"
    },
    "6126": {
      "op": "ISZERO"
    },
    "6127": {
      "op": "PUSH2",
      "value": "0x1806"
    },
    "6130": {
      "op": "JUMPI"
    },
    "6131": {
      "op": "DUP2"
    },
    "6132": {
      "op": "MLOAD"
    },
    "6133": {
      "op": "DUP8"
    },
    "6134": {
      "op": "MSTORE"
    },
    "6135": {
      "op": "SWAP6"
    },
    "6136": {
      "op": "DUP3"
    },
    "6137": {
      "op": "ADD"
    },
    "6138": {
      "op": "SWAP6"
    },
    "6139": {
      "op": "SWAP1"
    },
    "6140": {
      "op": "DUP3"
    },
    "6141": {
      "op": "ADD"
    },
    "6142": {
      "op": "SWAP1"
    },
    "6143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6145": {
      "op": "ADD"
    },
    "6146": {
      "op": "PUSH2",
      "value": "0x17EA"
    },
    "6149": {
      "op": "JUMP"
    },
    "6150": {
      "op": "JUMPDEST"
    },
    "6151": {
      "op": "POP"
    },
    "6152": {
      "op": "SWAP5"
    },
    "6153": {
      "op": "SWAP6"
    },
    "6154": {
      "op": "SWAP5"
    },
    "6155": {
      "op": "POP"
    },
    "6156": {
      "op": "POP"
    },
    "6157": {
      "op": "POP"
    },
    "6158": {
      "op": "POP"
    },
    "6159": {
      "op": "POP"
    },
    "6160": {
      "jump": "o",
      "op": "JUMP"
    },
    "6161": {
      "op": "JUMPDEST"
    },
    "6162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6164": {
      "op": "DUP2"
    },
    "6165": {
      "op": "MSTORE"
    },
    "6166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6168": {
      "op": "PUSH2",
      "value": "0x1458"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6173": {
      "op": "DUP4"
    },
    "6174": {
      "op": "ADD"
    },
    "6175": {
      "op": "DUP5"
    },
    "6176": {
      "op": "PUSH2",
      "value": "0x17D6"
    },
    "6179": {
      "jump": "i",
      "op": "JUMP"
    },
    "6180": {
      "op": "JUMPDEST"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6183": {
      "op": "DUP1"
    },
    "6184": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6186": {
      "op": "DUP4"
    },
    "6187": {
      "op": "DUP6"
    },
    "6188": {
      "op": "SUB"
    },
    "6189": {
      "op": "SLT"
    },
    "6190": {
      "op": "ISZERO"
    },
    "6191": {
      "op": "PUSH2",
      "value": "0x1837"
    },
    "6194": {
      "op": "JUMPI"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6197": {
      "op": "DUP1"
    },
    "6198": {
      "op": "REVERT"
    },
    "6199": {
      "op": "JUMPDEST"
    },
    "6200": {
      "op": "PUSH2",
      "value": "0x1840"
    },
    "6203": {
      "op": "DUP4"
    },
    "6204": {
      "op": "PUSH2",
      "value": "0x13DC"
    },
    "6207": {
      "jump": "i",
      "op": "JUMP"
    },
    "6208": {
      "op": "JUMPDEST"
    },
    "6209": {
      "op": "SWAP2"
    },
    "6210": {
      "op": "POP"
    },
    "6211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6213": {
      "op": "DUP4"
    },
    "6214": {
      "op": "ADD"
    },
    "6215": {
      "op": "CALLDATALOAD"
    },
    "6216": {
      "op": "DUP1"
    },
    "6217": {
      "op": "ISZERO"
    },
    "6218": {
      "op": "ISZERO"
    },
    "6219": {
      "op": "DUP2"
    },
    "6220": {
      "op": "EQ"
    },
    "6221": {
      "op": "PUSH2",
      "value": "0x1855"
    },
    "6224": {
      "op": "JUMPI"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6227": {
      "op": "DUP1"
    },
    "6228": {
      "op": "REVERT"
    },
    "6229": {
      "op": "JUMPDEST"
    },
    "6230": {
      "op": "DUP1"
    },
    "6231": {
      "op": "SWAP2"
    },
    "6232": {
      "op": "POP"
    },
    "6233": {
      "op": "POP"
    },
    "6234": {
      "op": "SWAP3"
    },
    "6235": {
      "op": "POP"
    },
    "6236": {
      "op": "SWAP3"
    },
    "6237": {
      "op": "SWAP1"
    },
    "6238": {
      "op": "POP"
    },
    "6239": {
      "jump": "o",
      "op": "JUMP"
    },
    "6240": {
      "op": "JUMPDEST"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6243": {
      "op": "DUP1"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6246": {
      "op": "DUP4"
    },
    "6247": {
      "op": "DUP6"
    },
    "6248": {
      "op": "SUB"
    },
    "6249": {
      "op": "SLT"
    },
    "6250": {
      "op": "ISZERO"
    },
    "6251": {
      "op": "PUSH2",
      "value": "0x1873"
    },
    "6254": {
      "op": "JUMPI"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6257": {
      "op": "DUP1"
    },
    "6258": {
      "op": "REVERT"
    },
    "6259": {
      "op": "JUMPDEST"
    },
    "6260": {
      "op": "PUSH2",
      "value": "0x187C"
    },
    "6263": {
      "op": "DUP4"
    },
    "6264": {
      "op": "PUSH2",
      "value": "0x13DC"
    },
    "6267": {
      "jump": "i",
      "op": "JUMP"
    },
    "6268": {
      "op": "JUMPDEST"
    },
    "6269": {
      "op": "SWAP2"
    },
    "6270": {
      "op": "POP"
    },
    "6271": {
      "op": "PUSH2",
      "value": "0x188A"
    },
    "6274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6276": {
      "op": "DUP5"
    },
    "6277": {
      "op": "ADD"
    },
    "6278": {
      "op": "PUSH2",
      "value": "0x13DC"
    },
    "6281": {
      "jump": "i",
      "op": "JUMP"
    },
    "6282": {
      "op": "JUMPDEST"
    },
    "6283": {
      "op": "SWAP1"
    },
    "6284": {
      "op": "POP"
    },
    "6285": {
      "op": "SWAP3"
    },
    "6286": {
      "op": "POP"
    },
    "6287": {
      "op": "SWAP3"
    },
    "6288": {
      "op": "SWAP1"
    },
    "6289": {
      "op": "POP"
    },
    "6290": {
      "jump": "o",
      "op": "JUMP"
    },
    "6291": {
      "op": "JUMPDEST"
    },
    "6292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6294": {
      "op": "DUP1"
    },
    "6295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6297": {
      "op": "DUP1"
    },
    "6298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6302": {
      "op": "DUP7"
    },
    "6303": {
      "op": "DUP9"
    },
    "6304": {
      "op": "SUB"
    },
    "6305": {
      "op": "SLT"
    },
    "6306": {
      "op": "ISZERO"
    },
    "6307": {
      "op": "PUSH2",
      "value": "0x18AB"
    },
    "6310": {
      "op": "JUMPI"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6313": {
      "op": "DUP1"
    },
    "6314": {
      "op": "REVERT"
    },
    "6315": {
      "op": "JUMPDEST"
    },
    "6316": {
      "op": "PUSH2",
      "value": "0x18B4"
    },
    "6319": {
      "op": "DUP7"
    },
    "6320": {
      "op": "PUSH2",
      "value": "0x13DC"
    },
    "6323": {
      "jump": "i",
      "op": "JUMP"
    },
    "6324": {
      "op": "JUMPDEST"
    },
    "6325": {
      "op": "SWAP5"
    },
    "6326": {
      "op": "POP"
    },
    "6327": {
      "op": "PUSH2",
      "value": "0x18C2"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6332": {
      "op": "DUP8"
    },
    "6333": {
      "op": "ADD"
    },
    "6334": {
      "op": "PUSH2",
      "value": "0x13DC"
    },
    "6337": {
      "jump": "i",
      "op": "JUMP"
    },
    "6338": {
      "op": "JUMPDEST"
    },
    "6339": {
      "op": "SWAP4"
    },
    "6340": {
      "op": "POP"
    },
    "6341": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6343": {
      "op": "DUP7"
    },
    "6344": {
      "op": "ADD"
    },
    "6345": {
      "op": "CALLDATALOAD"
    },
    "6346": {
      "op": "SWAP3"
    },
    "6347": {
      "op": "POP"
    },
    "6348": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6350": {
      "op": "DUP7"
    },
    "6351": {
      "op": "ADD"
    },
    "6352": {
      "op": "CALLDATALOAD"
    },
    "6353": {
      "op": "SWAP2"
    },
    "6354": {
      "op": "POP"
    },
    "6355": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6357": {
      "op": "DUP7"
    },
    "6358": {
      "op": "ADD"
    },
    "6359": {
      "op": "CALLDATALOAD"
    },
    "6360": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6369": {
      "op": "DUP2"
    },
    "6370": {
      "op": "GT"
    },
    "6371": {
      "op": "ISZERO"
    },
    "6372": {
      "op": "PUSH2",
      "value": "0x18EC"
    },
    "6375": {
      "op": "JUMPI"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6378": {
      "op": "DUP1"
    },
    "6379": {
      "op": "REVERT"
    },
    "6380": {
      "op": "JUMPDEST"
    },
    "6381": {
      "op": "PUSH2",
      "value": "0x1708"
    },
    "6384": {
      "op": "DUP9"
    },
    "6385": {
      "op": "DUP3"
    },
    "6386": {
      "op": "DUP10"
    },
    "6387": {
      "op": "ADD"
    },
    "6388": {
      "op": "PUSH2",
      "value": "0x15F7"
    },
    "6391": {
      "jump": "i",
      "op": "JUMP"
    },
    "6392": {
      "op": "JUMPDEST"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6395": {
      "op": "DUP2"
    },
    "6396": {
      "op": "DUP2"
    },
    "6397": {
      "op": "SHR"
    },
    "6398": {
      "op": "SWAP1"
    },
    "6399": {
      "op": "DUP3"
    },
    "6400": {
      "op": "AND"
    },
    "6401": {
      "op": "DUP1"
    },
    "6402": {
      "op": "PUSH2",
      "value": "0x190C"
    },
    "6405": {
      "op": "JUMPI"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "6408": {
      "op": "DUP3"
    },
    "6409": {
      "op": "AND"
    },
    "6410": {
      "op": "SWAP2"
    },
    "6411": {
      "op": "POP"
    },
    "6412": {
      "op": "JUMPDEST"
    },
    "6413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6415": {
      "op": "DUP3"
    },
    "6416": {
      "op": "LT"
    },
    "6417": {
      "op": "DUP2"
    },
    "6418": {
      "op": "SUB"
    },
    "6419": {
      "op": "PUSH2",
      "value": "0x192C"
    },
    "6422": {
      "op": "JUMPI"
    },
    "6423": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6430": {
      "op": "SHL"
    },
    "6431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6433": {
      "op": "MSTORE"
    },
    "6434": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6438": {
      "op": "MSTORE"
    },
    "6439": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6443": {
      "op": "REVERT"
    },
    "6444": {
      "op": "JUMPDEST"
    },
    "6445": {
      "op": "POP"
    },
    "6446": {
      "op": "SWAP2"
    },
    "6447": {
      "op": "SWAP1"
    },
    "6448": {
      "op": "POP"
    },
    "6449": {
      "jump": "o",
      "op": "JUMP"
    },
    "6450": {
      "op": "JUMPDEST"
    },
    "6451": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6456": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6458": {
      "op": "SHL"
    },
    "6459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6461": {
      "op": "MSTORE"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6464": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6466": {
      "op": "MSTORE"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6471": {
      "op": "REVERT"
    },
    "6472": {
      "op": "JUMPDEST"
    },
    "6473": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6478": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6480": {
      "op": "SHL"
    },
    "6481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6483": {
      "op": "MSTORE"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6486": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6488": {
      "op": "MSTORE"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6493": {
      "op": "REVERT"
    },
    "6494": {
      "op": "JUMPDEST"
    },
    "6495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6499": {
      "op": "DUP3"
    },
    "6500": {
      "op": "ADD"
    },
    "6501": {
      "op": "PUSH2",
      "value": "0x1970"
    },
    "6504": {
      "op": "JUMPI"
    },
    "6505": {
      "op": "PUSH2",
      "value": "0x1970"
    },
    "6508": {
      "op": "PUSH2",
      "value": "0x1948"
    },
    "6511": {
      "jump": "i",
      "op": "JUMP"
    },
    "6512": {
      "op": "JUMPDEST"
    },
    "6513": {
      "op": "POP"
    },
    "6514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6516": {
      "op": "ADD"
    },
    "6517": {
      "op": "SWAP1"
    },
    "6518": {
      "jump": "o",
      "op": "JUMP"
    },
    "6519": {
      "op": "JUMPDEST"
    },
    "6520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6522": {
      "op": "DUP3"
    },
    "6523": {
      "op": "PUSH2",
      "value": "0x1994"
    },
    "6526": {
      "op": "JUMPI"
    },
    "6527": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6532": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6534": {
      "op": "SHL"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6537": {
      "op": "MSTORE"
    },
    "6538": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6540": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6542": {
      "op": "MSTORE"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6547": {
      "op": "REVERT"
    },
    "6548": {
      "op": "JUMPDEST"
    },
    "6549": {
      "op": "POP"
    },
    "6550": {
      "op": "MOD"
    },
    "6551": {
      "op": "SWAP1"
    },
    "6552": {
      "jump": "o",
      "op": "JUMP"
    },
    "6553": {
      "op": "JUMPDEST"
    },
    "6554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6558": {
      "op": "DUP3"
    },
    "6559": {
      "op": "DUP5"
    },
    "6560": {
      "op": "SUB"
    },
    "6561": {
      "op": "SLT"
    },
    "6562": {
      "op": "ISZERO"
    },
    "6563": {
      "op": "PUSH2",
      "value": "0x19AB"
    },
    "6566": {
      "op": "JUMPI"
    },
    "6567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6569": {
      "op": "DUP1"
    },
    "6570": {
      "op": "REVERT"
    },
    "6571": {
      "op": "JUMPDEST"
    },
    "6572": {
      "op": "POP"
    },
    "6573": {
      "op": "MLOAD"
    },
    "6574": {
      "op": "SWAP2"
    },
    "6575": {
      "op": "SWAP1"
    },
    "6576": {
      "op": "POP"
    },
    "6577": {
      "jump": "o",
      "op": "JUMP"
    },
    "6578": {
      "op": "JUMPDEST"
    },
    "6579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6581": {
      "op": "DUP3"
    },
    "6582": {
      "op": "NOT"
    },
    "6583": {
      "op": "DUP3"
    },
    "6584": {
      "op": "GT"
    },
    "6585": {
      "op": "ISZERO"
    },
    "6586": {
      "op": "PUSH2",
      "value": "0x19C5"
    },
    "6589": {
      "op": "JUMPI"
    },
    "6590": {
      "op": "PUSH2",
      "value": "0x19C5"
    },
    "6593": {
      "op": "PUSH2",
      "value": "0x1948"
    },
    "6596": {
      "jump": "i",
      "op": "JUMP"
    },
    "6597": {
      "op": "JUMPDEST"
    },
    "6598": {
      "op": "POP"
    },
    "6599": {
      "op": "ADD"
    },
    "6600": {
      "op": "SWAP1"
    },
    "6601": {
      "jump": "o",
      "op": "JUMP"
    },
    "6602": {
      "op": "JUMPDEST"
    },
    "6603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6605": {
      "op": "DUP1"
    },
    "6606": {
      "op": "DUP3"
    },
    "6607": {
      "op": "MSTORE"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6610": {
      "op": "SWAP1"
    },
    "6611": {
      "op": "DUP3"
    },
    "6612": {
      "op": "ADD"
    },
    "6613": {
      "op": "MSTORE"
    },
    "6614": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6649": {
      "op": "DUP3"
    },
    "6650": {
      "op": "ADD"
    },
    "6651": {
      "op": "MSTORE"
    },
    "6652": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "6658": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6660": {
      "op": "SHL"
    },
    "6661": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6663": {
      "op": "DUP3"
    },
    "6664": {
      "op": "ADD"
    },
    "6665": {
      "op": "MSTORE"
    },
    "6666": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6668": {
      "op": "ADD"
    },
    "6669": {
      "op": "SWAP1"
    },
    "6670": {
      "jump": "o",
      "op": "JUMP"
    },
    "6671": {
      "op": "JUMPDEST"
    },
    "6672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6674": {
      "op": "DUP1"
    },
    "6675": {
      "op": "DUP3"
    },
    "6676": {
      "op": "MSTORE"
    },
    "6677": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6679": {
      "op": "SWAP1"
    },
    "6680": {
      "op": "DUP3"
    },
    "6681": {
      "op": "ADD"
    },
    "6682": {
      "op": "MSTORE"
    },
    "6683": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "6716": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6718": {
      "op": "DUP3"
    },
    "6719": {
      "op": "ADD"
    },
    "6720": {
      "op": "MSTORE"
    },
    "6721": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "6732": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "6734": {
      "op": "SHL"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6737": {
      "op": "DUP3"
    },
    "6738": {
      "op": "ADD"
    },
    "6739": {
      "op": "MSTORE"
    },
    "6740": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6742": {
      "op": "ADD"
    },
    "6743": {
      "op": "SWAP1"
    },
    "6744": {
      "jump": "o",
      "op": "JUMP"
    },
    "6745": {
      "op": "JUMPDEST"
    },
    "6746": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6748": {
      "op": "DUP2"
    },
    "6749": {
      "op": "MSTORE"
    },
    "6750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6752": {
      "op": "PUSH2",
      "value": "0x1A6C"
    },
    "6755": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6757": {
      "op": "DUP4"
    },
    "6758": {
      "op": "ADD"
    },
    "6759": {
      "op": "DUP6"
    },
    "6760": {
      "op": "PUSH2",
      "value": "0x17D6"
    },
    "6763": {
      "jump": "i",
      "op": "JUMP"
    },
    "6764": {
      "op": "JUMPDEST"
    },
    "6765": {
      "op": "DUP3"
    },
    "6766": {
      "op": "DUP2"
    },
    "6767": {
      "op": "SUB"
    },
    "6768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6770": {
      "op": "DUP5"
    },
    "6771": {
      "op": "ADD"
    },
    "6772": {
      "op": "MSTORE"
    },
    "6773": {
      "op": "PUSH2",
      "value": "0x1A7E"
    },
    "6776": {
      "op": "DUP2"
    },
    "6777": {
      "op": "DUP6"
    },
    "6778": {
      "op": "PUSH2",
      "value": "0x17D6"
    },
    "6781": {
      "jump": "i",
      "op": "JUMP"
    },
    "6782": {
      "op": "JUMPDEST"
    },
    "6783": {
      "op": "SWAP6"
    },
    "6784": {
      "op": "SWAP5"
    },
    "6785": {
      "op": "POP"
    },
    "6786": {
      "op": "POP"
    },
    "6787": {
      "op": "POP"
    },
    "6788": {
      "op": "POP"
    },
    "6789": {
      "op": "POP"
    },
    "6790": {
      "jump": "o",
      "op": "JUMP"
    },
    "6791": {
      "op": "JUMPDEST"
    },
    "6792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6798": {
      "op": "SHL"
    },
    "6799": {
      "op": "SUB"
    },
    "6800": {
      "op": "DUP7"
    },
    "6801": {
      "op": "DUP2"
    },
    "6802": {
      "op": "AND"
    },
    "6803": {
      "op": "DUP3"
    },
    "6804": {
      "op": "MSTORE"
    },
    "6805": {
      "op": "DUP6"
    },
    "6806": {
      "op": "AND"
    },
    "6807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6809": {
      "op": "DUP3"
    },
    "6810": {
      "op": "ADD"
    },
    "6811": {
      "op": "MSTORE"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6814": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6816": {
      "op": "DUP3"
    },
    "6817": {
      "op": "ADD"
    },
    "6818": {
      "op": "DUP2"
    },
    "6819": {
      "op": "SWAP1"
    },
    "6820": {
      "op": "MSTORE"
    },
    "6821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6823": {
      "op": "SWAP1"
    },
    "6824": {
      "op": "PUSH2",
      "value": "0x1AB3"
    },
    "6827": {
      "op": "SWAP1"
    },
    "6828": {
      "op": "DUP4"
    },
    "6829": {
      "op": "ADD"
    },
    "6830": {
      "op": "DUP7"
    },
    "6831": {
      "op": "PUSH2",
      "value": "0x17D6"
    },
    "6834": {
      "jump": "i",
      "op": "JUMP"
    },
    "6835": {
      "op": "JUMPDEST"
    },
    "6836": {
      "op": "DUP3"
    },
    "6837": {
      "op": "DUP2"
    },
    "6838": {
      "op": "SUB"
    },
    "6839": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6841": {
      "op": "DUP5"
    },
    "6842": {
      "op": "ADD"
    },
    "6843": {
      "op": "MSTORE"
    },
    "6844": {
      "op": "PUSH2",
      "value": "0x1AC5"
    },
    "6847": {
      "op": "DUP2"
    },
    "6848": {
      "op": "DUP7"
    },
    "6849": {
      "op": "PUSH2",
      "value": "0x17D6"
    },
    "6852": {
      "jump": "i",
      "op": "JUMP"
    },
    "6853": {
      "op": "JUMPDEST"
    },
    "6854": {
      "op": "SWAP1"
    },
    "6855": {
      "op": "POP"
    },
    "6856": {
      "op": "DUP3"
    },
    "6857": {
      "op": "DUP2"
    },
    "6858": {
      "op": "SUB"
    },
    "6859": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6861": {
      "op": "DUP5"
    },
    "6862": {
      "op": "ADD"
    },
    "6863": {
      "op": "MSTORE"
    },
    "6864": {
      "op": "PUSH2",
      "value": "0x1AD9"
    },
    "6867": {
      "op": "DUP2"
    },
    "6868": {
      "op": "DUP6"
    },
    "6869": {
      "op": "PUSH2",
      "value": "0x1478"
    },
    "6872": {
      "jump": "i",
      "op": "JUMP"
    },
    "6873": {
      "op": "JUMPDEST"
    },
    "6874": {
      "op": "SWAP9"
    },
    "6875": {
      "op": "SWAP8"
    },
    "6876": {
      "op": "POP"
    },
    "6877": {
      "op": "POP"
    },
    "6878": {
      "op": "POP"
    },
    "6879": {
      "op": "POP"
    },
    "6880": {
      "op": "POP"
    },
    "6881": {
      "op": "POP"
    },
    "6882": {
      "op": "POP"
    },
    "6883": {
      "op": "POP"
    },
    "6884": {
      "jump": "o",
      "op": "JUMP"
    },
    "6885": {
      "op": "JUMPDEST"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6890": {
      "op": "DUP3"
    },
    "6891": {
      "op": "DUP5"
    },
    "6892": {
      "op": "SUB"
    },
    "6893": {
      "op": "SLT"
    },
    "6894": {
      "op": "ISZERO"
    },
    "6895": {
      "op": "PUSH2",
      "value": "0x1AF7"
    },
    "6898": {
      "op": "JUMPI"
    },
    "6899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6901": {
      "op": "DUP1"
    },
    "6902": {
      "op": "REVERT"
    },
    "6903": {
      "op": "JUMPDEST"
    },
    "6904": {
      "op": "DUP2"
    },
    "6905": {
      "op": "MLOAD"
    },
    "6906": {
      "op": "PUSH2",
      "value": "0x1458"
    },
    "6909": {
      "op": "DUP2"
    },
    "6910": {
      "op": "PUSH2",
      "value": "0x1422"
    },
    "6913": {
      "jump": "i",
      "op": "JUMP"
    },
    "6914": {
      "op": "JUMPDEST"
    },
    "6915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6917": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6919": {
      "op": "RETURNDATASIZE"
    },
    "6920": {
      "op": "GT"
    },
    "6921": {
      "op": "ISZERO"
    },
    "6922": {
      "op": "PUSH2",
      "value": "0x1B1B"
    },
    "6925": {
      "op": "JUMPI"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6930": {
      "op": "DUP1"
    },
    "6931": {
      "op": "RETURNDATACOPY"
    },
    "6932": {
      "op": "POP"
    },
    "6933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6935": {
      "op": "MLOAD"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6938": {
      "op": "SHR"
    },
    "6939": {
      "op": "JUMPDEST"
    },
    "6940": {
      "op": "SWAP1"
    },
    "6941": {
      "jump": "o",
      "op": "JUMP"
    },
    "6942": {
      "op": "JUMPDEST"
    },
    "6943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6945": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6947": {
      "op": "RETURNDATASIZE"
    },
    "6948": {
      "op": "LT"
    },
    "6949": {
      "op": "ISZERO"
    },
    "6950": {
      "op": "PUSH2",
      "value": "0x1B2C"
    },
    "6953": {
      "op": "JUMPI"
    },
    "6954": {
      "op": "SWAP1"
    },
    "6955": {
      "jump": "o",
      "op": "JUMP"
    },
    "6956": {
      "op": "JUMPDEST"
    },
    "6957": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6959": {
      "op": "MLOAD"
    },
    "6960": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6962": {
      "op": "NOT"
    },
    "6963": {
      "op": "RETURNDATASIZE"
    },
    "6964": {
      "op": "DUP2"
    },
    "6965": {
      "op": "ADD"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6968": {
      "op": "DUP4"
    },
    "6969": {
      "op": "RETURNDATACOPY"
    },
    "6970": {
      "op": "DUP2"
    },
    "6971": {
      "op": "MLOAD"
    },
    "6972": {
      "op": "RETURNDATASIZE"
    },
    "6973": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6982": {
      "op": "DUP2"
    },
    "6983": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6985": {
      "op": "DUP5"
    },
    "6986": {
      "op": "ADD"
    },
    "6987": {
      "op": "GT"
    },
    "6988": {
      "op": "DUP2"
    },
    "6989": {
      "op": "DUP5"
    },
    "6990": {
      "op": "GT"
    },
    "6991": {
      "op": "OR"
    },
    "6992": {
      "op": "ISZERO"
    },
    "6993": {
      "op": "PUSH2",
      "value": "0x1B5C"
    },
    "6996": {
      "op": "JUMPI"
    },
    "6997": {
      "op": "POP"
    },
    "6998": {
      "op": "POP"
    },
    "6999": {
      "op": "POP"
    },
    "7000": {
      "op": "POP"
    },
    "7001": {
      "op": "POP"
    },
    "7002": {
      "op": "SWAP1"
    },
    "7003": {
      "jump": "o",
      "op": "JUMP"
    },
    "7004": {
      "op": "JUMPDEST"
    },
    "7005": {
      "op": "DUP3"
    },
    "7006": {
      "op": "DUP6"
    },
    "7007": {
      "op": "ADD"
    },
    "7008": {
      "op": "SWAP2"
    },
    "7009": {
      "op": "POP"
    },
    "7010": {
      "op": "DUP2"
    },
    "7011": {
      "op": "MLOAD"
    },
    "7012": {
      "op": "DUP2"
    },
    "7013": {
      "op": "DUP2"
    },
    "7014": {
      "op": "GT"
    },
    "7015": {
      "op": "ISZERO"
    },
    "7016": {
      "op": "PUSH2",
      "value": "0x1B74"
    },
    "7019": {
      "op": "JUMPI"
    },
    "7020": {
      "op": "POP"
    },
    "7021": {
      "op": "POP"
    },
    "7022": {
      "op": "POP"
    },
    "7023": {
      "op": "POP"
    },
    "7024": {
      "op": "POP"
    },
    "7025": {
      "op": "POP"
    },
    "7026": {
      "op": "SWAP1"
    },
    "7027": {
      "jump": "o",
      "op": "JUMP"
    },
    "7028": {
      "op": "JUMPDEST"
    },
    "7029": {
      "op": "DUP5"
    },
    "7030": {
      "op": "RETURNDATASIZE"
    },
    "7031": {
      "op": "DUP8"
    },
    "7032": {
      "op": "ADD"
    },
    "7033": {
      "op": "ADD"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7036": {
      "op": "DUP3"
    },
    "7037": {
      "op": "DUP6"
    },
    "7038": {
      "op": "ADD"
    },
    "7039": {
      "op": "ADD"
    },
    "7040": {
      "op": "GT"
    },
    "7041": {
      "op": "ISZERO"
    },
    "7042": {
      "op": "PUSH2",
      "value": "0x1B8E"
    },
    "7045": {
      "op": "JUMPI"
    },
    "7046": {
      "op": "POP"
    },
    "7047": {
      "op": "POP"
    },
    "7048": {
      "op": "POP"
    },
    "7049": {
      "op": "POP"
    },
    "7050": {
      "op": "POP"
    },
    "7051": {
      "op": "POP"
    },
    "7052": {
      "op": "SWAP1"
    },
    "7053": {
      "jump": "o",
      "op": "JUMP"
    },
    "7054": {
      "op": "JUMPDEST"
    },
    "7055": {
      "op": "PUSH2",
      "value": "0x1B9D"
    },
    "7058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7060": {
      "op": "DUP3"
    },
    "7061": {
      "op": "DUP7"
    },
    "7062": {
      "op": "ADD"
    },
    "7063": {
      "op": "ADD"
    },
    "7064": {
      "op": "DUP8"
    },
    "7065": {
      "op": "PUSH2",
      "value": "0x14EE"
    },
    "7068": {
      "jump": "i",
      "op": "JUMP"
    },
    "7069": {
      "op": "JUMPDEST"
    },
    "7070": {
      "op": "POP"
    },
    "7071": {
      "op": "SWAP1"
    },
    "7072": {
      "op": "SWAP6"
    },
    "7073": {
      "op": "SWAP5"
    },
    "7074": {
      "op": "POP"
    },
    "7075": {
      "op": "POP"
    },
    "7076": {
      "op": "POP"
    },
    "7077": {
      "op": "POP"
    },
    "7078": {
      "op": "POP"
    },
    "7079": {
      "jump": "o",
      "op": "JUMP"
    },
    "7080": {
      "op": "JUMPDEST"
    },
    "7081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7083": {
      "op": "DUP1"
    },
    "7084": {
      "op": "DUP3"
    },
    "7085": {
      "op": "MSTORE"
    },
    "7086": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "7088": {
      "op": "SWAP1"
    },
    "7089": {
      "op": "DUP3"
    },
    "7090": {
      "op": "ADD"
    },
    "7091": {
      "op": "MSTORE"
    },
    "7092": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7127": {
      "op": "DUP3"
    },
    "7128": {
      "op": "ADD"
    },
    "7129": {
      "op": "MSTORE"
    },
    "7130": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "7139": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7141": {
      "op": "SHL"
    },
    "7142": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7144": {
      "op": "DUP3"
    },
    "7145": {
      "op": "ADD"
    },
    "7146": {
      "op": "MSTORE"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7149": {
      "op": "ADD"
    },
    "7150": {
      "op": "SWAP1"
    },
    "7151": {
      "jump": "o",
      "op": "JUMP"
    },
    "7152": {
      "op": "JUMPDEST"
    },
    "7153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7159": {
      "op": "SHL"
    },
    "7160": {
      "op": "SUB"
    },
    "7161": {
      "op": "DUP7"
    },
    "7162": {
      "op": "DUP2"
    },
    "7163": {
      "op": "AND"
    },
    "7164": {
      "op": "DUP3"
    },
    "7165": {
      "op": "MSTORE"
    },
    "7166": {
      "op": "DUP6"
    },
    "7167": {
      "op": "AND"
    },
    "7168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7170": {
      "op": "DUP3"
    },
    "7171": {
      "op": "ADD"
    },
    "7172": {
      "op": "MSTORE"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7175": {
      "op": "DUP2"
    },
    "7176": {
      "op": "ADD"
    },
    "7177": {
      "op": "DUP5"
    },
    "7178": {
      "op": "SWAP1"
    },
    "7179": {
      "op": "MSTORE"
    },
    "7180": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7182": {
      "op": "DUP2"
    },
    "7183": {
      "op": "ADD"
    },
    "7184": {
      "op": "DUP4"
    },
    "7185": {
      "op": "SWAP1"
    },
    "7186": {
      "op": "MSTORE"
    },
    "7187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7189": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7191": {
      "op": "DUP3"
    },
    "7192": {
      "op": "ADD"
    },
    "7193": {
      "op": "DUP2"
    },
    "7194": {
      "op": "SWAP1"
    },
    "7195": {
      "op": "MSTORE"
    },
    "7196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7198": {
      "op": "SWAP1"
    },
    "7199": {
      "op": "PUSH2",
      "value": "0x1C2A"
    },
    "7202": {
      "op": "SWAP1"
    },
    "7203": {
      "op": "DUP4"
    },
    "7204": {
      "op": "ADD"
    },
    "7205": {
      "op": "DUP5"
    },
    "7206": {
      "op": "PUSH2",
      "value": "0x1478"
    },
    "7209": {
      "jump": "i",
      "op": "JUMP"
    },
    "7210": {
      "op": "JUMPDEST"
    },
    "7211": {
      "op": "SWAP8"
    },
    "7212": {
      "op": "SWAP7"
    },
    "7213": {
      "op": "POP"
    },
    "7214": {
      "op": "POP"
    },
    "7215": {
      "op": "POP"
    },
    "7216": {
      "op": "POP"
    },
    "7217": {
      "op": "POP"
    },
    "7218": {
      "op": "POP"
    },
    "7219": {
      "op": "POP"
    },
    "7220": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "cdd591111d0de3957e2da75c5324ba53e33fbb76",
  "source": "//SPDX-License-Identifier: MIT\n\n// Solidity files have to start with this pragma.\n// It will be used by the Solidity compiler to validate its version.\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\";\n\n\n\n\n// This is the main building block for smart contracts.\ncontract Anvil is ERC1155, VRFConsumerBaseV2 {\n\n    struct UpgradeRequest {\n        //the player requesting the upgrade\n        address player;\n        //the ID of the item requested to be upgraded\n        uint256 itemId;\n    }\n\n    mapping(uint256 => UpgradeRequest) upgradeRequests;\n\n    /**********\n    **\n    ** Anvil values\n    **\n    **********/\n    uint256 public constant CROSSBOW_COMMON = 0;\n    uint256 public constant CROSSBOW_UNCOMMON = 1;\n    uint256 public constant CROSSBOW_RARE = 2;\n    uint256 public constant CROSSBOW_LEGENDARY = 3;\n\n    uint256 public constant SWORD_COMMON = 10;\n    uint256 public constant SWORD_UNCOMMON = 11;\n    uint256 public constant SWORD_RARE = 12;\n    uint256 public constant SWORD_LEGENDARY = 13;\n\n    uint256 public constant DAGGER_COMMON = 20;\n    uint256 public constant DAGGER_UNCOMMON = 21;\n    uint256 public constant DAGGER_RARE = 22;\n    uint256 public constant DAGGER_LEGENDARY = 23;\n\n    //everyone starts with Common. No pre-mine of high-quality items\n    uint256 public constant startingCommonCount = 10**27;\n\n    //the probability for a successful upgrade\n    uint256 public constant UPGRADE_PERCENTAGE = 50;\n    //uint256 public constant uncommonUpgradeProbababilty = 0.5;\n    //uint256 public constant rareUpgradeProbababilty  = 0.25;\n    //uint256 public constant legendaryUpgradeProbababilty  = 0.05;\n\n    //the amount of items of type {id} needed to attempt an upgrade to {id+1}.\n    uint256 public constant UPGRADE_FACTOR = 10;\n\n\n    address public owner;\n\n\n    /**********\n    **\n    ** Chainlink values\n    **\n    **********/\n    VRFCoordinatorV2Interface immutable COORDINATOR;\n    LinkTokenInterface immutable LINKTOKEN;\n    uint64 s_subscriptionId;\n    // The gas lane to use, which specifies the maximum gas price to bump to.\n    // For a list of available gas lanes on each network,\n    // see https://docs.chain.link/docs/vrf-contracts/#configurations\n    bytes32 immutable s_keyHash;\n    uint32 immutable s_callbackGasLimit = 100000;    uint16 requestConfirmations = 3;\n    uint32 immutable s_numWords = 2;\n    uint256 public _randomNumber;\n    uint16 immutable s_requestConfirmations = 3;\n    address s_owner;\n\n    event ReturnedRandomness(uint256 randomNumber);\n\n\n    constructor(\n        uint64 subscriptionId,\n        address vrfCoordinator,\n        address link,\n        bytes32 keyHash\n    ) ERC1155(\"https://game.example/api/item/{id}.json\")\n        VRFConsumerBaseV2(vrfCoordinator){\n\n        COORDINATOR = VRFCoordinatorV2Interface(vrfCoordinator);\n        LINKTOKEN = LinkTokenInterface(link);\n        s_keyHash = keyHash;\n        s_owner = msg.sender;\n        s_subscriptionId = subscriptionId;\n\n        //old\n        owner = msg.sender;\n\n        /** ERC1155 INIT **/\n        _mint(msg.sender, CROSSBOW_COMMON, startingCommonCount, \"\");\n        _mint(msg.sender, SWORD_COMMON, startingCommonCount, \"\");\n        _mint(msg.sender, DAGGER_COMMON, startingCommonCount, \"\");\n    }\n\n\n    /**\n     * @dev Destroys `UPGRADE_FACTOR` tokens of token type `id` from `from` and has `UPGRADE_PERCENTAGE` chance of minting token `id+1`\n     *\n     * Emits a {???????? -- check if we need} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     * TODO implement approval\n     */\n    function nonDeterministicUpgradeItem(address from,uint256 itemId) external returns (uint256 requestId)  {\n        require(\n           from == _msgSender() || isApprovedForAll(from, _msgSender()),\n           \"Anvil: caller is not owner nor approved\"\n        );\n        //TODO check there's actually 10 items of the one requested to being upgraded\n        //require(balanceOf(from,itemId) >= 10, \"Anvil: caller does not have enough tokens\");\n\n        //Ensure Item is upgradable\n        //0 common - 1 uncommon - 2 rare - 3 legendary. Mod 10 to get rank\n        require(itemId % 10 < 3 , \"Anvil: Cannot upgrade legendary item\");\n\n\n        //trigger Chainlink to get a random percentage for this request\n        requestId = COORDINATOR.requestRandomWords(\n            s_keyHash,\n            s_subscriptionId,\n            s_requestConfirmations,\n            s_callbackGasLimit,\n            s_numWords\n        );\n        //push the request on the stack\n        upgradeRequests[requestId] = UpgradeRequest(\n            msg.sender,\n            itemId\n            );\n\n    }\n\n    //todo ensure requestId is mapped to user + upgrading request. atm only 1 for testing.\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\n\n        UpgradeRequest storage u = upgradeRequests[requestId];\n\n\n        //burn `UPGRADE_FACTOR` amount, no matter what\n        _burn(u.player, u.itemId, UPGRADE_FACTOR);\n\n\n        //number ends up between 1-100, use as percentage. 80% change means number between 1-80.\n        _randomNumber = (randomWords[0] % 100) + 1;\n        if (_randomNumber <= UPGRADE_PERCENTAGE) {\n            _mint(u.player, u.itemId+1, 1, \"\");\n        }\n\n        emit ReturnedRandomness(_randomNumber);\n    }\n\n    modifier onlyOwner() {\n    require(msg.sender == s_owner);\n    _;\n  }\n}\n",
  "sourceMap": "513:5182:11:-:0;;;2513:6;2475:44;;2524:31;;;-1:-1:-1;;;;2524:31:11;-1:-1:-1;;;2524:31:11;;;2591:1;2561:31;;2554:1;2632:43;;2757:716;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2962:14;1031:62:0;;;;;;;;;;;;;;;;;1073:13;1081:4;1073:7;:13::i;:::-;-1:-1:-1;;;;;;5599:32:8;;;;;2988:55:11;;::::2;;::::0;3053:36;::::2;;::::0;3099:19:::2;::::0;;;3128:7:::2;:20:::0;;3138:10:::2;-1:-1:-1::0;;;;;;3128:20:11;;::::2;::::0;::::2;::::0;;;3158:16:::2;:33:::0;;-1:-1:-1;;;;;;3216:18:11;-1:-1:-1;;;;;;;;3158:33:11;::::2;;3216:18:::0;;;;;;;;::::2;::::0;;3274:59:::2;::::0;;::::2;::::0;::::2;::::0;;;-1:-1:-1;3274:59:11;;;::::2;::::0;3138:10;1572:6:::2;::::0;3274:5:::2;:59::i;:::-;3343:56;3349:10;1108:2;1572:6;3343:56;;;;;;;;;;;::::0;:5:::2;;;:56;;:::i;:::-;3409:57;3415:10;1301:2;1572:6;3409:57;;;;;;;;;;;::::0;:5:::2;;;:57;;:::i;:::-;2757:716:::0;;;;513:5182;;8028:86:0;8094:13;;;;:4;;:13;;;;;:::i;:::-;;8028:86;:::o;8502:583::-;-1:-1:-1;;;;;8654:21:0;;8646:67;;;;-1:-1:-1;;;8646:67:0;;923:2:13;8646:67:0;;;905:21:13;962:2;942:18;;;935:30;1001:34;981:18;;;974:62;-1:-1:-1;;;1052:18:13;;;1045:31;1093:19;;8646:67:0;;;;;;;;;666:10:5;8766:107:0;666:10:5;8724:16:0;8809:7;8818:21;8836:2;8818:17;:21::i;:::-;8841:25;8859:6;8841:17;:25::i;:::-;13073:214;;;;;;8766:107;8884:9;:13;;;;;;;;;;;-1:-1:-1;;;;;8884:22:0;;;;;;;;;:32;;8910:6;;8884:9;:32;;8910:6;;8884:32;:::i;:::-;;;;-1:-1:-1;;8931:57:0;;;1527:25:13;;;1583:2;1568:18;;1561:34;;;-1:-1:-1;;;;;8931:57:0;;;;8964:1;;8931:57;;;;;;1500:18:13;8931:57:0;;;;;;;8999:79;9030:8;9048:1;9052:7;9061:2;9065:6;9073:4;8999:30;:79::i;14822:193::-;14941:16;;;14955:1;14941:16;;;;;;;;;14888;;14916:22;;14941:16;;;;;;;;;;;;-1:-1:-1;14941:16:0;14916:41;;14978:7;14967:5;14973:1;14967:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15003:5;14822:193;-1:-1:-1;;14822:193:0:o;13073:214::-;;;;;;;:::o;13293:725::-;13500:15;:2;-1:-1:-1;;;;;13500:13:0;;;;;;:15;;:::i;:::-;13496:516;;;13535:72;;-1:-1:-1;;;13535:72:0;;-1:-1:-1;;;;;13535:38:0;;;;;:72;;13574:8;;13584:4;;13590:2;;13594:6;;13602:4;;13535:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13535:72:0;;;;;;;;-1:-1:-1;;13535:72:0;;;;;;;;;;;;:::i;:::-;;;13531:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;13878:6;13871:14;;-1:-1:-1;;;13871:14:0;;;;;;;;:::i;13531:471::-;;;13925:62;;-1:-1:-1;;;13925:62:0;;4843:2:13;13925:62:0;;;4825:21:13;4882:2;4862:18;;;4855:30;4921:34;4901:18;;;4894:62;4992:22;4972:18;;;4965:50;5032:19;;13925:62:0;4641:416:13;13531:471:0;-1:-1:-1;;;;;;13656:55:0;;-1:-1:-1;;;13656:55:0;13652:152;;13735:50;;-1:-1:-1;;;13735:50:0;;5264:2:13;13735:50:0;;;5246:21:13;5303:2;5283:18;;;5276:30;5342:34;5322:18;;;5315:62;-1:-1:-1;;;5393:18:13;;;5386:38;5441:19;;13735:50:0;5062:404:13;13652:152:0;13608:210;13293:725;;;;;;:::o;718:377:4:-;1034:20;1080:8;;;718:377::o;513:5182:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;513:5182:11;;;-1:-1:-1;513:5182:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:13;93:13;;-1:-1:-1;;;;;135:31:13;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:520::-;292:6;300;308;316;369:3;357:9;348:7;344:23;340:33;337:53;;;386:1;383;376:12;337:53;412:16;;-1:-1:-1;;;;;457:30:13;;447:41;;437:69;;502:1;499;492:12;437:69;525:5;-1:-1:-1;549:49:13;594:2;579:18;;549:49;:::i;:::-;539:59;;617:49;662:2;651:9;647:18;617:49;:::i;:::-;706:2;691:18;;;;685:25;196:520;;;;-1:-1:-1;;;196:520:13:o;1123:225::-;1163:3;1194:1;1190:6;1187:1;1184:13;1181:136;;;1239:10;1234:3;1230:20;1227:1;1220:31;1274:4;1271:1;1264:15;1302:4;1299:1;1292:15;1181:136;-1:-1:-1;1333:9:13;;1123:225::o;1738:127::-;1799:10;1794:3;1790:20;1787:1;1780:31;1830:4;1827:1;1820:15;1854:4;1851:1;1844:15;1870:471;1911:3;1949:5;1943:12;1976:6;1971:3;1964:19;2001:1;2011:162;2025:6;2022:1;2019:13;2011:162;;;2087:4;2143:13;;;2139:22;;2133:29;2115:11;;;2111:20;;2104:59;2040:12;2011:162;;;2191:6;2188:1;2185:13;2182:87;;;2257:1;2250:4;2241:6;2236:3;2232:16;2228:27;2221:38;2182:87;-1:-1:-1;2323:2:13;2302:15;-1:-1:-1;;2298:29:13;2289:39;;;;2330:4;2285:50;;1870:471;-1:-1:-1;;1870:471:13:o;2346:560::-;-1:-1:-1;;;;;2643:15:13;;;2625:34;;2695:15;;2690:2;2675:18;;2668:43;2742:2;2727:18;;2720:34;;;2785:2;2770:18;;2763:34;;;2605:3;2828;2813:19;;2806:32;;;2568:4;;2855:45;;2880:19;;2872:6;2855:45;:::i;:::-;2847:53;2346:560;-1:-1:-1;;;;;;;2346:560:13:o;2911:290::-;2980:6;3033:2;3021:9;3012:7;3008:23;3004:32;3001:52;;;3049:1;3046;3039:12;3001:52;3075:16;;-1:-1:-1;;;;;;3120:32:13;;3110:43;;3100:71;;3167:1;3164;3157:12;3100:71;3190:5;2911:290;-1:-1:-1;;;2911:290:13:o;3206:179::-;3241:3;3283:1;3265:16;3262:23;3259:120;;;3329:1;3326;3323;3308:23;-1:-1:-1;3366:1:13;3360:8;3355:3;3351:18;3259:120;3206:179;:::o;3390:346::-;3500:2;3481:13;;-1:-1:-1;;3477:27:13;3465:40;;-1:-1:-1;;;;;3520:34:13;;3556:22;;;3517:62;3514:185;;;3621:10;3616:3;3612:20;3609:1;3602:31;3656:4;3653:1;3646:15;3684:4;3681:1;3674:15;3514:185;3715:2;3708:22;-1:-1:-1;;3390:346:13:o;3741:671::-;3780:3;3822:4;3804:16;3801:26;3798:39;;;3741:671;:::o;3798:39::-;3864:2;3858:9;-1:-1:-1;;3929:16:13;3925:25;;3922:1;3858:9;3901:50;3974:11;;4004:16;-1:-1:-1;;;;;4072:14:13;;;4103:4;4091:17;;4088:25;-1:-1:-1;4069:45:13;4066:58;;;4117:5;;;;;3741:671;:::o;4066:58::-;4154:6;4148:4;4144:17;4133:28;;4190:3;4184:10;4217:2;4209:6;4206:14;4203:27;;;4223:5;;;;;;3741:671;:::o;4203:27::-;4307:2;4288:16;4282:4;4278:27;4274:36;4267:4;4258:6;4253:3;4249:16;4245:27;4242:69;4239:82;;;4314:5;;;;;;3741:671;:::o;4239:82::-;4330:57;4381:4;4372:6;4364;4360:19;4356:30;4350:4;4330:57;:::i;:::-;-1:-1:-1;4403:3:13;;3741:671;-1:-1:-1;;;;;3741:671:13:o;4417:219::-;4566:2;4555:9;4548:21;4529:4;4586:44;4626:2;4615:9;4611:18;4603:6;4586:44;:::i;5471:380::-;5550:1;5546:12;;;;5593;;;5614:61;;5668:4;5660:6;5656:17;5646:27;;5614:61;5721:2;5713:6;5710:14;5690:18;5687:38;5684:161;;5767:10;5762:3;5758:20;5755:1;5748:31;5802:4;5799:1;5792:15;5830:4;5827:1;5820:15;5684:161;;5471:380;;;:::o;:::-;513:5182:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Anvil.sol",
  "type": "contract"
}